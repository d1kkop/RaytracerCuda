/*
Copyright 2017 Ioannis Makris

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// This file was generated by glatter.py script.



#ifdef GLATTER_GL
#if !defined(GL_VERSION_ES_CM_1_0)
#if !defined(__GL_H__)
#if defined(__gl_h_)
#if defined(GL_ARB_multitexture)
#ifndef glActiveTextureARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glActiveTextureARB, (texture), (GLenum texture))
#define glActiveTextureARB_defined
#endif
#ifndef glClientActiveTextureARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClientActiveTextureARB, (texture), (GLenum texture))
#define glClientActiveTextureARB_defined
#endif
#ifndef glMultiTexCoord1dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1dARB, (target, s), (GLenum target, GLdouble s))
#define glMultiTexCoord1dARB_defined
#endif
#ifndef glMultiTexCoord1dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord1dvARB_defined
#endif
#ifndef glMultiTexCoord1fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1fARB, (target, s), (GLenum target, GLfloat s))
#define glMultiTexCoord1fARB_defined
#endif
#ifndef glMultiTexCoord1fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord1fvARB_defined
#endif
#ifndef glMultiTexCoord1iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1iARB, (target, s), (GLenum target, GLint s))
#define glMultiTexCoord1iARB_defined
#endif
#ifndef glMultiTexCoord1ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord1ivARB_defined
#endif
#ifndef glMultiTexCoord1sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1sARB, (target, s), (GLenum target, GLshort s))
#define glMultiTexCoord1sARB_defined
#endif
#ifndef glMultiTexCoord1svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord1svARB_defined
#endif
#ifndef glMultiTexCoord2dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2dARB, (target, s, t), (GLenum target, GLdouble s, GLdouble t))
#define glMultiTexCoord2dARB_defined
#endif
#ifndef glMultiTexCoord2dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord2dvARB_defined
#endif
#ifndef glMultiTexCoord2fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2fARB, (target, s, t), (GLenum target, GLfloat s, GLfloat t))
#define glMultiTexCoord2fARB_defined
#endif
#ifndef glMultiTexCoord2fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord2fvARB_defined
#endif
#ifndef glMultiTexCoord2iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2iARB, (target, s, t), (GLenum target, GLint s, GLint t))
#define glMultiTexCoord2iARB_defined
#endif
#ifndef glMultiTexCoord2ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord2ivARB_defined
#endif
#ifndef glMultiTexCoord2sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2sARB, (target, s, t), (GLenum target, GLshort s, GLshort t))
#define glMultiTexCoord2sARB_defined
#endif
#ifndef glMultiTexCoord2svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord2svARB_defined
#endif
#ifndef glMultiTexCoord3dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3dARB, (target, s, t, r), (GLenum target, GLdouble s, GLdouble t, GLdouble r))
#define glMultiTexCoord3dARB_defined
#endif
#ifndef glMultiTexCoord3dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord3dvARB_defined
#endif
#ifndef glMultiTexCoord3fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3fARB, (target, s, t, r), (GLenum target, GLfloat s, GLfloat t, GLfloat r))
#define glMultiTexCoord3fARB_defined
#endif
#ifndef glMultiTexCoord3fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord3fvARB_defined
#endif
#ifndef glMultiTexCoord3iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3iARB, (target, s, t, r), (GLenum target, GLint s, GLint t, GLint r))
#define glMultiTexCoord3iARB_defined
#endif
#ifndef glMultiTexCoord3ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord3ivARB_defined
#endif
#ifndef glMultiTexCoord3sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3sARB, (target, s, t, r), (GLenum target, GLshort s, GLshort t, GLshort r))
#define glMultiTexCoord3sARB_defined
#endif
#ifndef glMultiTexCoord3svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord3svARB_defined
#endif
#ifndef glMultiTexCoord4dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4dARB, (target, s, t, r, q), (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q))
#define glMultiTexCoord4dARB_defined
#endif
#ifndef glMultiTexCoord4dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord4dvARB_defined
#endif
#ifndef glMultiTexCoord4fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4fARB, (target, s, t, r, q), (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q))
#define glMultiTexCoord4fARB_defined
#endif
#ifndef glMultiTexCoord4fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord4fvARB_defined
#endif
#ifndef glMultiTexCoord4iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4iARB, (target, s, t, r, q), (GLenum target, GLint s, GLint t, GLint r, GLint q))
#define glMultiTexCoord4iARB_defined
#endif
#ifndef glMultiTexCoord4ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord4ivARB_defined
#endif
#ifndef glMultiTexCoord4sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4sARB, (target, s, t, r, q), (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q))
#define glMultiTexCoord4sARB_defined
#endif
#ifndef glMultiTexCoord4svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord4svARB_defined
#endif
#endif // defined(GL_ARB_multitexture)
#if defined(GL_ATI_blend_equation_separate)
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glBlendEquationSeparateATI, (modeRGB, modeA), (GLenum modeRGB, GLenum modeA))
#define glBlendEquationSeparateATI_defined
#endif // defined(GL_ATI_blend_equation_separate)
#if defined(GL_OES_EGL_image)
#ifndef glEGLImageTargetRenderbufferStorageOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEGLImageTargetRenderbufferStorageOES, (target, image), (GLenum target, GLeglImageOES image))
#define glEGLImageTargetRenderbufferStorageOES_defined
#endif
#ifndef glEGLImageTargetTexture2DOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEGLImageTargetTexture2DOES, (target, image), (GLenum target, GLeglImageOES image))
#define glEGLImageTargetTexture2DOES_defined
#endif
#endif // defined(GL_OES_EGL_image)
#ifndef glAccum_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glAccum, (op, value), (GLenum op, GLfloat value))
#define glAccum_defined
#endif
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAlphaFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glAlphaFunc, (func, ref), (GLenum func, GLclampf ref))
#define glAlphaFunc_defined
#endif
#ifndef glAreTexturesResident_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, GLAPIENTRY, glAreTexturesResident, (n, textures, residences), (GLsizei n, const GLuint *textures, GLboolean *residences))
#define glAreTexturesResident_defined
#endif
#ifndef glArrayElement_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glArrayElement, (i), (GLint i))
#define glArrayElement_defined
#endif
#ifndef glBegin_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glBegin, (mode), (GLenum mode))
#define glBegin_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBitmap_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glBitmap, (width, height, xorig, yorig, xmove, ymove, bitmap), (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap))
#define glBitmap_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glBlendColor, (red, green, blue, alpha), (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glCallList_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCallList, (list), (GLuint list))
#define glCallList_defined
#endif
#ifndef glCallLists_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCallLists, (n, type, lists), (GLsizei n, GLenum type, const GLvoid *lists))
#define glCallLists_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearAccum_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClearAccum, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearAccum_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClearColor, (red, green, blue, alpha), (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepth_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClearDepth, (depth), (GLclampd depth))
#define glClearDepth_defined
#endif
#ifndef glClearIndex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClearIndex, (c), (GLfloat c))
#define glClearIndex_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glClientActiveTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClientActiveTexture, (texture), (GLenum texture))
#define glClientActiveTexture_defined
#endif
#ifndef glClipPlane_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glClipPlane, (plane, equation), (GLenum plane, const GLdouble *equation))
#define glClipPlane_defined
#endif
#ifndef glColor3b_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3b, (red, green, blue), (GLbyte red, GLbyte green, GLbyte blue))
#define glColor3b_defined
#endif
#ifndef glColor3bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3bv, (v), (const GLbyte *v))
#define glColor3bv_defined
#endif
#ifndef glColor3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3d, (red, green, blue), (GLdouble red, GLdouble green, GLdouble blue))
#define glColor3d_defined
#endif
#ifndef glColor3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3dv, (v), (const GLdouble *v))
#define glColor3dv_defined
#endif
#ifndef glColor3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3f, (red, green, blue), (GLfloat red, GLfloat green, GLfloat blue))
#define glColor3f_defined
#endif
#ifndef glColor3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3fv, (v), (const GLfloat *v))
#define glColor3fv_defined
#endif
#ifndef glColor3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3i, (red, green, blue), (GLint red, GLint green, GLint blue))
#define glColor3i_defined
#endif
#ifndef glColor3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3iv, (v), (const GLint *v))
#define glColor3iv_defined
#endif
#ifndef glColor3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3s, (red, green, blue), (GLshort red, GLshort green, GLshort blue))
#define glColor3s_defined
#endif
#ifndef glColor3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3sv, (v), (const GLshort *v))
#define glColor3sv_defined
#endif
#ifndef glColor3ub_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3ub, (red, green, blue), (GLubyte red, GLubyte green, GLubyte blue))
#define glColor3ub_defined
#endif
#ifndef glColor3ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3ubv, (v), (const GLubyte *v))
#define glColor3ubv_defined
#endif
#ifndef glColor3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3ui, (red, green, blue), (GLuint red, GLuint green, GLuint blue))
#define glColor3ui_defined
#endif
#ifndef glColor3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3uiv, (v), (const GLuint *v))
#define glColor3uiv_defined
#endif
#ifndef glColor3us_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3us, (red, green, blue), (GLushort red, GLushort green, GLushort blue))
#define glColor3us_defined
#endif
#ifndef glColor3usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor3usv, (v), (const GLushort *v))
#define glColor3usv_defined
#endif
#ifndef glColor4b_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4b, (red, green, blue, alpha), (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha))
#define glColor4b_defined
#endif
#ifndef glColor4bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4bv, (v), (const GLbyte *v))
#define glColor4bv_defined
#endif
#ifndef glColor4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4d, (red, green, blue, alpha), (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha))
#define glColor4d_defined
#endif
#ifndef glColor4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4dv, (v), (const GLdouble *v))
#define glColor4dv_defined
#endif
#ifndef glColor4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4f, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glColor4f_defined
#endif
#ifndef glColor4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4fv, (v), (const GLfloat *v))
#define glColor4fv_defined
#endif
#ifndef glColor4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4i, (red, green, blue, alpha), (GLint red, GLint green, GLint blue, GLint alpha))
#define glColor4i_defined
#endif
#ifndef glColor4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4iv, (v), (const GLint *v))
#define glColor4iv_defined
#endif
#ifndef glColor4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4s, (red, green, blue, alpha), (GLshort red, GLshort green, GLshort blue, GLshort alpha))
#define glColor4s_defined
#endif
#ifndef glColor4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4sv, (v), (const GLshort *v))
#define glColor4sv_defined
#endif
#ifndef glColor4ub_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4ub, (red, green, blue, alpha), (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha))
#define glColor4ub_defined
#endif
#ifndef glColor4ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4ubv, (v), (const GLubyte *v))
#define glColor4ubv_defined
#endif
#ifndef glColor4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4ui, (red, green, blue, alpha), (GLuint red, GLuint green, GLuint blue, GLuint alpha))
#define glColor4ui_defined
#endif
#ifndef glColor4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4uiv, (v), (const GLuint *v))
#define glColor4uiv_defined
#endif
#ifndef glColor4us_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4us, (red, green, blue, alpha), (GLushort red, GLushort green, GLushort blue, GLushort alpha))
#define glColor4us_defined
#endif
#ifndef glColor4usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColor4usv, (v), (const GLushort *v))
#define glColor4usv_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glColorMaterial_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColorMaterial, (face, mode), (GLenum face, GLenum mode))
#define glColorMaterial_defined
#endif
#ifndef glColorPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColorPointer, (size, type, stride, ptr), (GLint size, GLenum type, GLsizei stride, const GLvoid *ptr))
#define glColorPointer_defined
#endif
#ifndef glColorSubTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColorSubTable, (target, start, count, format, type, data), (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data))
#define glColorSubTable_defined
#endif
#ifndef glColorTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColorTable, (target, internalformat, width, format, type, table), (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table))
#define glColorTable_defined
#endif
#ifndef glColorTableParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColorTableParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glColorTableParameterfv_defined
#endif
#ifndef glColorTableParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glColorTableParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glColorTableParameteriv_defined
#endif
#ifndef glCompressedTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCompressedTexImage1D, (target, level, internalformat, width, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexImage1D_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCompressedTexSubImage1D, (target, level, xoffset, width, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexSubImage1D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glConvolutionFilter1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glConvolutionFilter1D, (target, internalformat, width, format, type, image), (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image))
#define glConvolutionFilter1D_defined
#endif
#ifndef glConvolutionFilter2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glConvolutionFilter2D, (target, internalformat, width, height, format, type, image), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image))
#define glConvolutionFilter2D_defined
#endif
#ifndef glConvolutionParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glConvolutionParameterf, (target, pname, params), (GLenum target, GLenum pname, GLfloat params))
#define glConvolutionParameterf_defined
#endif
#ifndef glConvolutionParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glConvolutionParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glConvolutionParameterfv_defined
#endif
#ifndef glConvolutionParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glConvolutionParameteri, (target, pname, params), (GLenum target, GLenum pname, GLint params))
#define glConvolutionParameteri_defined
#endif
#ifndef glConvolutionParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glConvolutionParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glConvolutionParameteriv_defined
#endif
#ifndef glCopyColorSubTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyColorSubTable, (target, start, x, y, width), (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width))
#define glCopyColorSubTable_defined
#endif
#ifndef glCopyColorTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyColorTable, (target, internalformat, x, y, width), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))
#define glCopyColorTable_defined
#endif
#ifndef glCopyConvolutionFilter1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyConvolutionFilter1D, (target, internalformat, x, y, width), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))
#define glCopyConvolutionFilter1D_defined
#endif
#ifndef glCopyConvolutionFilter2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyConvolutionFilter2D, (target, internalformat, x, y, width, height), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyConvolutionFilter2D_defined
#endif
#ifndef glCopyPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyPixels, (x, y, width, height, type), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type))
#define glCopyPixels_defined
#endif
#ifndef glCopyTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyTexImage1D, (target, level, internalformat, x, y, width, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyTexImage1D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyTexSubImage1D, (target, level, xoffset, x, y, width), (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTexSubImage1D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteLists_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDeleteLists, (list, range), (GLuint list, GLsizei range))
#define glDeleteLists_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDepthRange, (near_val, far_val), (GLclampd near_val, GLclampd far_val))
#define glDepthRange_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableClientState_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDisableClientState, (cap), (GLenum cap))
#define glDisableClientState_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDrawBuffer, (mode), (GLenum mode))
#define glDrawBuffer_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices))
#define glDrawElements_defined
#endif
#ifndef glDrawPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDrawPixels, (width, height, format, type, pixels), (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels))
#define glDrawPixels_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glEdgeFlag_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEdgeFlag, (flag), (GLboolean flag))
#define glEdgeFlag_defined
#endif
#ifndef glEdgeFlagPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEdgeFlagPointer, (stride, ptr), (GLsizei stride, const GLvoid *ptr))
#define glEdgeFlagPointer_defined
#endif
#ifndef glEdgeFlagv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEdgeFlagv, (flag), (const GLboolean *flag))
#define glEdgeFlagv_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableClientState_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEnableClientState, (cap), (GLenum cap))
#define glEnableClientState_defined
#endif
#ifndef glEnd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEnd, (), (void))
#define glEnd_defined
#endif
#ifndef glEndList_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEndList, (), (void))
#define glEndList_defined
#endif
#ifndef glEvalCoord1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord1d, (u), (GLdouble u))
#define glEvalCoord1d_defined
#endif
#ifndef glEvalCoord1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord1dv, (u), (const GLdouble *u))
#define glEvalCoord1dv_defined
#endif
#ifndef glEvalCoord1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord1f, (u), (GLfloat u))
#define glEvalCoord1f_defined
#endif
#ifndef glEvalCoord1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord1fv, (u), (const GLfloat *u))
#define glEvalCoord1fv_defined
#endif
#ifndef glEvalCoord2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord2d, (u, v), (GLdouble u, GLdouble v))
#define glEvalCoord2d_defined
#endif
#ifndef glEvalCoord2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord2dv, (u), (const GLdouble *u))
#define glEvalCoord2dv_defined
#endif
#ifndef glEvalCoord2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord2f, (u, v), (GLfloat u, GLfloat v))
#define glEvalCoord2f_defined
#endif
#ifndef glEvalCoord2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalCoord2fv, (u), (const GLfloat *u))
#define glEvalCoord2fv_defined
#endif
#ifndef glEvalMesh1_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalMesh1, (mode, i1, i2), (GLenum mode, GLint i1, GLint i2))
#define glEvalMesh1_defined
#endif
#ifndef glEvalMesh2_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalMesh2, (mode, i1, i2, j1, j2), (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2))
#define glEvalMesh2_defined
#endif
#ifndef glEvalPoint1_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalPoint1, (i), (GLint i))
#define glEvalPoint1_defined
#endif
#ifndef glEvalPoint2_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glEvalPoint2, (i, j), (GLint i, GLint j))
#define glEvalPoint2_defined
#endif
#ifndef glFeedbackBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFeedbackBuffer, (size, type, buffer), (GLsizei size, GLenum type, GLfloat *buffer))
#define glFeedbackBuffer_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFogf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFogf, (pname, param), (GLenum pname, GLfloat param))
#define glFogf_defined
#endif
#ifndef glFogfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFogfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glFogfv_defined
#endif
#ifndef glFogi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFogi, (pname, param), (GLenum pname, GLint param))
#define glFogi_defined
#endif
#ifndef glFogiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFogiv, (pname, params), (GLenum pname, const GLint *params))
#define glFogiv_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glFrustum_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glFrustum, (left, right, bottom, top, near_val, far_val), (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val))
#define glFrustum_defined
#endif
#ifndef glGenLists_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, GLAPIENTRY, glGenLists, (range), (GLsizei range))
#define glGenLists_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetBooleanv, (pname, params), (GLenum pname, GLboolean *params))
#define glGetBooleanv_defined
#endif
#ifndef glGetClipPlane_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetClipPlane, (plane, equation), (GLenum plane, GLdouble *equation))
#define glGetClipPlane_defined
#endif
#ifndef glGetColorTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetColorTable, (target, format, type, table), (GLenum target, GLenum format, GLenum type, GLvoid *table))
#define glGetColorTable_defined
#endif
#ifndef glGetColorTableParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetColorTableParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetColorTableParameterfv_defined
#endif
#ifndef glGetColorTableParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetColorTableParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetColorTableParameteriv_defined
#endif
#ifndef glGetCompressedTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetCompressedTexImage, (target, lod, img), (GLenum target, GLint lod, GLvoid *img))
#define glGetCompressedTexImage_defined
#endif
#ifndef glGetConvolutionFilter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetConvolutionFilter, (target, format, type, image), (GLenum target, GLenum format, GLenum type, GLvoid *image))
#define glGetConvolutionFilter_defined
#endif
#ifndef glGetConvolutionParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetConvolutionParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetConvolutionParameterfv_defined
#endif
#ifndef glGetConvolutionParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetConvolutionParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetConvolutionParameteriv_defined
#endif
#ifndef glGetDoublev_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetDoublev, (pname, params), (GLenum pname, GLdouble *params))
#define glGetDoublev_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, GLAPIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetFloatv, (pname, params), (GLenum pname, GLfloat *params))
#define glGetFloatv_defined
#endif
#ifndef glGetHistogram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetHistogram, (target, reset, format, type, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values))
#define glGetHistogram_defined
#endif
#ifndef glGetHistogramParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetHistogramParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetHistogramParameterfv_defined
#endif
#ifndef glGetHistogramParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetHistogramParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetHistogramParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetIntegerv, (pname, params), (GLenum pname, GLint *params))
#define glGetIntegerv_defined
#endif
#ifndef glGetLightfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetLightfv, (light, pname, params), (GLenum light, GLenum pname, GLfloat *params))
#define glGetLightfv_defined
#endif
#ifndef glGetLightiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetLightiv, (light, pname, params), (GLenum light, GLenum pname, GLint *params))
#define glGetLightiv_defined
#endif
#ifndef glGetMapdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMapdv, (target, query, v), (GLenum target, GLenum query, GLdouble *v))
#define glGetMapdv_defined
#endif
#ifndef glGetMapfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMapfv, (target, query, v), (GLenum target, GLenum query, GLfloat *v))
#define glGetMapfv_defined
#endif
#ifndef glGetMapiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMapiv, (target, query, v), (GLenum target, GLenum query, GLint *v))
#define glGetMapiv_defined
#endif
#ifndef glGetMaterialfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMaterialfv, (face, pname, params), (GLenum face, GLenum pname, GLfloat *params))
#define glGetMaterialfv_defined
#endif
#ifndef glGetMaterialiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMaterialiv, (face, pname, params), (GLenum face, GLenum pname, GLint *params))
#define glGetMaterialiv_defined
#endif
#ifndef glGetMinmax_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMinmax, (target, reset, format, types, values), (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values))
#define glGetMinmax_defined
#endif
#ifndef glGetMinmaxParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMinmaxParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetMinmaxParameterfv_defined
#endif
#ifndef glGetMinmaxParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetMinmaxParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetMinmaxParameteriv_defined
#endif
#ifndef glGetPixelMapfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetPixelMapfv, (map, values), (GLenum map, GLfloat *values))
#define glGetPixelMapfv_defined
#endif
#ifndef glGetPixelMapuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetPixelMapuiv, (map, values), (GLenum map, GLuint *values))
#define glGetPixelMapuiv_defined
#endif
#ifndef glGetPixelMapusv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetPixelMapusv, (map, values), (GLenum map, GLushort *values))
#define glGetPixelMapusv_defined
#endif
#ifndef glGetPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetPointerv, (pname, params), (GLenum pname, GLvoid **params))
#define glGetPointerv_defined
#endif
#ifndef glGetPolygonStipple_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetPolygonStipple, (mask), (GLubyte *mask))
#define glGetPolygonStipple_defined
#endif
#ifndef glGetSeparableFilter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetSeparableFilter, (target, format, type, row, column, span), (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span))
#define glGetSeparableFilter_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GLAPI, const GLubyte *, GLAPIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexEnvfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexEnvfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexEnvfv_defined
#endif
#ifndef glGetTexEnviv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexEnviv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexEnviv_defined
#endif
#ifndef glGetTexGendv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexGendv, (coord, pname, params), (GLenum coord, GLenum pname, GLdouble *params))
#define glGetTexGendv_defined
#endif
#ifndef glGetTexGenfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexGenfv, (coord, pname, params), (GLenum coord, GLenum pname, GLfloat *params))
#define glGetTexGenfv_defined
#endif
#ifndef glGetTexGeniv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexGeniv, (coord, pname, params), (GLenum coord, GLenum pname, GLint *params))
#define glGetTexGeniv_defined
#endif
#ifndef glGetTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexImage, (target, level, format, type, pixels), (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels))
#define glGetTexImage_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glHistogram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glHistogram, (target, width, internalformat, sink), (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink))
#define glHistogram_defined
#endif
#ifndef glIndexMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexMask, (mask), (GLuint mask))
#define glIndexMask_defined
#endif
#ifndef glIndexPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexPointer, (type, stride, ptr), (GLenum type, GLsizei stride, const GLvoid *ptr))
#define glIndexPointer_defined
#endif
#ifndef glIndexd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexd, (c), (GLdouble c))
#define glIndexd_defined
#endif
#ifndef glIndexdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexdv, (c), (const GLdouble *c))
#define glIndexdv_defined
#endif
#ifndef glIndexf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexf, (c), (GLfloat c))
#define glIndexf_defined
#endif
#ifndef glIndexfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexfv, (c), (const GLfloat *c))
#define glIndexfv_defined
#endif
#ifndef glIndexi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexi, (c), (GLint c))
#define glIndexi_defined
#endif
#ifndef glIndexiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexiv, (c), (const GLint *c))
#define glIndexiv_defined
#endif
#ifndef glIndexs_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexs, (c), (GLshort c))
#define glIndexs_defined
#endif
#ifndef glIndexsv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexsv, (c), (const GLshort *c))
#define glIndexsv_defined
#endif
#ifndef glIndexub_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexub, (c), (GLubyte c))
#define glIndexub_defined
#endif
#ifndef glIndexubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glIndexubv, (c), (const GLubyte *c))
#define glIndexubv_defined
#endif
#ifndef glInitNames_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glInitNames, (), (void))
#define glInitNames_defined
#endif
#ifndef glInterleavedArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glInterleavedArrays, (format, stride, pointer), (GLenum format, GLsizei stride, const GLvoid *pointer))
#define glInterleavedArrays_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, GLAPIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsList_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, GLAPIENTRY, glIsList, (list), (GLuint list))
#define glIsList_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, GLAPIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLightModelf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLightModelf, (pname, param), (GLenum pname, GLfloat param))
#define glLightModelf_defined
#endif
#ifndef glLightModelfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLightModelfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glLightModelfv_defined
#endif
#ifndef glLightModeli_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLightModeli, (pname, param), (GLenum pname, GLint param))
#define glLightModeli_defined
#endif
#ifndef glLightModeliv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLightModeliv, (pname, params), (GLenum pname, const GLint *params))
#define glLightModeliv_defined
#endif
#ifndef glLightf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLightf, (light, pname, param), (GLenum light, GLenum pname, GLfloat param))
#define glLightf_defined
#endif
#ifndef glLightfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLightfv, (light, pname, params), (GLenum light, GLenum pname, const GLfloat *params))
#define glLightfv_defined
#endif
#ifndef glLighti_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLighti, (light, pname, param), (GLenum light, GLenum pname, GLint param))
#define glLighti_defined
#endif
#ifndef glLightiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLightiv, (light, pname, params), (GLenum light, GLenum pname, const GLint *params))
#define glLightiv_defined
#endif
#ifndef glLineStipple_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLineStipple, (factor, pattern), (GLint factor, GLushort pattern))
#define glLineStipple_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glListBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glListBase, (base), (GLuint base))
#define glListBase_defined
#endif
#ifndef glLoadIdentity_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLoadIdentity, (), (void))
#define glLoadIdentity_defined
#endif
#ifndef glLoadMatrixd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLoadMatrixd, (m), (const GLdouble *m))
#define glLoadMatrixd_defined
#endif
#ifndef glLoadMatrixf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLoadMatrixf, (m), (const GLfloat *m))
#define glLoadMatrixf_defined
#endif
#ifndef glLoadName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLoadName, (name), (GLuint name))
#define glLoadName_defined
#endif
#ifndef glLoadTransposeMatrixd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLoadTransposeMatrixd, (m), (const GLdouble m[16]))
#define glLoadTransposeMatrixd_defined
#endif
#ifndef glLoadTransposeMatrixf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLoadTransposeMatrixf, (m), (const GLfloat m[16]))
#define glLoadTransposeMatrixf_defined
#endif
#ifndef glLogicOp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glLogicOp, (opcode), (GLenum opcode))
#define glLogicOp_defined
#endif
#ifndef glMap1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMap1d, (target, u1, u2, stride, order, points), (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points))
#define glMap1d_defined
#endif
#ifndef glMap1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMap1f, (target, u1, u2, stride, order, points), (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points))
#define glMap1f_defined
#endif
#ifndef glMap2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMap2d, (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points), (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points))
#define glMap2d_defined
#endif
#ifndef glMap2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMap2f, (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points), (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points))
#define glMap2f_defined
#endif
#ifndef glMapGrid1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMapGrid1d, (un, u1, u2), (GLint un, GLdouble u1, GLdouble u2))
#define glMapGrid1d_defined
#endif
#ifndef glMapGrid1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMapGrid1f, (un, u1, u2), (GLint un, GLfloat u1, GLfloat u2))
#define glMapGrid1f_defined
#endif
#ifndef glMapGrid2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMapGrid2d, (un, u1, u2, vn, v1, v2), (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2))
#define glMapGrid2d_defined
#endif
#ifndef glMapGrid2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMapGrid2f, (un, u1, u2, vn, v1, v2), (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2))
#define glMapGrid2f_defined
#endif
#ifndef glMaterialf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMaterialf, (face, pname, param), (GLenum face, GLenum pname, GLfloat param))
#define glMaterialf_defined
#endif
#ifndef glMaterialfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMaterialfv, (face, pname, params), (GLenum face, GLenum pname, const GLfloat *params))
#define glMaterialfv_defined
#endif
#ifndef glMateriali_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMateriali, (face, pname, param), (GLenum face, GLenum pname, GLint param))
#define glMateriali_defined
#endif
#ifndef glMaterialiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMaterialiv, (face, pname, params), (GLenum face, GLenum pname, const GLint *params))
#define glMaterialiv_defined
#endif
#ifndef glMatrixMode_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMatrixMode, (mode), (GLenum mode))
#define glMatrixMode_defined
#endif
#ifndef glMinmax_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMinmax, (target, internalformat, sink), (GLenum target, GLenum internalformat, GLboolean sink))
#define glMinmax_defined
#endif
#ifndef glMultMatrixd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultMatrixd, (m), (const GLdouble *m))
#define glMultMatrixd_defined
#endif
#ifndef glMultMatrixf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultMatrixf, (m), (const GLfloat *m))
#define glMultMatrixf_defined
#endif
#ifndef glMultTransposeMatrixd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultTransposeMatrixd, (m), (const GLdouble m[16]))
#define glMultTransposeMatrixd_defined
#endif
#ifndef glMultTransposeMatrixf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultTransposeMatrixf, (m), (const GLfloat m[16]))
#define glMultTransposeMatrixf_defined
#endif
#ifndef glMultiTexCoord1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1d, (target, s), (GLenum target, GLdouble s))
#define glMultiTexCoord1d_defined
#endif
#ifndef glMultiTexCoord1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord1dv_defined
#endif
#ifndef glMultiTexCoord1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1f, (target, s), (GLenum target, GLfloat s))
#define glMultiTexCoord1f_defined
#endif
#ifndef glMultiTexCoord1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord1fv_defined
#endif
#ifndef glMultiTexCoord1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1i, (target, s), (GLenum target, GLint s))
#define glMultiTexCoord1i_defined
#endif
#ifndef glMultiTexCoord1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord1iv_defined
#endif
#ifndef glMultiTexCoord1s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1s, (target, s), (GLenum target, GLshort s))
#define glMultiTexCoord1s_defined
#endif
#ifndef glMultiTexCoord1sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord1sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord1sv_defined
#endif
#ifndef glMultiTexCoord2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2d, (target, s, t), (GLenum target, GLdouble s, GLdouble t))
#define glMultiTexCoord2d_defined
#endif
#ifndef glMultiTexCoord2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord2dv_defined
#endif
#ifndef glMultiTexCoord2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2f, (target, s, t), (GLenum target, GLfloat s, GLfloat t))
#define glMultiTexCoord2f_defined
#endif
#ifndef glMultiTexCoord2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord2fv_defined
#endif
#ifndef glMultiTexCoord2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2i, (target, s, t), (GLenum target, GLint s, GLint t))
#define glMultiTexCoord2i_defined
#endif
#ifndef glMultiTexCoord2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord2iv_defined
#endif
#ifndef glMultiTexCoord2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2s, (target, s, t), (GLenum target, GLshort s, GLshort t))
#define glMultiTexCoord2s_defined
#endif
#ifndef glMultiTexCoord2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord2sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord2sv_defined
#endif
#ifndef glMultiTexCoord3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3d, (target, s, t, r), (GLenum target, GLdouble s, GLdouble t, GLdouble r))
#define glMultiTexCoord3d_defined
#endif
#ifndef glMultiTexCoord3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord3dv_defined
#endif
#ifndef glMultiTexCoord3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3f, (target, s, t, r), (GLenum target, GLfloat s, GLfloat t, GLfloat r))
#define glMultiTexCoord3f_defined
#endif
#ifndef glMultiTexCoord3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord3fv_defined
#endif
#ifndef glMultiTexCoord3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3i, (target, s, t, r), (GLenum target, GLint s, GLint t, GLint r))
#define glMultiTexCoord3i_defined
#endif
#ifndef glMultiTexCoord3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord3iv_defined
#endif
#ifndef glMultiTexCoord3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3s, (target, s, t, r), (GLenum target, GLshort s, GLshort t, GLshort r))
#define glMultiTexCoord3s_defined
#endif
#ifndef glMultiTexCoord3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord3sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord3sv_defined
#endif
#ifndef glMultiTexCoord4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4d, (target, s, t, r, q), (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q))
#define glMultiTexCoord4d_defined
#endif
#ifndef glMultiTexCoord4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord4dv_defined
#endif
#ifndef glMultiTexCoord4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4f, (target, s, t, r, q), (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q))
#define glMultiTexCoord4f_defined
#endif
#ifndef glMultiTexCoord4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord4fv_defined
#endif
#ifndef glMultiTexCoord4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4i, (target, s, t, r, q), (GLenum target, GLint s, GLint t, GLint r, GLint q))
#define glMultiTexCoord4i_defined
#endif
#ifndef glMultiTexCoord4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord4iv_defined
#endif
#ifndef glMultiTexCoord4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4s, (target, s, t, r, q), (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q))
#define glMultiTexCoord4s_defined
#endif
#ifndef glMultiTexCoord4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glMultiTexCoord4sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord4sv_defined
#endif
#ifndef glNewList_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNewList, (list, mode), (GLuint list, GLenum mode))
#define glNewList_defined
#endif
#ifndef glNormal3b_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3b, (nx, ny, nz), (GLbyte nx, GLbyte ny, GLbyte nz))
#define glNormal3b_defined
#endif
#ifndef glNormal3bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3bv, (v), (const GLbyte *v))
#define glNormal3bv_defined
#endif
#ifndef glNormal3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3d, (nx, ny, nz), (GLdouble nx, GLdouble ny, GLdouble nz))
#define glNormal3d_defined
#endif
#ifndef glNormal3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3dv, (v), (const GLdouble *v))
#define glNormal3dv_defined
#endif
#ifndef glNormal3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3f, (nx, ny, nz), (GLfloat nx, GLfloat ny, GLfloat nz))
#define glNormal3f_defined
#endif
#ifndef glNormal3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3fv, (v), (const GLfloat *v))
#define glNormal3fv_defined
#endif
#ifndef glNormal3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3i, (nx, ny, nz), (GLint nx, GLint ny, GLint nz))
#define glNormal3i_defined
#endif
#ifndef glNormal3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3iv, (v), (const GLint *v))
#define glNormal3iv_defined
#endif
#ifndef glNormal3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3s, (nx, ny, nz), (GLshort nx, GLshort ny, GLshort nz))
#define glNormal3s_defined
#endif
#ifndef glNormal3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormal3sv, (v), (const GLshort *v))
#define glNormal3sv_defined
#endif
#ifndef glNormalPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glNormalPointer, (type, stride, ptr), (GLenum type, GLsizei stride, const GLvoid *ptr))
#define glNormalPointer_defined
#endif
#ifndef glOrtho_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glOrtho, (left, right, bottom, top, near_val, far_val), (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val))
#define glOrtho_defined
#endif
#ifndef glPassThrough_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPassThrough, (token), (GLfloat token))
#define glPassThrough_defined
#endif
#ifndef glPixelMapfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelMapfv, (map, mapsize, values), (GLenum map, GLsizei mapsize, const GLfloat *values))
#define glPixelMapfv_defined
#endif
#ifndef glPixelMapuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelMapuiv, (map, mapsize, values), (GLenum map, GLsizei mapsize, const GLuint *values))
#define glPixelMapuiv_defined
#endif
#ifndef glPixelMapusv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelMapusv, (map, mapsize, values), (GLenum map, GLsizei mapsize, const GLushort *values))
#define glPixelMapusv_defined
#endif
#ifndef glPixelStoref_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelStoref, (pname, param), (GLenum pname, GLfloat param))
#define glPixelStoref_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPixelTransferf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelTransferf, (pname, param), (GLenum pname, GLfloat param))
#define glPixelTransferf_defined
#endif
#ifndef glPixelTransferi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelTransferi, (pname, param), (GLenum pname, GLint param))
#define glPixelTransferi_defined
#endif
#ifndef glPixelZoom_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPixelZoom, (xfactor, yfactor), (GLfloat xfactor, GLfloat yfactor))
#define glPixelZoom_defined
#endif
#ifndef glPointSize_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPointSize, (size), (GLfloat size))
#define glPointSize_defined
#endif
#ifndef glPolygonMode_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPolygonMode, (face, mode), (GLenum face, GLenum mode))
#define glPolygonMode_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glPolygonStipple_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPolygonStipple, (mask), (const GLubyte *mask))
#define glPolygonStipple_defined
#endif
#ifndef glPopAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPopAttrib, (), (void))
#define glPopAttrib_defined
#endif
#ifndef glPopClientAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPopClientAttrib, (), (void))
#define glPopClientAttrib_defined
#endif
#ifndef glPopMatrix_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPopMatrix, (), (void))
#define glPopMatrix_defined
#endif
#ifndef glPopName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPopName, (), (void))
#define glPopName_defined
#endif
#ifndef glPrioritizeTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPrioritizeTextures, (n, textures, priorities), (GLsizei n, const GLuint *textures, const GLclampf *priorities))
#define glPrioritizeTextures_defined
#endif
#ifndef glPushAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPushAttrib, (mask), (GLbitfield mask))
#define glPushAttrib_defined
#endif
#ifndef glPushClientAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPushClientAttrib, (mask), (GLbitfield mask))
#define glPushClientAttrib_defined
#endif
#ifndef glPushMatrix_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPushMatrix, (), (void))
#define glPushMatrix_defined
#endif
#ifndef glPushName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glPushName, (name), (GLuint name))
#define glPushName_defined
#endif
#ifndef glRasterPos2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2d, (x, y), (GLdouble x, GLdouble y))
#define glRasterPos2d_defined
#endif
#ifndef glRasterPos2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2dv, (v), (const GLdouble *v))
#define glRasterPos2dv_defined
#endif
#ifndef glRasterPos2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2f, (x, y), (GLfloat x, GLfloat y))
#define glRasterPos2f_defined
#endif
#ifndef glRasterPos2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2fv, (v), (const GLfloat *v))
#define glRasterPos2fv_defined
#endif
#ifndef glRasterPos2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2i, (x, y), (GLint x, GLint y))
#define glRasterPos2i_defined
#endif
#ifndef glRasterPos2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2iv, (v), (const GLint *v))
#define glRasterPos2iv_defined
#endif
#ifndef glRasterPos2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2s, (x, y), (GLshort x, GLshort y))
#define glRasterPos2s_defined
#endif
#ifndef glRasterPos2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos2sv, (v), (const GLshort *v))
#define glRasterPos2sv_defined
#endif
#ifndef glRasterPos3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3d, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glRasterPos3d_defined
#endif
#ifndef glRasterPos3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3dv, (v), (const GLdouble *v))
#define glRasterPos3dv_defined
#endif
#ifndef glRasterPos3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3f, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glRasterPos3f_defined
#endif
#ifndef glRasterPos3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3fv, (v), (const GLfloat *v))
#define glRasterPos3fv_defined
#endif
#ifndef glRasterPos3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3i, (x, y, z), (GLint x, GLint y, GLint z))
#define glRasterPos3i_defined
#endif
#ifndef glRasterPos3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3iv, (v), (const GLint *v))
#define glRasterPos3iv_defined
#endif
#ifndef glRasterPos3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3s, (x, y, z), (GLshort x, GLshort y, GLshort z))
#define glRasterPos3s_defined
#endif
#ifndef glRasterPos3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos3sv, (v), (const GLshort *v))
#define glRasterPos3sv_defined
#endif
#ifndef glRasterPos4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4d, (x, y, z, w), (GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glRasterPos4d_defined
#endif
#ifndef glRasterPos4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4dv, (v), (const GLdouble *v))
#define glRasterPos4dv_defined
#endif
#ifndef glRasterPos4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4f, (x, y, z, w), (GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glRasterPos4f_defined
#endif
#ifndef glRasterPos4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4fv, (v), (const GLfloat *v))
#define glRasterPos4fv_defined
#endif
#ifndef glRasterPos4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4i, (x, y, z, w), (GLint x, GLint y, GLint z, GLint w))
#define glRasterPos4i_defined
#endif
#ifndef glRasterPos4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4iv, (v), (const GLint *v))
#define glRasterPos4iv_defined
#endif
#ifndef glRasterPos4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4s, (x, y, z, w), (GLshort x, GLshort y, GLshort z, GLshort w))
#define glRasterPos4s_defined
#endif
#ifndef glRasterPos4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRasterPos4sv, (v), (const GLshort *v))
#define glRasterPos4sv_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glReadBuffer, (mode), (GLenum mode))
#define glReadBuffer_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels))
#define glReadPixels_defined
#endif
#ifndef glRectd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRectd, (x1, y1, x2, y2), (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2))
#define glRectd_defined
#endif
#ifndef glRectdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRectdv, (v1, v2), (const GLdouble *v1, const GLdouble *v2))
#define glRectdv_defined
#endif
#ifndef glRectf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRectf, (x1, y1, x2, y2), (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2))
#define glRectf_defined
#endif
#ifndef glRectfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRectfv, (v1, v2), (const GLfloat *v1, const GLfloat *v2))
#define glRectfv_defined
#endif
#ifndef glRecti_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRecti, (x1, y1, x2, y2), (GLint x1, GLint y1, GLint x2, GLint y2))
#define glRecti_defined
#endif
#ifndef glRectiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRectiv, (v1, v2), (const GLint *v1, const GLint *v2))
#define glRectiv_defined
#endif
#ifndef glRects_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRects, (x1, y1, x2, y2), (GLshort x1, GLshort y1, GLshort x2, GLshort y2))
#define glRects_defined
#endif
#ifndef glRectsv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRectsv, (v1, v2), (const GLshort *v1, const GLshort *v2))
#define glRectsv_defined
#endif
#ifndef glRenderMode_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, GLAPIENTRY, glRenderMode, (mode), (GLenum mode))
#define glRenderMode_defined
#endif
#ifndef glResetHistogram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glResetHistogram, (target), (GLenum target))
#define glResetHistogram_defined
#endif
#ifndef glResetMinmax_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glResetMinmax, (target), (GLenum target))
#define glResetMinmax_defined
#endif
#ifndef glRotated_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRotated, (angle, x, y, z), (GLdouble angle, GLdouble x, GLdouble y, GLdouble z))
#define glRotated_defined
#endif
#ifndef glRotatef_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glRotatef, (angle, x, y, z), (GLfloat angle, GLfloat x, GLfloat y, GLfloat z))
#define glRotatef_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glSampleCoverage, (value, invert), (GLclampf value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScaled_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glScaled, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glScaled_defined
#endif
#ifndef glScalef_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glScalef, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glScalef_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glSelectBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glSelectBuffer, (size, buffer), (GLsizei size, GLuint *buffer))
#define glSelectBuffer_defined
#endif
#ifndef glSeparableFilter2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glSeparableFilter2D, (target, internalformat, width, height, format, type, row, column), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column))
#define glSeparableFilter2D_defined
#endif
#ifndef glShadeModel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glShadeModel, (mode), (GLenum mode))
#define glShadeModel_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glTexCoord1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1d, (s), (GLdouble s))
#define glTexCoord1d_defined
#endif
#ifndef glTexCoord1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1dv, (v), (const GLdouble *v))
#define glTexCoord1dv_defined
#endif
#ifndef glTexCoord1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1f, (s), (GLfloat s))
#define glTexCoord1f_defined
#endif
#ifndef glTexCoord1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1fv, (v), (const GLfloat *v))
#define glTexCoord1fv_defined
#endif
#ifndef glTexCoord1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1i, (s), (GLint s))
#define glTexCoord1i_defined
#endif
#ifndef glTexCoord1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1iv, (v), (const GLint *v))
#define glTexCoord1iv_defined
#endif
#ifndef glTexCoord1s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1s, (s), (GLshort s))
#define glTexCoord1s_defined
#endif
#ifndef glTexCoord1sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord1sv, (v), (const GLshort *v))
#define glTexCoord1sv_defined
#endif
#ifndef glTexCoord2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2d, (s, t), (GLdouble s, GLdouble t))
#define glTexCoord2d_defined
#endif
#ifndef glTexCoord2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2dv, (v), (const GLdouble *v))
#define glTexCoord2dv_defined
#endif
#ifndef glTexCoord2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2f, (s, t), (GLfloat s, GLfloat t))
#define glTexCoord2f_defined
#endif
#ifndef glTexCoord2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2fv, (v), (const GLfloat *v))
#define glTexCoord2fv_defined
#endif
#ifndef glTexCoord2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2i, (s, t), (GLint s, GLint t))
#define glTexCoord2i_defined
#endif
#ifndef glTexCoord2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2iv, (v), (const GLint *v))
#define glTexCoord2iv_defined
#endif
#ifndef glTexCoord2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2s, (s, t), (GLshort s, GLshort t))
#define glTexCoord2s_defined
#endif
#ifndef glTexCoord2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord2sv, (v), (const GLshort *v))
#define glTexCoord2sv_defined
#endif
#ifndef glTexCoord3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3d, (s, t, r), (GLdouble s, GLdouble t, GLdouble r))
#define glTexCoord3d_defined
#endif
#ifndef glTexCoord3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3dv, (v), (const GLdouble *v))
#define glTexCoord3dv_defined
#endif
#ifndef glTexCoord3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3f, (s, t, r), (GLfloat s, GLfloat t, GLfloat r))
#define glTexCoord3f_defined
#endif
#ifndef glTexCoord3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3fv, (v), (const GLfloat *v))
#define glTexCoord3fv_defined
#endif
#ifndef glTexCoord3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3i, (s, t, r), (GLint s, GLint t, GLint r))
#define glTexCoord3i_defined
#endif
#ifndef glTexCoord3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3iv, (v), (const GLint *v))
#define glTexCoord3iv_defined
#endif
#ifndef glTexCoord3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3s, (s, t, r), (GLshort s, GLshort t, GLshort r))
#define glTexCoord3s_defined
#endif
#ifndef glTexCoord3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord3sv, (v), (const GLshort *v))
#define glTexCoord3sv_defined
#endif
#ifndef glTexCoord4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4d, (s, t, r, q), (GLdouble s, GLdouble t, GLdouble r, GLdouble q))
#define glTexCoord4d_defined
#endif
#ifndef glTexCoord4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4dv, (v), (const GLdouble *v))
#define glTexCoord4dv_defined
#endif
#ifndef glTexCoord4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4f, (s, t, r, q), (GLfloat s, GLfloat t, GLfloat r, GLfloat q))
#define glTexCoord4f_defined
#endif
#ifndef glTexCoord4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4fv, (v), (const GLfloat *v))
#define glTexCoord4fv_defined
#endif
#ifndef glTexCoord4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4i, (s, t, r, q), (GLint s, GLint t, GLint r, GLint q))
#define glTexCoord4i_defined
#endif
#ifndef glTexCoord4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4iv, (v), (const GLint *v))
#define glTexCoord4iv_defined
#endif
#ifndef glTexCoord4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4s, (s, t, r, q), (GLshort s, GLshort t, GLshort r, GLshort q))
#define glTexCoord4s_defined
#endif
#ifndef glTexCoord4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoord4sv, (v), (const GLshort *v))
#define glTexCoord4sv_defined
#endif
#ifndef glTexCoordPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexCoordPointer, (size, type, stride, ptr), (GLint size, GLenum type, GLsizei stride, const GLvoid *ptr))
#define glTexCoordPointer_defined
#endif
#ifndef glTexEnvf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexEnvf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexEnvf_defined
#endif
#ifndef glTexEnvfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexEnvfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexEnvfv_defined
#endif
#ifndef glTexEnvi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexEnvi, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexEnvi_defined
#endif
#ifndef glTexEnviv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexEnviv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexEnviv_defined
#endif
#ifndef glTexGend_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexGend, (coord, pname, param), (GLenum coord, GLenum pname, GLdouble param))
#define glTexGend_defined
#endif
#ifndef glTexGendv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexGendv, (coord, pname, params), (GLenum coord, GLenum pname, const GLdouble *params))
#define glTexGendv_defined
#endif
#ifndef glTexGenf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexGenf, (coord, pname, param), (GLenum coord, GLenum pname, GLfloat param))
#define glTexGenf_defined
#endif
#ifndef glTexGenfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexGenfv, (coord, pname, params), (GLenum coord, GLenum pname, const GLfloat *params))
#define glTexGenfv_defined
#endif
#ifndef glTexGeni_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexGeni, (coord, pname, param), (GLenum coord, GLenum pname, GLint param))
#define glTexGeni_defined
#endif
#ifndef glTexGeniv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexGeniv, (coord, pname, params), (GLenum coord, GLenum pname, const GLint *params))
#define glTexGeniv_defined
#endif
#ifndef glTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexImage1D, (target, level, internalFormat, width, border, format, type, pixels), (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexImage1D_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexImage2D, (target, level, internalFormat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexImage3D, (target, level, internalFormat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexSubImage1D, (target, level, xoffset, width, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexSubImage1D_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexSubImage3D_defined
#endif
#ifndef glTranslated_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTranslated, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glTranslated_defined
#endif
#ifndef glTranslatef_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glTranslatef, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glTranslatef_defined
#endif
#ifndef glVertex2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2d, (x, y), (GLdouble x, GLdouble y))
#define glVertex2d_defined
#endif
#ifndef glVertex2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2dv, (v), (const GLdouble *v))
#define glVertex2dv_defined
#endif
#ifndef glVertex2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2f, (x, y), (GLfloat x, GLfloat y))
#define glVertex2f_defined
#endif
#ifndef glVertex2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2fv, (v), (const GLfloat *v))
#define glVertex2fv_defined
#endif
#ifndef glVertex2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2i, (x, y), (GLint x, GLint y))
#define glVertex2i_defined
#endif
#ifndef glVertex2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2iv, (v), (const GLint *v))
#define glVertex2iv_defined
#endif
#ifndef glVertex2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2s, (x, y), (GLshort x, GLshort y))
#define glVertex2s_defined
#endif
#ifndef glVertex2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex2sv, (v), (const GLshort *v))
#define glVertex2sv_defined
#endif
#ifndef glVertex3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3d, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glVertex3d_defined
#endif
#ifndef glVertex3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3dv, (v), (const GLdouble *v))
#define glVertex3dv_defined
#endif
#ifndef glVertex3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3f, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glVertex3f_defined
#endif
#ifndef glVertex3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3fv, (v), (const GLfloat *v))
#define glVertex3fv_defined
#endif
#ifndef glVertex3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3i, (x, y, z), (GLint x, GLint y, GLint z))
#define glVertex3i_defined
#endif
#ifndef glVertex3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3iv, (v), (const GLint *v))
#define glVertex3iv_defined
#endif
#ifndef glVertex3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3s, (x, y, z), (GLshort x, GLshort y, GLshort z))
#define glVertex3s_defined
#endif
#ifndef glVertex3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex3sv, (v), (const GLshort *v))
#define glVertex3sv_defined
#endif
#ifndef glVertex4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4d, (x, y, z, w), (GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertex4d_defined
#endif
#ifndef glVertex4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4dv, (v), (const GLdouble *v))
#define glVertex4dv_defined
#endif
#ifndef glVertex4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4f, (x, y, z, w), (GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertex4f_defined
#endif
#ifndef glVertex4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4fv, (v), (const GLfloat *v))
#define glVertex4fv_defined
#endif
#ifndef glVertex4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4i, (x, y, z, w), (GLint x, GLint y, GLint z, GLint w))
#define glVertex4i_defined
#endif
#ifndef glVertex4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4iv, (v), (const GLint *v))
#define glVertex4iv_defined
#endif
#ifndef glVertex4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4s, (x, y, z, w), (GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertex4s_defined
#endif
#ifndef glVertex4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertex4sv, (v), (const GLshort *v))
#define glVertex4sv_defined
#endif
#ifndef glVertexPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glVertexPointer, (size, type, stride, ptr), (GLint size, GLenum type, GLsizei stride, const GLvoid *ptr))
#define glVertexPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GLAPI, void, GLAPIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(__gl_h_)
#endif // !defined(__GL_H__)
#if defined(__GL_H__)
#if defined(__gl_h_)
#ifndef glAccum_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glAccum, (op, value), (GLenum op, GLfloat value))
#define glAccum_defined
#endif
#ifndef glAlphaFunc_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glAlphaFunc, (func, ref), (GLenum func, GLclampf ref))
#define glAlphaFunc_defined
#endif
#ifndef glAreTexturesResident_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, GLboolean, APIENTRY, glAreTexturesResident, (n, textures, residences), (GLsizei n, const GLuint *textures, GLboolean *residences))
#define glAreTexturesResident_defined
#endif
#ifndef glArrayElement_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glArrayElement, (i), (GLint i))
#define glArrayElement_defined
#endif
#ifndef glBegin_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glBegin, (mode), (GLenum mode))
#define glBegin_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBitmap_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glBitmap, (width, height, xorig, yorig, xmove, ymove, bitmap), (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap))
#define glBitmap_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glCallList_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCallList, (list), (GLuint list))
#define glCallList_defined
#endif
#ifndef glCallLists_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCallLists, (n, type, lists), (GLsizei n, GLenum type, const GLvoid *lists))
#define glCallLists_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearAccum_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glClearAccum, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearAccum_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glClearColor, (red, green, blue, alpha), (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepth_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glClearDepth, (depth), (GLclampd depth))
#define glClearDepth_defined
#endif
#ifndef glClearIndex_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glClearIndex, (c), (GLfloat c))
#define glClearIndex_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glClipPlane_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glClipPlane, (plane, equation), (GLenum plane, const GLdouble *equation))
#define glClipPlane_defined
#endif
#ifndef glColor3b_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3b, (red, green, blue), (GLbyte red, GLbyte green, GLbyte blue))
#define glColor3b_defined
#endif
#ifndef glColor3bv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3bv, (v), (const GLbyte *v))
#define glColor3bv_defined
#endif
#ifndef glColor3d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3d, (red, green, blue), (GLdouble red, GLdouble green, GLdouble blue))
#define glColor3d_defined
#endif
#ifndef glColor3dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3dv, (v), (const GLdouble *v))
#define glColor3dv_defined
#endif
#ifndef glColor3f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3f, (red, green, blue), (GLfloat red, GLfloat green, GLfloat blue))
#define glColor3f_defined
#endif
#ifndef glColor3fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3fv, (v), (const GLfloat *v))
#define glColor3fv_defined
#endif
#ifndef glColor3i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3i, (red, green, blue), (GLint red, GLint green, GLint blue))
#define glColor3i_defined
#endif
#ifndef glColor3iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3iv, (v), (const GLint *v))
#define glColor3iv_defined
#endif
#ifndef glColor3s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3s, (red, green, blue), (GLshort red, GLshort green, GLshort blue))
#define glColor3s_defined
#endif
#ifndef glColor3sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3sv, (v), (const GLshort *v))
#define glColor3sv_defined
#endif
#ifndef glColor3ub_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3ub, (red, green, blue), (GLubyte red, GLubyte green, GLubyte blue))
#define glColor3ub_defined
#endif
#ifndef glColor3ubv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3ubv, (v), (const GLubyte *v))
#define glColor3ubv_defined
#endif
#ifndef glColor3ui_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3ui, (red, green, blue), (GLuint red, GLuint green, GLuint blue))
#define glColor3ui_defined
#endif
#ifndef glColor3uiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3uiv, (v), (const GLuint *v))
#define glColor3uiv_defined
#endif
#ifndef glColor3us_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3us, (red, green, blue), (GLushort red, GLushort green, GLushort blue))
#define glColor3us_defined
#endif
#ifndef glColor3usv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor3usv, (v), (const GLushort *v))
#define glColor3usv_defined
#endif
#ifndef glColor4b_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4b, (red, green, blue, alpha), (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha))
#define glColor4b_defined
#endif
#ifndef glColor4bv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4bv, (v), (const GLbyte *v))
#define glColor4bv_defined
#endif
#ifndef glColor4d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4d, (red, green, blue, alpha), (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha))
#define glColor4d_defined
#endif
#ifndef glColor4dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4dv, (v), (const GLdouble *v))
#define glColor4dv_defined
#endif
#ifndef glColor4f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4f, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glColor4f_defined
#endif
#ifndef glColor4fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4fv, (v), (const GLfloat *v))
#define glColor4fv_defined
#endif
#ifndef glColor4i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4i, (red, green, blue, alpha), (GLint red, GLint green, GLint blue, GLint alpha))
#define glColor4i_defined
#endif
#ifndef glColor4iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4iv, (v), (const GLint *v))
#define glColor4iv_defined
#endif
#ifndef glColor4s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4s, (red, green, blue, alpha), (GLshort red, GLshort green, GLshort blue, GLshort alpha))
#define glColor4s_defined
#endif
#ifndef glColor4sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4sv, (v), (const GLshort *v))
#define glColor4sv_defined
#endif
#ifndef glColor4ub_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4ub, (red, green, blue, alpha), (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha))
#define glColor4ub_defined
#endif
#ifndef glColor4ubv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4ubv, (v), (const GLubyte *v))
#define glColor4ubv_defined
#endif
#ifndef glColor4ui_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4ui, (red, green, blue, alpha), (GLuint red, GLuint green, GLuint blue, GLuint alpha))
#define glColor4ui_defined
#endif
#ifndef glColor4uiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4uiv, (v), (const GLuint *v))
#define glColor4uiv_defined
#endif
#ifndef glColor4us_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4us, (red, green, blue, alpha), (GLushort red, GLushort green, GLushort blue, GLushort alpha))
#define glColor4us_defined
#endif
#ifndef glColor4usv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColor4usv, (v), (const GLushort *v))
#define glColor4usv_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glColorMaterial_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColorMaterial, (face, mode), (GLenum face, GLenum mode))
#define glColorMaterial_defined
#endif
#ifndef glColorPointer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glColorPointer, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer))
#define glColorPointer_defined
#endif
#ifndef glCopyPixels_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCopyPixels, (x, y, width, height, type), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type))
#define glCopyPixels_defined
#endif
#ifndef glCopyTexImage1D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCopyTexImage1D, (target, level, internalFormat, x, y, width, border), (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyTexImage1D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCopyTexImage2D, (target, level, internalFormat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage1D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCopyTexSubImage1D, (target, level, xoffset, x, y, width), (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTexSubImage1D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteLists_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDeleteLists, (list, range), (GLuint list, GLsizei range))
#define glDeleteLists_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRange_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDepthRange, (zNear, zFar), (GLclampd zNear, GLclampd zFar))
#define glDepthRange_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableClientState_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDisableClientState, (array), (GLenum array))
#define glDisableClientState_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawBuffer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDrawBuffer, (mode), (GLenum mode))
#define glDrawBuffer_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices))
#define glDrawElements_defined
#endif
#ifndef glDrawPixels_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glDrawPixels, (width, height, format, type, pixels), (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels))
#define glDrawPixels_defined
#endif
#ifndef glEdgeFlag_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEdgeFlag, (flag), (GLboolean flag))
#define glEdgeFlag_defined
#endif
#ifndef glEdgeFlagPointer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEdgeFlagPointer, (stride, pointer), (GLsizei stride, const GLvoid *pointer))
#define glEdgeFlagPointer_defined
#endif
#ifndef glEdgeFlagv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEdgeFlagv, (flag), (const GLboolean *flag))
#define glEdgeFlagv_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableClientState_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEnableClientState, (array), (GLenum array))
#define glEnableClientState_defined
#endif
#ifndef glEnd_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEnd, (), (void))
#define glEnd_defined
#endif
#ifndef glEndList_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEndList, (), (void))
#define glEndList_defined
#endif
#ifndef glEvalCoord1d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord1d, (u), (GLdouble u))
#define glEvalCoord1d_defined
#endif
#ifndef glEvalCoord1dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord1dv, (u), (const GLdouble *u))
#define glEvalCoord1dv_defined
#endif
#ifndef glEvalCoord1f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord1f, (u), (GLfloat u))
#define glEvalCoord1f_defined
#endif
#ifndef glEvalCoord1fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord1fv, (u), (const GLfloat *u))
#define glEvalCoord1fv_defined
#endif
#ifndef glEvalCoord2d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord2d, (u, v), (GLdouble u, GLdouble v))
#define glEvalCoord2d_defined
#endif
#ifndef glEvalCoord2dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord2dv, (u), (const GLdouble *u))
#define glEvalCoord2dv_defined
#endif
#ifndef glEvalCoord2f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord2f, (u, v), (GLfloat u, GLfloat v))
#define glEvalCoord2f_defined
#endif
#ifndef glEvalCoord2fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalCoord2fv, (u), (const GLfloat *u))
#define glEvalCoord2fv_defined
#endif
#ifndef glEvalMesh1_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalMesh1, (mode, i1, i2), (GLenum mode, GLint i1, GLint i2))
#define glEvalMesh1_defined
#endif
#ifndef glEvalMesh2_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalMesh2, (mode, i1, i2, j1, j2), (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2))
#define glEvalMesh2_defined
#endif
#ifndef glEvalPoint1_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalPoint1, (i), (GLint i))
#define glEvalPoint1_defined
#endif
#ifndef glEvalPoint2_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glEvalPoint2, (i, j), (GLint i, GLint j))
#define glEvalPoint2_defined
#endif
#ifndef glFeedbackBuffer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFeedbackBuffer, (size, type, buffer), (GLsizei size, GLenum type, GLfloat *buffer))
#define glFeedbackBuffer_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFogf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFogf, (pname, param), (GLenum pname, GLfloat param))
#define glFogf_defined
#endif
#ifndef glFogfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFogfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glFogfv_defined
#endif
#ifndef glFogi_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFogi, (pname, param), (GLenum pname, GLint param))
#define glFogi_defined
#endif
#ifndef glFogiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFogiv, (pname, params), (GLenum pname, const GLint *params))
#define glFogiv_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glFrustum_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glFrustum, (left, right, bottom, top, zNear, zFar), (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glFrustum_defined
#endif
#ifndef glGenLists_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, GLuint, APIENTRY, glGenLists, (range), (GLsizei range))
#define glGenLists_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetBooleanv, (pname, params), (GLenum pname, GLboolean *params))
#define glGetBooleanv_defined
#endif
#ifndef glGetClipPlane_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetClipPlane, (plane, equation), (GLenum plane, GLdouble *equation))
#define glGetClipPlane_defined
#endif
#ifndef glGetDoublev_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetDoublev, (pname, params), (GLenum pname, GLdouble *params))
#define glGetDoublev_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, GLenum, APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetFloatv, (pname, params), (GLenum pname, GLfloat *params))
#define glGetFloatv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetIntegerv, (pname, params), (GLenum pname, GLint *params))
#define glGetIntegerv_defined
#endif
#ifndef glGetLightfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetLightfv, (light, pname, params), (GLenum light, GLenum pname, GLfloat *params))
#define glGetLightfv_defined
#endif
#ifndef glGetLightiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetLightiv, (light, pname, params), (GLenum light, GLenum pname, GLint *params))
#define glGetLightiv_defined
#endif
#ifndef glGetMapdv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetMapdv, (target, query, v), (GLenum target, GLenum query, GLdouble *v))
#define glGetMapdv_defined
#endif
#ifndef glGetMapfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetMapfv, (target, query, v), (GLenum target, GLenum query, GLfloat *v))
#define glGetMapfv_defined
#endif
#ifndef glGetMapiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetMapiv, (target, query, v), (GLenum target, GLenum query, GLint *v))
#define glGetMapiv_defined
#endif
#ifndef glGetMaterialfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetMaterialfv, (face, pname, params), (GLenum face, GLenum pname, GLfloat *params))
#define glGetMaterialfv_defined
#endif
#ifndef glGetMaterialiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetMaterialiv, (face, pname, params), (GLenum face, GLenum pname, GLint *params))
#define glGetMaterialiv_defined
#endif
#ifndef glGetPixelMapfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetPixelMapfv, (map, values), (GLenum map, GLfloat *values))
#define glGetPixelMapfv_defined
#endif
#ifndef glGetPixelMapuiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetPixelMapuiv, (map, values), (GLenum map, GLuint *values))
#define glGetPixelMapuiv_defined
#endif
#ifndef glGetPixelMapusv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetPixelMapusv, (map, values), (GLenum map, GLushort *values))
#define glGetPixelMapusv_defined
#endif
#ifndef glGetPointerv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetPointerv, (pname, params), (GLenum pname, GLvoid* *params))
#define glGetPointerv_defined
#endif
#ifndef glGetPolygonStipple_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetPolygonStipple, (mask), (GLubyte *mask))
#define glGetPolygonStipple_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, const GLubyte *, APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexEnvfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexEnvfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexEnvfv_defined
#endif
#ifndef glGetTexEnviv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexEnviv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexEnviv_defined
#endif
#ifndef glGetTexGendv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexGendv, (coord, pname, params), (GLenum coord, GLenum pname, GLdouble *params))
#define glGetTexGendv_defined
#endif
#ifndef glGetTexGenfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexGenfv, (coord, pname, params), (GLenum coord, GLenum pname, GLfloat *params))
#define glGetTexGenfv_defined
#endif
#ifndef glGetTexGeniv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexGeniv, (coord, pname, params), (GLenum coord, GLenum pname, GLint *params))
#define glGetTexGeniv_defined
#endif
#ifndef glGetTexImage_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexImage, (target, level, format, type, pixels), (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels))
#define glGetTexImage_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIndexMask_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexMask, (mask), (GLuint mask))
#define glIndexMask_defined
#endif
#ifndef glIndexPointer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexPointer, (type, stride, pointer), (GLenum type, GLsizei stride, const GLvoid *pointer))
#define glIndexPointer_defined
#endif
#ifndef glIndexd_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexd, (c), (GLdouble c))
#define glIndexd_defined
#endif
#ifndef glIndexdv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexdv, (c), (const GLdouble *c))
#define glIndexdv_defined
#endif
#ifndef glIndexf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexf, (c), (GLfloat c))
#define glIndexf_defined
#endif
#ifndef glIndexfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexfv, (c), (const GLfloat *c))
#define glIndexfv_defined
#endif
#ifndef glIndexi_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexi, (c), (GLint c))
#define glIndexi_defined
#endif
#ifndef glIndexiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexiv, (c), (const GLint *c))
#define glIndexiv_defined
#endif
#ifndef glIndexs_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexs, (c), (GLshort c))
#define glIndexs_defined
#endif
#ifndef glIndexsv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexsv, (c), (const GLshort *c))
#define glIndexsv_defined
#endif
#ifndef glIndexub_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexub, (c), (GLubyte c))
#define glIndexub_defined
#endif
#ifndef glIndexubv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glIndexubv, (c), (const GLubyte *c))
#define glIndexubv_defined
#endif
#ifndef glInitNames_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glInitNames, (), (void))
#define glInitNames_defined
#endif
#ifndef glInterleavedArrays_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glInterleavedArrays, (format, stride, pointer), (GLenum format, GLsizei stride, const GLvoid *pointer))
#define glInterleavedArrays_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, GLboolean, APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsList_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, GLboolean, APIENTRY, glIsList, (list), (GLuint list))
#define glIsList_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, GLboolean, APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLightModelf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLightModelf, (pname, param), (GLenum pname, GLfloat param))
#define glLightModelf_defined
#endif
#ifndef glLightModelfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLightModelfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glLightModelfv_defined
#endif
#ifndef glLightModeli_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLightModeli, (pname, param), (GLenum pname, GLint param))
#define glLightModeli_defined
#endif
#ifndef glLightModeliv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLightModeliv, (pname, params), (GLenum pname, const GLint *params))
#define glLightModeliv_defined
#endif
#ifndef glLightf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLightf, (light, pname, param), (GLenum light, GLenum pname, GLfloat param))
#define glLightf_defined
#endif
#ifndef glLightfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLightfv, (light, pname, params), (GLenum light, GLenum pname, const GLfloat *params))
#define glLightfv_defined
#endif
#ifndef glLighti_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLighti, (light, pname, param), (GLenum light, GLenum pname, GLint param))
#define glLighti_defined
#endif
#ifndef glLightiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLightiv, (light, pname, params), (GLenum light, GLenum pname, const GLint *params))
#define glLightiv_defined
#endif
#ifndef glLineStipple_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLineStipple, (factor, pattern), (GLint factor, GLushort pattern))
#define glLineStipple_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glListBase_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glListBase, (base), (GLuint base))
#define glListBase_defined
#endif
#ifndef glLoadIdentity_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLoadIdentity, (), (void))
#define glLoadIdentity_defined
#endif
#ifndef glLoadMatrixd_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLoadMatrixd, (m), (const GLdouble *m))
#define glLoadMatrixd_defined
#endif
#ifndef glLoadMatrixf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLoadMatrixf, (m), (const GLfloat *m))
#define glLoadMatrixf_defined
#endif
#ifndef glLoadName_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLoadName, (name), (GLuint name))
#define glLoadName_defined
#endif
#ifndef glLogicOp_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glLogicOp, (opcode), (GLenum opcode))
#define glLogicOp_defined
#endif
#ifndef glMap1d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMap1d, (target, u1, u2, stride, order, points), (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points))
#define glMap1d_defined
#endif
#ifndef glMap1f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMap1f, (target, u1, u2, stride, order, points), (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points))
#define glMap1f_defined
#endif
#ifndef glMap2d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMap2d, (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points), (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points))
#define glMap2d_defined
#endif
#ifndef glMap2f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMap2f, (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points), (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points))
#define glMap2f_defined
#endif
#ifndef glMapGrid1d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMapGrid1d, (un, u1, u2), (GLint un, GLdouble u1, GLdouble u2))
#define glMapGrid1d_defined
#endif
#ifndef glMapGrid1f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMapGrid1f, (un, u1, u2), (GLint un, GLfloat u1, GLfloat u2))
#define glMapGrid1f_defined
#endif
#ifndef glMapGrid2d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMapGrid2d, (un, u1, u2, vn, v1, v2), (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2))
#define glMapGrid2d_defined
#endif
#ifndef glMapGrid2f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMapGrid2f, (un, u1, u2, vn, v1, v2), (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2))
#define glMapGrid2f_defined
#endif
#ifndef glMaterialf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMaterialf, (face, pname, param), (GLenum face, GLenum pname, GLfloat param))
#define glMaterialf_defined
#endif
#ifndef glMaterialfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMaterialfv, (face, pname, params), (GLenum face, GLenum pname, const GLfloat *params))
#define glMaterialfv_defined
#endif
#ifndef glMateriali_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMateriali, (face, pname, param), (GLenum face, GLenum pname, GLint param))
#define glMateriali_defined
#endif
#ifndef glMaterialiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMaterialiv, (face, pname, params), (GLenum face, GLenum pname, const GLint *params))
#define glMaterialiv_defined
#endif
#ifndef glMatrixMode_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMatrixMode, (mode), (GLenum mode))
#define glMatrixMode_defined
#endif
#ifndef glMultMatrixd_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMultMatrixd, (m), (const GLdouble *m))
#define glMultMatrixd_defined
#endif
#ifndef glMultMatrixf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glMultMatrixf, (m), (const GLfloat *m))
#define glMultMatrixf_defined
#endif
#ifndef glNewList_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNewList, (list, mode), (GLuint list, GLenum mode))
#define glNewList_defined
#endif
#ifndef glNormal3b_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3b, (nx, ny, nz), (GLbyte nx, GLbyte ny, GLbyte nz))
#define glNormal3b_defined
#endif
#ifndef glNormal3bv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3bv, (v), (const GLbyte *v))
#define glNormal3bv_defined
#endif
#ifndef glNormal3d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3d, (nx, ny, nz), (GLdouble nx, GLdouble ny, GLdouble nz))
#define glNormal3d_defined
#endif
#ifndef glNormal3dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3dv, (v), (const GLdouble *v))
#define glNormal3dv_defined
#endif
#ifndef glNormal3f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3f, (nx, ny, nz), (GLfloat nx, GLfloat ny, GLfloat nz))
#define glNormal3f_defined
#endif
#ifndef glNormal3fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3fv, (v), (const GLfloat *v))
#define glNormal3fv_defined
#endif
#ifndef glNormal3i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3i, (nx, ny, nz), (GLint nx, GLint ny, GLint nz))
#define glNormal3i_defined
#endif
#ifndef glNormal3iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3iv, (v), (const GLint *v))
#define glNormal3iv_defined
#endif
#ifndef glNormal3s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3s, (nx, ny, nz), (GLshort nx, GLshort ny, GLshort nz))
#define glNormal3s_defined
#endif
#ifndef glNormal3sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormal3sv, (v), (const GLshort *v))
#define glNormal3sv_defined
#endif
#ifndef glNormalPointer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glNormalPointer, (type, stride, pointer), (GLenum type, GLsizei stride, const GLvoid *pointer))
#define glNormalPointer_defined
#endif
#ifndef glOrtho_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glOrtho, (left, right, bottom, top, zNear, zFar), (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glOrtho_defined
#endif
#ifndef glPassThrough_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPassThrough, (token), (GLfloat token))
#define glPassThrough_defined
#endif
#ifndef glPixelMapfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelMapfv, (map, mapsize, values), (GLenum map, GLsizei mapsize, const GLfloat *values))
#define glPixelMapfv_defined
#endif
#ifndef glPixelMapuiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelMapuiv, (map, mapsize, values), (GLenum map, GLsizei mapsize, const GLuint *values))
#define glPixelMapuiv_defined
#endif
#ifndef glPixelMapusv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelMapusv, (map, mapsize, values), (GLenum map, GLsizei mapsize, const GLushort *values))
#define glPixelMapusv_defined
#endif
#ifndef glPixelStoref_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelStoref, (pname, param), (GLenum pname, GLfloat param))
#define glPixelStoref_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPixelTransferf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelTransferf, (pname, param), (GLenum pname, GLfloat param))
#define glPixelTransferf_defined
#endif
#ifndef glPixelTransferi_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelTransferi, (pname, param), (GLenum pname, GLint param))
#define glPixelTransferi_defined
#endif
#ifndef glPixelZoom_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPixelZoom, (xfactor, yfactor), (GLfloat xfactor, GLfloat yfactor))
#define glPixelZoom_defined
#endif
#ifndef glPointSize_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPointSize, (size), (GLfloat size))
#define glPointSize_defined
#endif
#ifndef glPolygonMode_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPolygonMode, (face, mode), (GLenum face, GLenum mode))
#define glPolygonMode_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glPolygonStipple_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPolygonStipple, (mask), (const GLubyte *mask))
#define glPolygonStipple_defined
#endif
#ifndef glPopAttrib_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPopAttrib, (), (void))
#define glPopAttrib_defined
#endif
#ifndef glPopClientAttrib_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPopClientAttrib, (), (void))
#define glPopClientAttrib_defined
#endif
#ifndef glPopMatrix_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPopMatrix, (), (void))
#define glPopMatrix_defined
#endif
#ifndef glPopName_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPopName, (), (void))
#define glPopName_defined
#endif
#ifndef glPrioritizeTextures_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPrioritizeTextures, (n, textures, priorities), (GLsizei n, const GLuint *textures, const GLclampf *priorities))
#define glPrioritizeTextures_defined
#endif
#ifndef glPushAttrib_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPushAttrib, (mask), (GLbitfield mask))
#define glPushAttrib_defined
#endif
#ifndef glPushClientAttrib_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPushClientAttrib, (mask), (GLbitfield mask))
#define glPushClientAttrib_defined
#endif
#ifndef glPushMatrix_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPushMatrix, (), (void))
#define glPushMatrix_defined
#endif
#ifndef glPushName_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glPushName, (name), (GLuint name))
#define glPushName_defined
#endif
#ifndef glRasterPos2d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2d, (x, y), (GLdouble x, GLdouble y))
#define glRasterPos2d_defined
#endif
#ifndef glRasterPos2dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2dv, (v), (const GLdouble *v))
#define glRasterPos2dv_defined
#endif
#ifndef glRasterPos2f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2f, (x, y), (GLfloat x, GLfloat y))
#define glRasterPos2f_defined
#endif
#ifndef glRasterPos2fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2fv, (v), (const GLfloat *v))
#define glRasterPos2fv_defined
#endif
#ifndef glRasterPos2i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2i, (x, y), (GLint x, GLint y))
#define glRasterPos2i_defined
#endif
#ifndef glRasterPos2iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2iv, (v), (const GLint *v))
#define glRasterPos2iv_defined
#endif
#ifndef glRasterPos2s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2s, (x, y), (GLshort x, GLshort y))
#define glRasterPos2s_defined
#endif
#ifndef glRasterPos2sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos2sv, (v), (const GLshort *v))
#define glRasterPos2sv_defined
#endif
#ifndef glRasterPos3d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3d, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glRasterPos3d_defined
#endif
#ifndef glRasterPos3dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3dv, (v), (const GLdouble *v))
#define glRasterPos3dv_defined
#endif
#ifndef glRasterPos3f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3f, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glRasterPos3f_defined
#endif
#ifndef glRasterPos3fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3fv, (v), (const GLfloat *v))
#define glRasterPos3fv_defined
#endif
#ifndef glRasterPos3i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3i, (x, y, z), (GLint x, GLint y, GLint z))
#define glRasterPos3i_defined
#endif
#ifndef glRasterPos3iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3iv, (v), (const GLint *v))
#define glRasterPos3iv_defined
#endif
#ifndef glRasterPos3s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3s, (x, y, z), (GLshort x, GLshort y, GLshort z))
#define glRasterPos3s_defined
#endif
#ifndef glRasterPos3sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos3sv, (v), (const GLshort *v))
#define glRasterPos3sv_defined
#endif
#ifndef glRasterPos4d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4d, (x, y, z, w), (GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glRasterPos4d_defined
#endif
#ifndef glRasterPos4dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4dv, (v), (const GLdouble *v))
#define glRasterPos4dv_defined
#endif
#ifndef glRasterPos4f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4f, (x, y, z, w), (GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glRasterPos4f_defined
#endif
#ifndef glRasterPos4fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4fv, (v), (const GLfloat *v))
#define glRasterPos4fv_defined
#endif
#ifndef glRasterPos4i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4i, (x, y, z, w), (GLint x, GLint y, GLint z, GLint w))
#define glRasterPos4i_defined
#endif
#ifndef glRasterPos4iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4iv, (v), (const GLint *v))
#define glRasterPos4iv_defined
#endif
#ifndef glRasterPos4s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4s, (x, y, z, w), (GLshort x, GLshort y, GLshort z, GLshort w))
#define glRasterPos4s_defined
#endif
#ifndef glRasterPos4sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRasterPos4sv, (v), (const GLshort *v))
#define glRasterPos4sv_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glReadBuffer, (mode), (GLenum mode))
#define glReadBuffer_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels))
#define glReadPixels_defined
#endif
#ifndef glRectd_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRectd, (x1, y1, x2, y2), (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2))
#define glRectd_defined
#endif
#ifndef glRectdv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRectdv, (v1, v2), (const GLdouble *v1, const GLdouble *v2))
#define glRectdv_defined
#endif
#ifndef glRectf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRectf, (x1, y1, x2, y2), (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2))
#define glRectf_defined
#endif
#ifndef glRectfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRectfv, (v1, v2), (const GLfloat *v1, const GLfloat *v2))
#define glRectfv_defined
#endif
#ifndef glRecti_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRecti, (x1, y1, x2, y2), (GLint x1, GLint y1, GLint x2, GLint y2))
#define glRecti_defined
#endif
#ifndef glRectiv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRectiv, (v1, v2), (const GLint *v1, const GLint *v2))
#define glRectiv_defined
#endif
#ifndef glRects_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRects, (x1, y1, x2, y2), (GLshort x1, GLshort y1, GLshort x2, GLshort y2))
#define glRects_defined
#endif
#ifndef glRectsv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRectsv, (v1, v2), (const GLshort *v1, const GLshort *v2))
#define glRectsv_defined
#endif
#ifndef glRenderMode_defined
GLATTER_FBLOCK(return, GL, WINGDIAPI, GLint, APIENTRY, glRenderMode, (mode), (GLenum mode))
#define glRenderMode_defined
#endif
#ifndef glRotated_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRotated, (angle, x, y, z), (GLdouble angle, GLdouble x, GLdouble y, GLdouble z))
#define glRotated_defined
#endif
#ifndef glRotatef_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glRotatef, (angle, x, y, z), (GLfloat angle, GLfloat x, GLfloat y, GLfloat z))
#define glRotatef_defined
#endif
#ifndef glScaled_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glScaled, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glScaled_defined
#endif
#ifndef glScalef_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glScalef, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glScalef_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glSelectBuffer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glSelectBuffer, (size, buffer), (GLsizei size, GLuint *buffer))
#define glSelectBuffer_defined
#endif
#ifndef glShadeModel_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glShadeModel, (mode), (GLenum mode))
#define glShadeModel_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glTexCoord1d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1d, (s), (GLdouble s))
#define glTexCoord1d_defined
#endif
#ifndef glTexCoord1dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1dv, (v), (const GLdouble *v))
#define glTexCoord1dv_defined
#endif
#ifndef glTexCoord1f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1f, (s), (GLfloat s))
#define glTexCoord1f_defined
#endif
#ifndef glTexCoord1fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1fv, (v), (const GLfloat *v))
#define glTexCoord1fv_defined
#endif
#ifndef glTexCoord1i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1i, (s), (GLint s))
#define glTexCoord1i_defined
#endif
#ifndef glTexCoord1iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1iv, (v), (const GLint *v))
#define glTexCoord1iv_defined
#endif
#ifndef glTexCoord1s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1s, (s), (GLshort s))
#define glTexCoord1s_defined
#endif
#ifndef glTexCoord1sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord1sv, (v), (const GLshort *v))
#define glTexCoord1sv_defined
#endif
#ifndef glTexCoord2d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2d, (s, t), (GLdouble s, GLdouble t))
#define glTexCoord2d_defined
#endif
#ifndef glTexCoord2dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2dv, (v), (const GLdouble *v))
#define glTexCoord2dv_defined
#endif
#ifndef glTexCoord2f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2f, (s, t), (GLfloat s, GLfloat t))
#define glTexCoord2f_defined
#endif
#ifndef glTexCoord2fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2fv, (v), (const GLfloat *v))
#define glTexCoord2fv_defined
#endif
#ifndef glTexCoord2i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2i, (s, t), (GLint s, GLint t))
#define glTexCoord2i_defined
#endif
#ifndef glTexCoord2iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2iv, (v), (const GLint *v))
#define glTexCoord2iv_defined
#endif
#ifndef glTexCoord2s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2s, (s, t), (GLshort s, GLshort t))
#define glTexCoord2s_defined
#endif
#ifndef glTexCoord2sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord2sv, (v), (const GLshort *v))
#define glTexCoord2sv_defined
#endif
#ifndef glTexCoord3d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3d, (s, t, r), (GLdouble s, GLdouble t, GLdouble r))
#define glTexCoord3d_defined
#endif
#ifndef glTexCoord3dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3dv, (v), (const GLdouble *v))
#define glTexCoord3dv_defined
#endif
#ifndef glTexCoord3f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3f, (s, t, r), (GLfloat s, GLfloat t, GLfloat r))
#define glTexCoord3f_defined
#endif
#ifndef glTexCoord3fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3fv, (v), (const GLfloat *v))
#define glTexCoord3fv_defined
#endif
#ifndef glTexCoord3i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3i, (s, t, r), (GLint s, GLint t, GLint r))
#define glTexCoord3i_defined
#endif
#ifndef glTexCoord3iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3iv, (v), (const GLint *v))
#define glTexCoord3iv_defined
#endif
#ifndef glTexCoord3s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3s, (s, t, r), (GLshort s, GLshort t, GLshort r))
#define glTexCoord3s_defined
#endif
#ifndef glTexCoord3sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord3sv, (v), (const GLshort *v))
#define glTexCoord3sv_defined
#endif
#ifndef glTexCoord4d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4d, (s, t, r, q), (GLdouble s, GLdouble t, GLdouble r, GLdouble q))
#define glTexCoord4d_defined
#endif
#ifndef glTexCoord4dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4dv, (v), (const GLdouble *v))
#define glTexCoord4dv_defined
#endif
#ifndef glTexCoord4f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4f, (s, t, r, q), (GLfloat s, GLfloat t, GLfloat r, GLfloat q))
#define glTexCoord4f_defined
#endif
#ifndef glTexCoord4fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4fv, (v), (const GLfloat *v))
#define glTexCoord4fv_defined
#endif
#ifndef glTexCoord4i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4i, (s, t, r, q), (GLint s, GLint t, GLint r, GLint q))
#define glTexCoord4i_defined
#endif
#ifndef glTexCoord4iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4iv, (v), (const GLint *v))
#define glTexCoord4iv_defined
#endif
#ifndef glTexCoord4s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4s, (s, t, r, q), (GLshort s, GLshort t, GLshort r, GLshort q))
#define glTexCoord4s_defined
#endif
#ifndef glTexCoord4sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoord4sv, (v), (const GLshort *v))
#define glTexCoord4sv_defined
#endif
#ifndef glTexCoordPointer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexCoordPointer, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer))
#define glTexCoordPointer_defined
#endif
#ifndef glTexEnvf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexEnvf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexEnvf_defined
#endif
#ifndef glTexEnvfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexEnvfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexEnvfv_defined
#endif
#ifndef glTexEnvi_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexEnvi, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexEnvi_defined
#endif
#ifndef glTexEnviv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexEnviv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexEnviv_defined
#endif
#ifndef glTexGend_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexGend, (coord, pname, param), (GLenum coord, GLenum pname, GLdouble param))
#define glTexGend_defined
#endif
#ifndef glTexGendv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexGendv, (coord, pname, params), (GLenum coord, GLenum pname, const GLdouble *params))
#define glTexGendv_defined
#endif
#ifndef glTexGenf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexGenf, (coord, pname, param), (GLenum coord, GLenum pname, GLfloat param))
#define glTexGenf_defined
#endif
#ifndef glTexGenfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexGenfv, (coord, pname, params), (GLenum coord, GLenum pname, const GLfloat *params))
#define glTexGenfv_defined
#endif
#ifndef glTexGeni_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexGeni, (coord, pname, param), (GLenum coord, GLenum pname, GLint param))
#define glTexGeni_defined
#endif
#ifndef glTexGeniv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexGeniv, (coord, pname, params), (GLenum coord, GLenum pname, const GLint *params))
#define glTexGeniv_defined
#endif
#ifndef glTexImage1D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexImage1D, (target, level, internalformat, width, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexImage1D_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage1D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexSubImage1D, (target, level, xoffset, width, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexSubImage1D_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glTranslated_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTranslated, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glTranslated_defined
#endif
#ifndef glTranslatef_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glTranslatef, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glTranslatef_defined
#endif
#ifndef glVertex2d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2d, (x, y), (GLdouble x, GLdouble y))
#define glVertex2d_defined
#endif
#ifndef glVertex2dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2dv, (v), (const GLdouble *v))
#define glVertex2dv_defined
#endif
#ifndef glVertex2f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2f, (x, y), (GLfloat x, GLfloat y))
#define glVertex2f_defined
#endif
#ifndef glVertex2fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2fv, (v), (const GLfloat *v))
#define glVertex2fv_defined
#endif
#ifndef glVertex2i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2i, (x, y), (GLint x, GLint y))
#define glVertex2i_defined
#endif
#ifndef glVertex2iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2iv, (v), (const GLint *v))
#define glVertex2iv_defined
#endif
#ifndef glVertex2s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2s, (x, y), (GLshort x, GLshort y))
#define glVertex2s_defined
#endif
#ifndef glVertex2sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex2sv, (v), (const GLshort *v))
#define glVertex2sv_defined
#endif
#ifndef glVertex3d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3d, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glVertex3d_defined
#endif
#ifndef glVertex3dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3dv, (v), (const GLdouble *v))
#define glVertex3dv_defined
#endif
#ifndef glVertex3f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3f, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glVertex3f_defined
#endif
#ifndef glVertex3fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3fv, (v), (const GLfloat *v))
#define glVertex3fv_defined
#endif
#ifndef glVertex3i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3i, (x, y, z), (GLint x, GLint y, GLint z))
#define glVertex3i_defined
#endif
#ifndef glVertex3iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3iv, (v), (const GLint *v))
#define glVertex3iv_defined
#endif
#ifndef glVertex3s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3s, (x, y, z), (GLshort x, GLshort y, GLshort z))
#define glVertex3s_defined
#endif
#ifndef glVertex3sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex3sv, (v), (const GLshort *v))
#define glVertex3sv_defined
#endif
#ifndef glVertex4d_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4d, (x, y, z, w), (GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertex4d_defined
#endif
#ifndef glVertex4dv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4dv, (v), (const GLdouble *v))
#define glVertex4dv_defined
#endif
#ifndef glVertex4f_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4f, (x, y, z, w), (GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertex4f_defined
#endif
#ifndef glVertex4fv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4fv, (v), (const GLfloat *v))
#define glVertex4fv_defined
#endif
#ifndef glVertex4i_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4i, (x, y, z, w), (GLint x, GLint y, GLint z, GLint w))
#define glVertex4i_defined
#endif
#ifndef glVertex4iv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4iv, (v), (const GLint *v))
#define glVertex4iv_defined
#endif
#ifndef glVertex4s_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4s, (x, y, z, w), (GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertex4s_defined
#endif
#ifndef glVertex4sv_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertex4sv, (v), (const GLshort *v))
#define glVertex4sv_defined
#endif
#ifndef glVertexPointer_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glVertexPointer, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer))
#define glVertexPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, WINGDIAPI, void, APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(__gl_h_)
#endif // defined(__GL_H__)
#endif // !defined(GL_VERSION_ES_CM_1_0)
#if defined(GL_VERSION_ES_CM_1_0)
#if !defined(__GL_H__)
#if defined(__gl_h_)
#if defined(GL_OES_point_size_array)
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPointSizePointerOES, (type, stride, pointer), (GLenum type, GLsizei stride, const GLvoid *pointer))
#define glPointSizePointerOES_defined
#endif // defined(GL_OES_point_size_array)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAlphaFunc_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glAlphaFunc, (func, ref), (GLenum func, GLclampf ref))
#define glAlphaFunc_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glAlphaFuncx, (func, ref), (GLenum func, GLclampx ref))
#define glAlphaFuncx_defined
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data))
#define glBufferSubData_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha))
#define glClearColor_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClearColorx, (red, green, blue, alpha), (GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha))
#define glClearColorx_defined
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClearDepthf, (depth), (GLclampf depth))
#define glClearDepthf_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClearDepthx, (depth), (GLclampx depth))
#define glClearDepthx_defined
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glClientActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClientActiveTexture, (texture), (GLenum texture))
#define glClientActiveTexture_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClipPlanef, (plane, equation), (GLenum plane, const GLfloat *equation))
#define glClipPlanef_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glClipPlanex, (plane, equation), (GLenum plane, const GLfixed *equation))
#define glClipPlanex_defined
#ifndef glColor4f_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glColor4f, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glColor4f_defined
#endif
#ifndef glColor4ub_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glColor4ub, (red, green, blue, alpha), (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha))
#define glColor4ub_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glColor4x, (red, green, blue, alpha), (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))
#define glColor4x_defined
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glColorPointer_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glColorPointer, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer))
#define glColorPointer_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDepthRangef, (zNear, zFar), (GLclampf zNear, GLclampf zFar))
#define glDepthRangef_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDepthRangex, (zNear, zFar), (GLclampx zNear, GLclampx zFar))
#define glDepthRangex_defined
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableClientState_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDisableClientState, (array), (GLenum array))
#define glDisableClientState_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableClientState_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glEnableClientState, (array), (GLenum array))
#define glEnableClientState_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFogf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFogf, (pname, param), (GLenum pname, GLfloat param))
#define glFogf_defined
#endif
#ifndef glFogfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFogfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glFogfv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFogx, (pname, param), (GLenum pname, GLfixed param))
#define glFogx_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFogxv, (pname, params), (GLenum pname, const GLfixed *params))
#define glFogxv_defined
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFrustumf, (left, right, bottom, top, zNear, zFar), (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar))
#define glFrustumf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glFrustumx, (left, right, bottom, top, zNear, zFar), (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar))
#define glFrustumx_defined
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetBooleanv, (pname, params), (GLenum pname, GLboolean *params))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetClipPlanef, (pname, eqn), (GLenum pname, GLfloat eqn[4]))
#define glGetClipPlanef_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetClipPlanex, (pname, eqn), (GLenum pname, GLfixed eqn[4]))
#define glGetClipPlanex_defined
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_API, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetFixedv, (pname, params), (GLenum pname, GLfixed *params))
#define glGetFixedv_defined
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetFloatv, (pname, params), (GLenum pname, GLfloat *params))
#define glGetFloatv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetIntegerv, (pname, params), (GLenum pname, GLint *params))
#define glGetIntegerv_defined
#endif
#ifndef glGetLightfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetLightfv, (light, pname, params), (GLenum light, GLenum pname, GLfloat *params))
#define glGetLightfv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetLightxv, (light, pname, params), (GLenum light, GLenum pname, GLfixed *params))
#define glGetLightxv_defined
#ifndef glGetMaterialfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetMaterialfv, (face, pname, params), (GLenum face, GLenum pname, GLfloat *params))
#define glGetMaterialfv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetMaterialxv, (face, pname, params), (GLenum face, GLenum pname, GLfixed *params))
#define glGetMaterialxv_defined
#ifndef glGetPointerv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetPointerv, (pname, params), (GLenum pname, GLvoid **params))
#define glGetPointerv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_API, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexEnvfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetTexEnvfv, (env, pname, params), (GLenum env, GLenum pname, GLfloat *params))
#define glGetTexEnvfv_defined
#endif
#ifndef glGetTexEnviv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetTexEnviv, (env, pname, params), (GLenum env, GLenum pname, GLint *params))
#define glGetTexEnviv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetTexEnvxv, (env, pname, params), (GLenum env, GLenum pname, GLfixed *params))
#define glGetTexEnvxv_defined
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glGetTexParameterxv, (target, pname, params), (GLenum target, GLenum pname, GLfixed *params))
#define glGetTexParameterxv_defined
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_API, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_API, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_API, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLightModelf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightModelf, (pname, param), (GLenum pname, GLfloat param))
#define glLightModelf_defined
#endif
#ifndef glLightModelfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightModelfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glLightModelfv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightModelx, (pname, param), (GLenum pname, GLfixed param))
#define glLightModelx_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightModelxv, (pname, params), (GLenum pname, const GLfixed *params))
#define glLightModelxv_defined
#ifndef glLightf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightf, (light, pname, param), (GLenum light, GLenum pname, GLfloat param))
#define glLightf_defined
#endif
#ifndef glLightfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightfv, (light, pname, params), (GLenum light, GLenum pname, const GLfloat *params))
#define glLightfv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightx, (light, pname, param), (GLenum light, GLenum pname, GLfixed param))
#define glLightx_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLightxv, (light, pname, params), (GLenum light, GLenum pname, const GLfixed *params))
#define glLightxv_defined
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLineWidthx, (width), (GLfixed width))
#define glLineWidthx_defined
#ifndef glLoadIdentity_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLoadIdentity, (), (void))
#define glLoadIdentity_defined
#endif
#ifndef glLoadMatrixf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLoadMatrixf, (m), (const GLfloat *m))
#define glLoadMatrixf_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLoadMatrixx, (m), (const GLfixed *m))
#define glLoadMatrixx_defined
#ifndef glLogicOp_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glLogicOp, (opcode), (GLenum opcode))
#define glLogicOp_defined
#endif
#ifndef glMaterialf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMaterialf, (face, pname, param), (GLenum face, GLenum pname, GLfloat param))
#define glMaterialf_defined
#endif
#ifndef glMaterialfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMaterialfv, (face, pname, params), (GLenum face, GLenum pname, const GLfloat *params))
#define glMaterialfv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMaterialx, (face, pname, param), (GLenum face, GLenum pname, GLfixed param))
#define glMaterialx_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMaterialxv, (face, pname, params), (GLenum face, GLenum pname, const GLfixed *params))
#define glMaterialxv_defined
#ifndef glMatrixMode_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMatrixMode, (mode), (GLenum mode))
#define glMatrixMode_defined
#endif
#ifndef glMultMatrixf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMultMatrixf, (m), (const GLfloat *m))
#define glMultMatrixf_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMultMatrixx, (m), (const GLfixed *m))
#define glMultMatrixx_defined
#ifndef glMultiTexCoord4f_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMultiTexCoord4f, (target, s, t, r, q), (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q))
#define glMultiTexCoord4f_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glMultiTexCoord4x, (target, s, t, r, q), (GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q))
#define glMultiTexCoord4x_defined
#ifndef glNormal3f_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glNormal3f, (nx, ny, nz), (GLfloat nx, GLfloat ny, GLfloat nz))
#define glNormal3f_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glNormal3x, (nx, ny, nz), (GLfixed nx, GLfixed ny, GLfixed nz))
#define glNormal3x_defined
#ifndef glNormalPointer_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glNormalPointer, (type, stride, pointer), (GLenum type, GLsizei stride, const GLvoid *pointer))
#define glNormalPointer_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glOrthof, (left, right, bottom, top, zNear, zFar), (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar))
#define glOrthof_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glOrthox, (left, right, bottom, top, zNear, zFar), (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar))
#define glOrthox_defined
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPointParameterf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPointParameterf, (pname, param), (GLenum pname, GLfloat param))
#define glPointParameterf_defined
#endif
#ifndef glPointParameterfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPointParameterfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glPointParameterfv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPointParameterx, (pname, param), (GLenum pname, GLfixed param))
#define glPointParameterx_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPointParameterxv, (pname, params), (GLenum pname, const GLfixed *params))
#define glPointParameterxv_defined
#ifndef glPointSize_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPointSize, (size), (GLfloat size))
#define glPointSize_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPointSizex, (size), (GLfixed size))
#define glPointSizex_defined
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPolygonOffsetx, (factor, units), (GLfixed factor, GLfixed units))
#define glPolygonOffsetx_defined
#ifndef glPopMatrix_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPopMatrix, (), (void))
#define glPopMatrix_defined
#endif
#ifndef glPushMatrix_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glPushMatrix, (), (void))
#define glPushMatrix_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels))
#define glReadPixels_defined
#endif
#ifndef glRotatef_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glRotatef, (angle, x, y, z), (GLfloat angle, GLfloat x, GLfloat y, GLfloat z))
#define glRotatef_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glRotatex, (angle, x, y, z), (GLfixed angle, GLfixed x, GLfixed y, GLfixed z))
#define glRotatex_defined
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLclampf value, GLboolean invert))
#define glSampleCoverage_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glSampleCoveragex, (value, invert), (GLclampx value, GLboolean invert))
#define glSampleCoveragex_defined
#ifndef glScalef_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glScalef, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glScalef_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glScalex, (x, y, z), (GLfixed x, GLfixed y, GLfixed z))
#define glScalex_defined
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShadeModel_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glShadeModel, (mode), (GLenum mode))
#define glShadeModel_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glTexCoordPointer_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexCoordPointer, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer))
#define glTexCoordPointer_defined
#endif
#ifndef glTexEnvf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexEnvf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexEnvf_defined
#endif
#ifndef glTexEnvfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexEnvfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexEnvfv_defined
#endif
#ifndef glTexEnvi_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexEnvi, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexEnvi_defined
#endif
#ifndef glTexEnviv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexEnviv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexEnviv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexEnvx, (target, pname, param), (GLenum target, GLenum pname, GLfixed param))
#define glTexEnvx_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexEnvxv, (target, pname, params), (GLenum target, GLenum pname, const GLfixed *params))
#define glTexEnvxv_defined
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexParameterx, (target, pname, param), (GLenum target, GLenum pname, GLfixed param))
#define glTexParameterx_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexParameterxv, (target, pname, params), (GLenum target, GLenum pname, const GLfixed *params))
#define glTexParameterxv_defined
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glTranslatef_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTranslatef, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glTranslatef_defined
#endif
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glTranslatex, (x, y, z), (GLfixed x, GLfixed y, GLfixed z))
#define glTranslatex_defined
#ifndef glVertexPointer_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glVertexPointer, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer))
#define glVertexPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_API, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(__gl_h_)
#endif // !defined(__GL_H__)
#endif // defined(GL_VERSION_ES_CM_1_0)
#if defined(__gl2_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#endif // defined(__gl2_h_)
#if defined(__gl2ext_h_)
#if defined(GL_AMD_performance_monitor)
#ifndef glBeginPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginPerfMonitorAMD, (monitor), (GLuint monitor))
#define glBeginPerfMonitorAMD_defined
#endif
#ifndef glDeletePerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeletePerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glDeletePerfMonitorsAMD_defined
#endif
#ifndef glEndPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndPerfMonitorAMD, (monitor), (GLuint monitor))
#define glEndPerfMonitorAMD_defined
#endif
#ifndef glGenPerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenPerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glGenPerfMonitorsAMD_defined
#endif
#ifndef glGetPerfMonitorCounterDataAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCounterDataAMD, (monitor, pname, dataSize, data, bytesWritten), (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten))
#define glGetPerfMonitorCounterDataAMD_defined
#endif
#ifndef glGetPerfMonitorCounterInfoAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCounterInfoAMD, (group, counter, pname, data), (GLuint group, GLuint counter, GLenum pname, void *data))
#define glGetPerfMonitorCounterInfoAMD_defined
#endif
#ifndef glGetPerfMonitorCounterStringAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCounterStringAMD, (group, counter, bufSize, length, counterString), (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString))
#define glGetPerfMonitorCounterStringAMD_defined
#endif
#ifndef glGetPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCountersAMD, (group, numCounters, maxActiveCounters, counterSize, counters), (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters))
#define glGetPerfMonitorCountersAMD_defined
#endif
#ifndef glGetPerfMonitorGroupStringAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorGroupStringAMD, (group, bufSize, length, groupString), (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString))
#define glGetPerfMonitorGroupStringAMD_defined
#endif
#ifndef glGetPerfMonitorGroupsAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorGroupsAMD, (numGroups, groupsSize, groups), (GLint *numGroups, GLsizei groupsSize, GLuint *groups))
#define glGetPerfMonitorGroupsAMD_defined
#endif
#ifndef glSelectPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSelectPerfMonitorCountersAMD, (monitor, enable, group, numCounters, counterList), (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList))
#define glSelectPerfMonitorCountersAMD_defined
#endif
#endif // defined(GL_AMD_performance_monitor)
#if defined(GL_ANGLE_framebuffer_blit)
#ifndef glBlitFramebufferANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebufferANGLE, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebufferANGLE_defined
#endif
#endif // defined(GL_ANGLE_framebuffer_blit)
#if defined(GL_ANGLE_framebuffer_multisample)
#ifndef glRenderbufferStorageMultisampleANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleANGLE, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleANGLE_defined
#endif
#endif // defined(GL_ANGLE_framebuffer_multisample)
#if defined(GL_ANGLE_instanced_arrays)
#ifndef glDrawArraysInstancedANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedANGLE, (mode, first, count, primcount), (GLenum mode, GLint first, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedANGLE_defined
#endif
#ifndef glDrawElementsInstancedANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedANGLE, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedANGLE_defined
#endif
#ifndef glVertexAttribDivisorANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisorANGLE, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorANGLE_defined
#endif
#endif // defined(GL_ANGLE_instanced_arrays)
#if defined(GL_ANGLE_translated_shader_source)
#ifndef glGetTranslatedShaderSourceANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTranslatedShaderSourceANGLE, (shader, bufsize, length, source), (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source))
#define glGetTranslatedShaderSourceANGLE_defined
#endif
#endif // defined(GL_ANGLE_translated_shader_source)
#if defined(GL_APPLE_copy_texture_levels)
#ifndef glCopyTextureLevelsAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTextureLevelsAPPLE, (destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount), (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount))
#define glCopyTextureLevelsAPPLE_defined
#endif
#endif // defined(GL_APPLE_copy_texture_levels)
#if defined(GL_APPLE_framebuffer_multisample)
#ifndef glRenderbufferStorageMultisampleAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleAPPLE, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleAPPLE_defined
#endif
#ifndef glResolveMultisampleFramebufferAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResolveMultisampleFramebufferAPPLE, (), (void))
#define glResolveMultisampleFramebufferAPPLE_defined
#endif
#endif // defined(GL_APPLE_framebuffer_multisample)
#if defined(GL_APPLE_sync)
#ifndef glClientWaitSyncAPPLE_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSyncAPPLE, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSyncAPPLE_defined
#endif
#ifndef glDeleteSyncAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSyncAPPLE, (sync), (GLsync sync))
#define glDeleteSyncAPPLE_defined
#endif
#ifndef glFenceSyncAPPLE_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSyncAPPLE, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSyncAPPLE_defined
#endif
#ifndef glGetInteger64vAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64vAPPLE, (pname, params), (GLenum pname, GLint64 *params))
#define glGetInteger64vAPPLE_defined
#endif
#ifndef glGetSyncivAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSyncivAPPLE, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSyncivAPPLE_defined
#endif
#ifndef glIsSyncAPPLE_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSyncAPPLE, (sync), (GLsync sync))
#define glIsSyncAPPLE_defined
#endif
#ifndef glWaitSyncAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSyncAPPLE, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSyncAPPLE_defined
#endif
#endif // defined(GL_APPLE_sync)
#if defined(GL_EXT_base_instance)
#ifndef glDrawArraysInstancedBaseInstanceEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedBaseInstanceEXT, (mode, first, count, instancecount, baseinstance), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance))
#define glDrawArraysInstancedBaseInstanceEXT_defined
#endif
#ifndef glDrawElementsInstancedBaseInstanceEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseInstanceEXT, (mode, count, type, indices, instancecount, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance))
#define glDrawElementsInstancedBaseInstanceEXT_defined
#endif
#ifndef glDrawElementsInstancedBaseVertexBaseInstanceEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertexBaseInstanceEXT, (mode, count, type, indices, instancecount, basevertex, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance))
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT_defined
#endif
#endif // defined(GL_EXT_base_instance)
#if defined(GL_EXT_blend_func_extended)
#ifndef glBindFragDataLocationEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFragDataLocationEXT, (program, color, name), (GLuint program, GLuint color, const GLchar *name))
#define glBindFragDataLocationEXT_defined
#endif
#ifndef glBindFragDataLocationIndexedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFragDataLocationIndexedEXT, (program, colorNumber, index, name), (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name))
#define glBindFragDataLocationIndexedEXT_defined
#endif
#ifndef glGetFragDataIndexEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataIndexEXT, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataIndexEXT_defined
#endif
#ifndef glGetProgramResourceLocationIndexEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetProgramResourceLocationIndexEXT, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocationIndexEXT_defined
#endif
#endif // defined(GL_EXT_blend_func_extended)
#if defined(GL_EXT_buffer_storage)
#ifndef glBufferStorageEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferStorageEXT, (target, size, data, flags), (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags))
#define glBufferStorageEXT_defined
#endif
#endif // defined(GL_EXT_buffer_storage)
#if defined(GL_EXT_clear_texture)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearTexImageEXT, (texture, level, format, type, data), (GLuint texture, GLint level, GLenum format, GLenum type, const void *data))
#define glClearTexImageEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearTexSubImageEXT, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data))
#define glClearTexSubImageEXT_defined
#endif // defined(GL_EXT_clear_texture)
#if defined(GL_EXT_copy_image)
#ifndef glCopyImageSubDataEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyImageSubDataEXT, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubDataEXT_defined
#endif
#endif // defined(GL_EXT_copy_image)
#if defined(GL_EXT_debug_label)
#ifndef glGetObjectLabelEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectLabelEXT, (type, object, bufSize, length, label), (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabelEXT_defined
#endif
#ifndef glLabelObjectEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLabelObjectEXT, (type, object, length, label), (GLenum type, GLuint object, GLsizei length, const GLchar *label))
#define glLabelObjectEXT_defined
#endif
#endif // defined(GL_EXT_debug_label)
#if defined(GL_EXT_debug_marker)
#ifndef glInsertEventMarkerEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInsertEventMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glInsertEventMarkerEXT_defined
#endif
#ifndef glPopGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPopGroupMarkerEXT, (), (void))
#define glPopGroupMarkerEXT_defined
#endif
#ifndef glPushGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPushGroupMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glPushGroupMarkerEXT_defined
#endif
#endif // defined(GL_EXT_debug_marker)
#if defined(GL_EXT_discard_framebuffer)
#ifndef glDiscardFramebufferEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDiscardFramebufferEXT, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glDiscardFramebufferEXT_defined
#endif
#endif // defined(GL_EXT_discard_framebuffer)
#if defined(GL_EXT_disjoint_timer_query)
#ifndef glBeginQueryEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQueryEXT, (target, id), (GLenum target, GLuint id))
#define glBeginQueryEXT_defined
#endif
#ifndef glDeleteQueriesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueriesEXT, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueriesEXT_defined
#endif
#ifndef glEndQueryEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQueryEXT, (target), (GLenum target))
#define glEndQueryEXT_defined
#endif
#ifndef glGenQueriesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueriesEXT, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueriesEXT_defined
#endif
#ifndef glGetQueryObjecti64vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjecti64vEXT, (id, pname, params), (GLuint id, GLenum pname, GLint64 *params))
#define glGetQueryObjecti64vEXT_defined
#endif
#ifndef glGetQueryObjectivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectivEXT, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetQueryObjectivEXT_defined
#endif
#ifndef glGetQueryObjectui64vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectui64vEXT, (id, pname, params), (GLuint id, GLenum pname, GLuint64 *params))
#define glGetQueryObjectui64vEXT_defined
#endif
#ifndef glGetQueryObjectuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuivEXT, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuivEXT_defined
#endif
#ifndef glGetQueryivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryivEXT_defined
#endif
#ifndef glIsQueryEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQueryEXT, (id), (GLuint id))
#define glIsQueryEXT_defined
#endif
#ifndef glQueryCounterEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glQueryCounterEXT, (id, target), (GLuint id, GLenum target))
#define glQueryCounterEXT_defined
#endif
#endif // defined(GL_EXT_disjoint_timer_query)
#if defined(GL_EXT_draw_buffers)
#ifndef glDrawBuffersEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffersEXT, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffersEXT_defined
#endif
#endif // defined(GL_EXT_draw_buffers)
#if defined(GL_EXT_draw_buffers_indexed)
#ifndef glBlendEquationSeparateiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparateiEXT, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateiEXT_defined
#endif
#ifndef glBlendEquationiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationiEXT, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationiEXT_defined
#endif
#ifndef glBlendFuncSeparateiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparateiEXT, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateiEXT_defined
#endif
#ifndef glBlendFunciEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunciEXT, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunciEXT_defined
#endif
#ifndef glColorMaskiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMaskiEXT, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaskiEXT_defined
#endif
#ifndef glDisableiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableiEXT, (target, index), (GLenum target, GLuint index))
#define glDisableiEXT_defined
#endif
#ifndef glEnableiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableiEXT, (target, index), (GLenum target, GLuint index))
#define glEnableiEXT_defined
#endif
#ifndef glIsEnablediEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnablediEXT, (target, index), (GLenum target, GLuint index))
#define glIsEnablediEXT_defined
#endif
#endif // defined(GL_EXT_draw_buffers_indexed)
#if defined(GL_EXT_draw_elements_base_vertex)
#ifndef glDrawElementsBaseVertexEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsBaseVertexEXT, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertexEXT_defined
#endif
#ifndef glDrawElementsInstancedBaseVertexEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertexEXT, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertexEXT_defined
#endif
#ifndef glDrawRangeElementsBaseVertexEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElementsBaseVertexEXT, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertexEXT_defined
#endif
#ifndef glMultiDrawElementsBaseVertexEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawElementsBaseVertexEXT, (mode, count, type, indices, primcount, basevertex), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex))
#define glMultiDrawElementsBaseVertexEXT_defined
#endif
#endif // defined(GL_EXT_draw_elements_base_vertex)
#if defined(GL_EXT_draw_instanced)
#ifndef glDrawArraysInstancedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedEXT, (mode, start, count, primcount), (GLenum mode, GLint start, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedEXT_defined
#endif
#ifndef glDrawElementsInstancedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedEXT, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedEXT_defined
#endif
#endif // defined(GL_EXT_draw_instanced)
#if defined(GL_EXT_draw_transform_feedback)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawTransformFeedbackEXT, (mode, id), (GLenum mode, GLuint id))
#define glDrawTransformFeedbackEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawTransformFeedbackInstancedEXT, (mode, id, instancecount), (GLenum mode, GLuint id, GLsizei instancecount))
#define glDrawTransformFeedbackInstancedEXT_defined
#endif // defined(GL_EXT_draw_transform_feedback)
#if defined(GL_EXT_geometry_shader)
#ifndef glFramebufferTextureEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureEXT, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTextureEXT_defined
#endif
#endif // defined(GL_EXT_geometry_shader)
#if defined(GL_EXT_instanced_arrays)
#ifndef glVertexAttribDivisorEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisorEXT, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorEXT_defined
#endif
#endif // defined(GL_EXT_instanced_arrays)
#if defined(GL_EXT_map_buffer_range)
#ifndef glFlushMappedBufferRangeEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRangeEXT, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRangeEXT_defined
#endif
#ifndef glMapBufferRangeEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRangeEXT, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRangeEXT_defined
#endif
#endif // defined(GL_EXT_map_buffer_range)
#if defined(GL_EXT_multi_draw_arrays)
#ifndef glMultiDrawArraysEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawArraysEXT, (mode, first, count, primcount), (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount))
#define glMultiDrawArraysEXT_defined
#endif
#ifndef glMultiDrawElementsEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawElementsEXT, (mode, count, type, indices, primcount), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount))
#define glMultiDrawElementsEXT_defined
#endif
#endif // defined(GL_EXT_multi_draw_arrays)
#if defined(GL_EXT_multi_draw_indirect)
#ifndef glMultiDrawArraysIndirectEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawArraysIndirectEXT, (mode, indirect, drawcount, stride), (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawArraysIndirectEXT_defined
#endif
#ifndef glMultiDrawElementsIndirectEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawElementsIndirectEXT, (mode, type, indirect, drawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawElementsIndirectEXT_defined
#endif
#endif // defined(GL_EXT_multi_draw_indirect)
#if defined(GL_EXT_multisampled_render_to_texture)
#ifndef glFramebufferTexture2DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2DMultisampleEXT, (target, attachment, textarget, texture, level, samples), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples))
#define glFramebufferTexture2DMultisampleEXT_defined
#endif
#ifndef glRenderbufferStorageMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleEXT, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleEXT_defined
#endif
#endif // defined(GL_EXT_multisampled_render_to_texture)
#if defined(GL_EXT_multiview_draw_buffers)
#ifndef glDrawBuffersIndexedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffersIndexedEXT, (n, location, indices), (GLint n, const GLenum *location, const GLint *indices))
#define glDrawBuffersIndexedEXT_defined
#endif
#ifndef glGetIntegeri_vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_vEXT, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_vEXT_defined
#endif
#ifndef glReadBufferIndexedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBufferIndexedEXT, (src, index), (GLenum src, GLint index))
#define glReadBufferIndexedEXT_defined
#endif
#endif // defined(GL_EXT_multiview_draw_buffers)
#if defined(GL_EXT_polygon_offset_clamp)
#ifndef glPolygonOffsetClampEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffsetClampEXT, (factor, units, clamp), (GLfloat factor, GLfloat units, GLfloat clamp))
#define glPolygonOffsetClampEXT_defined
#endif
#endif // defined(GL_EXT_polygon_offset_clamp)
#if defined(GL_EXT_primitive_bounding_box)
#ifndef glPrimitiveBoundingBoxEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPrimitiveBoundingBoxEXT, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBoxEXT_defined
#endif
#endif // defined(GL_EXT_primitive_bounding_box)
#if defined(GL_EXT_raster_multisample)
#ifndef glRasterSamplesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRasterSamplesEXT, (samples, fixedsamplelocations), (GLuint samples, GLboolean fixedsamplelocations))
#define glRasterSamplesEXT_defined
#endif
#endif // defined(GL_EXT_raster_multisample)
#if defined(GL_EXT_robustness)
#ifndef glGetGraphicsResetStatusEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetGraphicsResetStatusEXT, (), (void))
#define glGetGraphicsResetStatusEXT_defined
#endif
#ifndef glGetnUniformfvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformfvEXT, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfvEXT_defined
#endif
#ifndef glGetnUniformivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformivEXT, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformivEXT_defined
#endif
#ifndef glReadnPixelsEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadnPixelsEXT, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixelsEXT_defined
#endif
#endif // defined(GL_EXT_robustness)
#if defined(GL_EXT_separate_shader_objects)
#ifndef glActiveShaderProgramEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveShaderProgramEXT, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgramEXT_defined
#endif
#ifndef glBindProgramPipelineEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindProgramPipelineEXT, (pipeline), (GLuint pipeline))
#define glBindProgramPipelineEXT_defined
#endif
#ifndef glCreateShaderProgramvEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShaderProgramvEXT, (type, count, strings), (GLenum type, GLsizei count, const GLchar **strings))
#define glCreateShaderProgramvEXT_defined
#endif
#ifndef glDeleteProgramPipelinesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgramPipelinesEXT, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelinesEXT_defined
#endif
#ifndef glGenProgramPipelinesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenProgramPipelinesEXT, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelinesEXT_defined
#endif
#ifndef glGetProgramPipelineInfoLogEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineInfoLogEXT, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLogEXT_defined
#endif
#ifndef glGetProgramPipelineivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineivEXT, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineivEXT_defined
#endif
#ifndef glIsProgramPipelineEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgramPipelineEXT, (pipeline), (GLuint pipeline))
#define glIsProgramPipelineEXT_defined
#endif
#ifndef glProgramParameteriEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteriEXT, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteriEXT_defined
#endif
#ifndef glProgramUniform1fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fEXT, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1fEXT_defined
#endif
#ifndef glProgramUniform1fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fvEXT_defined
#endif
#ifndef glProgramUniform1iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1iEXT, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1iEXT_defined
#endif
#ifndef glProgramUniform1ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1ivEXT_defined
#endif
#ifndef glProgramUniform1uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uiEXT, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1uiEXT_defined
#endif
#ifndef glProgramUniform1uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uivEXT_defined
#endif
#ifndef glProgramUniform2fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fEXT, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2fEXT_defined
#endif
#ifndef glProgramUniform2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fvEXT_defined
#endif
#ifndef glProgramUniform2iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2iEXT, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2iEXT_defined
#endif
#ifndef glProgramUniform2ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2ivEXT_defined
#endif
#ifndef glProgramUniform2uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uiEXT, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2uiEXT_defined
#endif
#ifndef glProgramUniform2uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uivEXT_defined
#endif
#ifndef glProgramUniform3fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3fEXT_defined
#endif
#ifndef glProgramUniform3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fvEXT_defined
#endif
#ifndef glProgramUniform3iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3iEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3iEXT_defined
#endif
#ifndef glProgramUniform3ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3ivEXT_defined
#endif
#ifndef glProgramUniform3uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uiEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3uiEXT_defined
#endif
#ifndef glProgramUniform3uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uivEXT_defined
#endif
#ifndef glProgramUniform4fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4fEXT_defined
#endif
#ifndef glProgramUniform4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fvEXT_defined
#endif
#ifndef glProgramUniform4iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4iEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4iEXT_defined
#endif
#ifndef glProgramUniform4ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4ivEXT_defined
#endif
#ifndef glProgramUniform4uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uiEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4uiEXT_defined
#endif
#ifndef glProgramUniform4uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uivEXT_defined
#endif
#ifndef glProgramUniformMatrix2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fvEXT_defined
#endif
#ifndef glUseProgramStagesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgramStagesEXT, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStagesEXT_defined
#endif
#ifndef glValidateProgramPipelineEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgramPipelineEXT, (pipeline), (GLuint pipeline))
#define glValidateProgramPipelineEXT_defined
#endif
#endif // defined(GL_EXT_separate_shader_objects)
#if defined(GL_EXT_shader_pixel_local_storage2)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearPixelLocalStorageuiEXT, (offset, n, values), (GLsizei offset, GLsizei n, const GLuint *values))
#define glClearPixelLocalStorageuiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferPixelLocalStorageSizeEXT, (target, size), (GLuint target, GLsizei size))
#define glFramebufferPixelLocalStorageSizeEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsizei, GL_APIENTRY, glGetFramebufferPixelLocalStorageSizeEXT, (target), (GLuint target))
#define glGetFramebufferPixelLocalStorageSizeEXT_defined
#endif // defined(GL_EXT_shader_pixel_local_storage2)
#if defined(GL_EXT_sparse_texture)
#ifndef glTexPageCommitmentEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexPageCommitmentEXT, (target, level, xoffset, yoffset, zoffset, width, height, depth, commit), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit))
#define glTexPageCommitmentEXT_defined
#endif
#endif // defined(GL_EXT_sparse_texture)
#if defined(GL_EXT_tessellation_shader)
#ifndef glPatchParameteriEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPatchParameteriEXT, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteriEXT_defined
#endif
#endif // defined(GL_EXT_tessellation_shader)
#if defined(GL_EXT_texture_border_clamp)
#ifndef glGetSamplerParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIivEXT, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIivEXT_defined
#endif
#ifndef glGetSamplerParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIuivEXT, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuivEXT_defined
#endif
#ifndef glGetTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIivEXT_defined
#endif
#ifndef glGetTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIuivEXT, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuivEXT_defined
#endif
#ifndef glSamplerParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIivEXT, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIivEXT_defined
#endif
#ifndef glSamplerParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIuivEXT, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuivEXT_defined
#endif
#ifndef glTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIivEXT_defined
#endif
#ifndef glTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIuivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuivEXT_defined
#endif
#endif // defined(GL_EXT_texture_border_clamp)
#if defined(GL_EXT_texture_buffer)
#ifndef glTexBufferEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferEXT, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBufferEXT_defined
#endif
#ifndef glTexBufferRangeEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferRangeEXT, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRangeEXT_defined
#endif
#endif // defined(GL_EXT_texture_buffer)
#if defined(GL_EXT_texture_storage)
#ifndef glTexStorage1DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage1DEXT, (target, levels, internalformat, width), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTexStorage1DEXT_defined
#endif
#ifndef glTexStorage2DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2DEXT, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2DEXT_defined
#endif
#ifndef glTexStorage3DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3DEXT, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3DEXT_defined
#endif
#ifndef glTextureStorage1DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorage1DEXT, (texture, target, levels, internalformat, width), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTextureStorage1DEXT_defined
#endif
#ifndef glTextureStorage2DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorage2DEXT, (texture, target, levels, internalformat, width, height), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTextureStorage2DEXT_defined
#endif
#ifndef glTextureStorage3DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorage3DEXT, (texture, target, levels, internalformat, width, height, depth), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTextureStorage3DEXT_defined
#endif
#endif // defined(GL_EXT_texture_storage)
#if defined(GL_EXT_texture_view)
#ifndef glTextureViewEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureViewEXT, (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers), (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))
#define glTextureViewEXT_defined
#endif
#endif // defined(GL_EXT_texture_view)
#if defined(GL_EXT_window_rectangles)
#ifndef glWindowRectanglesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWindowRectanglesEXT, (mode, count, box), (GLenum mode, GLsizei count, const GLint *box))
#define glWindowRectanglesEXT_defined
#endif
#endif // defined(GL_EXT_window_rectangles)
#if defined(GL_IMG_bindless_texture)
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureHandleIMG, (texture), (GLuint texture))
#define glGetTextureHandleIMG_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureSamplerHandleIMG, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64IMG, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64IMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64vIMG, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64IMG, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64IMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64vIMG, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vIMG_defined
#endif // defined(GL_IMG_bindless_texture)
#if defined(GL_IMG_framebuffer_downsample)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2DDownsampleIMG, (target, attachment, textarget, texture, level, xscale, yscale), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale))
#define glFramebufferTexture2DDownsampleIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayerDownsampleIMG, (target, attachment, texture, level, layer, xscale, yscale), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale))
#define glFramebufferTextureLayerDownsampleIMG_defined
#endif // defined(GL_IMG_framebuffer_downsample)
#if defined(GL_IMG_multisampled_render_to_texture)
#ifndef glFramebufferTexture2DMultisampleIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2DMultisampleIMG, (target, attachment, textarget, texture, level, samples), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples))
#define glFramebufferTexture2DMultisampleIMG_defined
#endif
#ifndef glRenderbufferStorageMultisampleIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleIMG, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleIMG_defined
#endif
#endif // defined(GL_IMG_multisampled_render_to_texture)
#if defined(GL_INTEL_framebuffer_CMAA)
#ifndef glApplyFramebufferAttachmentCMAAINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glApplyFramebufferAttachmentCMAAINTEL, (), (void))
#define glApplyFramebufferAttachmentCMAAINTEL_defined
#endif
#endif // defined(GL_INTEL_framebuffer_CMAA)
#if defined(GL_INTEL_performance_query)
#ifndef glBeginPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glBeginPerfQueryINTEL_defined
#endif
#ifndef glCreatePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCreatePerfQueryINTEL, (queryId, queryHandle), (GLuint queryId, GLuint *queryHandle))
#define glCreatePerfQueryINTEL_defined
#endif
#ifndef glDeletePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeletePerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glDeletePerfQueryINTEL_defined
#endif
#ifndef glEndPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glEndPerfQueryINTEL_defined
#endif
#ifndef glGetFirstPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFirstPerfQueryIdINTEL, (queryId), (GLuint *queryId))
#define glGetFirstPerfQueryIdINTEL_defined
#endif
#ifndef glGetNextPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetNextPerfQueryIdINTEL, (queryId, nextQueryId), (GLuint queryId, GLuint *nextQueryId))
#define glGetNextPerfQueryIdINTEL_defined
#endif
#ifndef glGetPerfCounterInfoINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfCounterInfoINTEL, (queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue), (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue))
#define glGetPerfCounterInfoINTEL_defined
#endif
#ifndef glGetPerfQueryDataINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfQueryDataINTEL, (queryHandle, flags, dataSize, data, bytesWritten), (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten))
#define glGetPerfQueryDataINTEL_defined
#endif
#ifndef glGetPerfQueryIdByNameINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfQueryIdByNameINTEL, (queryName, queryId), (GLchar *queryName, GLuint *queryId))
#define glGetPerfQueryIdByNameINTEL_defined
#endif
#ifndef glGetPerfQueryInfoINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfQueryInfoINTEL, (queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask), (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask))
#define glGetPerfQueryInfoINTEL_defined
#endif
#endif // defined(GL_INTEL_performance_query)
#if defined(GL_KHR_blend_equation_advanced)
#ifndef glBlendBarrierKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendBarrierKHR, (), (void))
#define glBlendBarrierKHR_defined
#endif
#endif // defined(GL_KHR_blend_equation_advanced)
#if defined(GL_KHR_debug)
#ifndef glDebugMessageCallbackKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageCallbackKHR, (callback, userParam), (GLDEBUGPROCKHR callback, const void *userParam))
#define glDebugMessageCallbackKHR_defined
#endif
#ifndef glDebugMessageControlKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageControlKHR, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControlKHR_defined
#endif
#ifndef glDebugMessageInsertKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageInsertKHR, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsertKHR_defined
#endif
#ifndef glGetDebugMessageLogKHR_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetDebugMessageLogKHR, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLogKHR_defined
#endif
#ifndef glGetObjectLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectLabelKHR, (identifier, name, bufSize, length, label), (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabelKHR_defined
#endif
#ifndef glGetObjectPtrLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectPtrLabelKHR, (ptr, bufSize, length, label), (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectPtrLabelKHR_defined
#endif
#ifndef glGetPointervKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPointervKHR, (pname, params), (GLenum pname, void **params))
#define glGetPointervKHR_defined
#endif
#ifndef glObjectLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectLabelKHR, (identifier, name, length, label), (GLenum identifier, GLuint name, GLsizei length, const GLchar *label))
#define glObjectLabelKHR_defined
#endif
#ifndef glObjectPtrLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectPtrLabelKHR, (ptr, length, label), (const void *ptr, GLsizei length, const GLchar *label))
#define glObjectPtrLabelKHR_defined
#endif
#ifndef glPopDebugGroupKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPopDebugGroupKHR, (), (void))
#define glPopDebugGroupKHR_defined
#endif
#ifndef glPushDebugGroupKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPushDebugGroupKHR, (source, id, length, message), (GLenum source, GLuint id, GLsizei length, const GLchar *message))
#define glPushDebugGroupKHR_defined
#endif
#endif // defined(GL_KHR_debug)
#if defined(GL_KHR_robustness)
#ifndef glGetGraphicsResetStatusKHR_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetGraphicsResetStatusKHR, (), (void))
#define glGetGraphicsResetStatusKHR_defined
#endif
#ifndef glGetnUniformfvKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformfvKHR, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfvKHR_defined
#endif
#ifndef glGetnUniformivKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformivKHR, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformivKHR_defined
#endif
#ifndef glGetnUniformuivKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformuivKHR, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuivKHR_defined
#endif
#ifndef glReadnPixelsKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadnPixelsKHR, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixelsKHR_defined
#endif
#endif // defined(GL_KHR_robustness)
#if defined(GL_NV_bindless_texture)
#ifndef glGetImageHandleNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetImageHandleNV, (texture, level, layered, layer, format), (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))
#define glGetImageHandleNV_defined
#endif
#ifndef glGetTextureHandleNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureHandleNV, (texture), (GLuint texture))
#define glGetTextureHandleNV_defined
#endif
#ifndef glGetTextureSamplerHandleNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureSamplerHandleNV, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleNV_defined
#endif
#ifndef glIsImageHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsImageHandleResidentNV, (handle), (GLuint64 handle))
#define glIsImageHandleResidentNV_defined
#endif
#ifndef glIsTextureHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glIsTextureHandleResidentNV_defined
#endif
#ifndef glMakeImageHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeImageHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeImageHandleNonResidentNV_defined
#endif
#ifndef glMakeImageHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeImageHandleResidentNV, (handle, access), (GLuint64 handle, GLenum access))
#define glMakeImageHandleResidentNV_defined
#endif
#ifndef glMakeTextureHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeTextureHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleNonResidentNV_defined
#endif
#ifndef glMakeTextureHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleResidentNV_defined
#endif
#ifndef glProgramUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64NV, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64NV_defined
#endif
#ifndef glProgramUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64vNV, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vNV_defined
#endif
#ifndef glUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64NV, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64NV_defined
#endif
#ifndef glUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vNV_defined
#endif
#endif // defined(GL_NV_bindless_texture)
#if defined(GL_NV_blend_equation_advanced)
#ifndef glBlendBarrierNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendBarrierNV, (), (void))
#define glBlendBarrierNV_defined
#endif
#ifndef glBlendParameteriNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendParameteriNV, (pname, value), (GLenum pname, GLint value))
#define glBlendParameteriNV_defined
#endif
#endif // defined(GL_NV_blend_equation_advanced)
#if defined(GL_NV_conditional_render)
#ifndef glBeginConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginConditionalRenderNV, (id, mode), (GLuint id, GLenum mode))
#define glBeginConditionalRenderNV_defined
#endif
#ifndef glEndConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndConditionalRenderNV, (), (void))
#define glEndConditionalRenderNV_defined
#endif
#endif // defined(GL_NV_conditional_render)
#if defined(GL_NV_conservative_raster)
#ifndef glSubpixelPrecisionBiasNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSubpixelPrecisionBiasNV, (xbits, ybits), (GLuint xbits, GLuint ybits))
#define glSubpixelPrecisionBiasNV_defined
#endif
#endif // defined(GL_NV_conservative_raster)
#if defined(GL_NV_conservative_raster_pre_snap_triangles)
#ifndef glConservativeRasterParameteriNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glConservativeRasterParameteriNV, (pname, param), (GLenum pname, GLint param))
#define glConservativeRasterParameteriNV_defined
#endif
#endif // defined(GL_NV_conservative_raster_pre_snap_triangles)
#if defined(GL_NV_copy_buffer)
#ifndef glCopyBufferSubDataNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubDataNV, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubDataNV_defined
#endif
#endif // defined(GL_NV_copy_buffer)
#if defined(GL_NV_coverage_sample)
#ifndef glCoverageMaskNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageMaskNV, (mask), (GLboolean mask))
#define glCoverageMaskNV_defined
#endif
#ifndef glCoverageOperationNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageOperationNV, (operation), (GLenum operation))
#define glCoverageOperationNV_defined
#endif
#endif // defined(GL_NV_coverage_sample)
#if defined(GL_NV_draw_buffers)
#ifndef glDrawBuffersNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffersNV, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffersNV_defined
#endif
#endif // defined(GL_NV_draw_buffers)
#if defined(GL_NV_draw_instanced)
#ifndef glDrawArraysInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedNV, (mode, first, count, primcount), (GLenum mode, GLint first, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedNV_defined
#endif
#ifndef glDrawElementsInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedNV, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedNV_defined
#endif
#endif // defined(GL_NV_draw_instanced)
#if defined(GL_NV_fence)
#ifndef glDeleteFencesNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFencesNV, (n, fences), (GLsizei n, const GLuint *fences))
#define glDeleteFencesNV_defined
#endif
#ifndef glFinishFenceNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinishFenceNV, (fence), (GLuint fence))
#define glFinishFenceNV_defined
#endif
#ifndef glGenFencesNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFencesNV, (n, fences), (GLsizei n, GLuint *fences))
#define glGenFencesNV_defined
#endif
#ifndef glGetFenceivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFenceivNV, (fence, pname, params), (GLuint fence, GLenum pname, GLint *params))
#define glGetFenceivNV_defined
#endif
#ifndef glIsFenceNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFenceNV, (fence), (GLuint fence))
#define glIsFenceNV_defined
#endif
#ifndef glSetFenceNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSetFenceNV, (fence, condition), (GLuint fence, GLenum condition))
#define glSetFenceNV_defined
#endif
#ifndef glTestFenceNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glTestFenceNV, (fence), (GLuint fence))
#define glTestFenceNV_defined
#endif
#endif // defined(GL_NV_fence)
#if defined(GL_NV_fragment_coverage_to_color)
#ifndef glFragmentCoverageColorNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFragmentCoverageColorNV, (color), (GLuint color))
#define glFragmentCoverageColorNV_defined
#endif
#endif // defined(GL_NV_fragment_coverage_to_color)
#if defined(GL_NV_framebuffer_blit)
#ifndef glBlitFramebufferNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebufferNV, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebufferNV_defined
#endif
#endif // defined(GL_NV_framebuffer_blit)
#if defined(GL_NV_framebuffer_mixed_samples)
#ifndef glCoverageModulationNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageModulationNV, (components), (GLenum components))
#define glCoverageModulationNV_defined
#endif
#ifndef glCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageModulationTableNV, (n, v), (GLsizei n, const GLfloat *v))
#define glCoverageModulationTableNV_defined
#endif
#ifndef glGetCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetCoverageModulationTableNV, (bufsize, v), (GLsizei bufsize, GLfloat *v))
#define glGetCoverageModulationTableNV_defined
#endif
#endif // defined(GL_NV_framebuffer_mixed_samples)
#if defined(GL_NV_framebuffer_multisample)
#ifndef glRenderbufferStorageMultisampleNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleNV, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleNV_defined
#endif
#endif // defined(GL_NV_framebuffer_multisample)
#if defined(GL_NV_gpu_shader5)
#ifndef glGetUniformi64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformi64vNV, (program, location, params), (GLuint program, GLint location, GLint64EXT *params))
#define glGetUniformi64vNV_defined
#endif
#ifndef glProgramUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i64NV, (program, location, x), (GLuint program, GLint location, GLint64EXT x))
#define glProgramUniform1i64NV_defined
#endif
#ifndef glProgramUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform1i64vNV_defined
#endif
#ifndef glProgramUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui64NV, (program, location, x), (GLuint program, GLint location, GLuint64EXT x))
#define glProgramUniform1ui64NV_defined
#endif
#ifndef glProgramUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform1ui64vNV_defined
#endif
#ifndef glProgramUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i64NV, (program, location, x, y), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y))
#define glProgramUniform2i64NV_defined
#endif
#ifndef glProgramUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform2i64vNV_defined
#endif
#ifndef glProgramUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui64NV, (program, location, x, y), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y))
#define glProgramUniform2ui64NV_defined
#endif
#ifndef glProgramUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform2ui64vNV_defined
#endif
#ifndef glProgramUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i64NV, (program, location, x, y, z), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glProgramUniform3i64NV_defined
#endif
#ifndef glProgramUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform3i64vNV_defined
#endif
#ifndef glProgramUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui64NV, (program, location, x, y, z), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glProgramUniform3ui64NV_defined
#endif
#ifndef glProgramUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform3ui64vNV_defined
#endif
#ifndef glProgramUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glProgramUniform4i64NV_defined
#endif
#ifndef glProgramUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform4i64vNV_defined
#endif
#ifndef glProgramUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glProgramUniform4ui64NV_defined
#endif
#ifndef glProgramUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform4ui64vNV_defined
#endif
#ifndef glUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i64NV, (location, x), (GLint location, GLint64EXT x))
#define glUniform1i64NV_defined
#endif
#ifndef glUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform1i64vNV_defined
#endif
#ifndef glUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui64NV, (location, x), (GLint location, GLuint64EXT x))
#define glUniform1ui64NV_defined
#endif
#ifndef glUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform1ui64vNV_defined
#endif
#ifndef glUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i64NV, (location, x, y), (GLint location, GLint64EXT x, GLint64EXT y))
#define glUniform2i64NV_defined
#endif
#ifndef glUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform2i64vNV_defined
#endif
#ifndef glUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui64NV, (location, x, y), (GLint location, GLuint64EXT x, GLuint64EXT y))
#define glUniform2ui64NV_defined
#endif
#ifndef glUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform2ui64vNV_defined
#endif
#ifndef glUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i64NV, (location, x, y, z), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glUniform3i64NV_defined
#endif
#ifndef glUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform3i64vNV_defined
#endif
#ifndef glUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui64NV, (location, x, y, z), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glUniform3ui64NV_defined
#endif
#ifndef glUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform3ui64vNV_defined
#endif
#ifndef glUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i64NV, (location, x, y, z, w), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glUniform4i64NV_defined
#endif
#ifndef glUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform4i64vNV_defined
#endif
#ifndef glUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui64NV, (location, x, y, z, w), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glUniform4ui64NV_defined
#endif
#ifndef glUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform4ui64vNV_defined
#endif
#endif // defined(GL_NV_gpu_shader5)
#if defined(GL_NV_instanced_arrays)
#ifndef glVertexAttribDivisorNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisorNV, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorNV_defined
#endif
#endif // defined(GL_NV_instanced_arrays)
#if defined(GL_NV_internalformat_sample_query)
#ifndef glGetInternalformatSampleivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformatSampleivNV, (target, internalformat, samples, pname, bufSize, params), (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformatSampleivNV_defined
#endif
#endif // defined(GL_NV_internalformat_sample_query)
#if defined(GL_NV_non_square_matrices)
#ifndef glUniformMatrix2x3fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fvNV_defined
#endif
#ifndef glUniformMatrix2x4fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fvNV_defined
#endif
#ifndef glUniformMatrix3x2fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fvNV_defined
#endif
#ifndef glUniformMatrix3x4fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fvNV_defined
#endif
#ifndef glUniformMatrix4x2fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fvNV_defined
#endif
#ifndef glUniformMatrix4x3fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fvNV_defined
#endif
#endif // defined(GL_NV_non_square_matrices)
#if defined(GL_NV_path_rendering)
#ifndef glCopyPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyPathNV, (resultPath, srcPath), (GLuint resultPath, GLuint srcPath))
#define glCopyPathNV_defined
#endif
#ifndef glCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverFillPathInstancedNV_defined
#endif
#ifndef glCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverFillPathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverFillPathNV_defined
#endif
#ifndef glCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverStrokePathInstancedNV_defined
#endif
#ifndef glCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverStrokePathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverStrokePathNV_defined
#endif
#ifndef glDeletePathsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeletePathsNV, (path, range), (GLuint path, GLsizei range))
#define glDeletePathsNV_defined
#endif
#ifndef glGenPathsNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGenPathsNV, (range), (GLsizei range))
#define glGenPathsNV_defined
#endif
#ifndef glGetPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathCommandsNV, (path, commands), (GLuint path, GLubyte *commands))
#define glGetPathCommandsNV_defined
#endif
#ifndef glGetPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathCoordsNV, (path, coords), (GLuint path, GLfloat *coords))
#define glGetPathCoordsNV_defined
#endif
#ifndef glGetPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathDashArrayNV, (path, dashArray), (GLuint path, GLfloat *dashArray))
#define glGetPathDashArrayNV_defined
#endif
#ifndef glGetPathLengthNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLfloat, GL_APIENTRY, glGetPathLengthNV, (path, startSegment, numSegments), (GLuint path, GLsizei startSegment, GLsizei numSegments))
#define glGetPathLengthNV_defined
#endif
#ifndef glGetPathMetricRangeNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathMetricRangeNV, (metricQueryMask, firstPathName, numPaths, stride, metrics), (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricRangeNV_defined
#endif
#ifndef glGetPathMetricsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathMetricsNV, (metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics), (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricsNV_defined
#endif
#ifndef glGetPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat *value))
#define glGetPathParameterfvNV_defined
#endif
#ifndef glGetPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, GLint *value))
#define glGetPathParameterivNV_defined
#endif
#ifndef glGetPathSpacingNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathSpacingNV, (pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing), (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing))
#define glGetPathSpacingNV_defined
#endif
#ifndef glGetProgramResourcefvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourcefvNV, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params))
#define glGetProgramResourcefvNV_defined
#endif
#ifndef glInterpolatePathsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInterpolatePathsNV, (resultPath, pathA, pathB, weight), (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight))
#define glInterpolatePathsNV_defined
#endif
#ifndef glIsPathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsPathNV, (path), (GLuint path))
#define glIsPathNV_defined
#endif
#ifndef glIsPointInFillPathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsPointInFillPathNV, (path, mask, x, y), (GLuint path, GLuint mask, GLfloat x, GLfloat y))
#define glIsPointInFillPathNV_defined
#endif
#ifndef glIsPointInStrokePathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsPointInStrokePathNV, (path, x, y), (GLuint path, GLfloat x, GLfloat y))
#define glIsPointInStrokePathNV_defined
#endif
#ifndef glMatrixLoad3x2fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoad3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x2fNV_defined
#endif
#ifndef glMatrixLoad3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoad3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x3fNV_defined
#endif
#ifndef glMatrixLoadTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoadTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoadTranspose3x3fNV_defined
#endif
#ifndef glMatrixMult3x2fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMult3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x2fNV_defined
#endif
#ifndef glMatrixMult3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMult3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x3fNV_defined
#endif
#ifndef glMatrixMultTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMultTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMultTranspose3x3fNV_defined
#endif
#ifndef glPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathCommandsNV, (path, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCommandsNV_defined
#endif
#ifndef glPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathCoordsNV, (path, numCoords, coordType, coords), (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCoordsNV_defined
#endif
#ifndef glPathCoverDepthFuncNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathCoverDepthFuncNV, (func), (GLenum func))
#define glPathCoverDepthFuncNV_defined
#endif
#ifndef glPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathDashArrayNV, (path, dashCount, dashArray), (GLuint path, GLsizei dashCount, const GLfloat *dashArray))
#define glPathDashArrayNV_defined
#endif
#ifndef glPathGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glPathGlyphIndexArrayNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphIndexArrayNV_defined
#endif
#ifndef glPathGlyphIndexRangeNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glPathGlyphIndexRangeNV, (fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount), (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]))
#define glPathGlyphIndexRangeNV_defined
#endif
#ifndef glPathGlyphRangeNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathGlyphRangeNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphRangeNV_defined
#endif
#ifndef glPathGlyphsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathGlyphsNV, (firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphsNV_defined
#endif
#ifndef glPathMemoryGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glPathMemoryGlyphIndexArrayNV, (firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathMemoryGlyphIndexArrayNV_defined
#endif
#ifndef glPathParameterfNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameterfNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat value))
#define glPathParameterfNV_defined
#endif
#ifndef glPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, const GLfloat *value))
#define glPathParameterfvNV_defined
#endif
#ifndef glPathParameteriNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameteriNV, (path, pname, value), (GLuint path, GLenum pname, GLint value))
#define glPathParameteriNV_defined
#endif
#ifndef glPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, const GLint *value))
#define glPathParameterivNV_defined
#endif
#ifndef glPathStencilDepthOffsetNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathStencilDepthOffsetNV, (factor, units), (GLfloat factor, GLfloat units))
#define glPathStencilDepthOffsetNV_defined
#endif
#ifndef glPathStencilFuncNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathStencilFuncNV, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glPathStencilFuncNV_defined
#endif
#ifndef glPathStringNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathStringNV, (path, format, length, pathString), (GLuint path, GLenum format, GLsizei length, const void *pathString))
#define glPathStringNV_defined
#endif
#ifndef glPathSubCommandsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathSubCommandsNV, (path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCommandsNV_defined
#endif
#ifndef glPathSubCoordsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathSubCoordsNV, (path, coordStart, numCoords, coordType, coords), (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCoordsNV_defined
#endif
#ifndef glPointAlongPathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glPointAlongPathNV, (path, startSegment, numSegments, distance, x, y, tangentX, tangentY), (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY))
#define glPointAlongPathNV_defined
#endif
#ifndef glProgramPathFragmentInputGenNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramPathFragmentInputGenNV, (program, location, genMode, components, coeffs), (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs))
#define glProgramPathFragmentInputGenNV_defined
#endif
#ifndef glStencilFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilFillPathInstancedNV_defined
#endif
#ifndef glStencilFillPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFillPathNV, (path, fillMode, mask), (GLuint path, GLenum fillMode, GLuint mask))
#define glStencilFillPathNV_defined
#endif
#ifndef glStencilStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilStrokePathInstancedNV_defined
#endif
#ifndef glStencilStrokePathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilStrokePathNV, (path, reference, mask), (GLuint path, GLint reference, GLuint mask))
#define glStencilStrokePathNV_defined
#endif
#ifndef glStencilThenCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverFillPathInstancedNV_defined
#endif
#ifndef glStencilThenCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverFillPathNV, (path, fillMode, mask, coverMode), (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode))
#define glStencilThenCoverFillPathNV_defined
#endif
#ifndef glStencilThenCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverStrokePathInstancedNV_defined
#endif
#ifndef glStencilThenCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverStrokePathNV, (path, reference, mask, coverMode), (GLuint path, GLint reference, GLuint mask, GLenum coverMode))
#define glStencilThenCoverStrokePathNV_defined
#endif
#ifndef glTransformPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformPathNV, (resultPath, srcPath, transformType, transformValues), (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues))
#define glTransformPathNV_defined
#endif
#ifndef glWeightPathsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWeightPathsNV, (resultPath, numPaths, paths, weights), (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights))
#define glWeightPathsNV_defined
#endif
#endif // defined(GL_NV_path_rendering)
#if defined(GL_NV_polygon_mode)
#ifndef glPolygonModeNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonModeNV, (face, mode), (GLenum face, GLenum mode))
#define glPolygonModeNV_defined
#endif
#endif // defined(GL_NV_polygon_mode)
#if defined(GL_NV_read_buffer)
#ifndef glReadBufferNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBufferNV, (mode), (GLenum mode))
#define glReadBufferNV_defined
#endif
#endif // defined(GL_NV_read_buffer)
#if defined(GL_NV_sample_locations)
#ifndef glFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferSampleLocationsfvNV, (target, start, count, v), (GLenum target, GLuint start, GLsizei count, const GLfloat *v))
#define glFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glNamedFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glNamedFramebufferSampleLocationsfvNV, (framebuffer, start, count, v), (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))
#define glNamedFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glResolveDepthValuesNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResolveDepthValuesNV, (), (void))
#define glResolveDepthValuesNV_defined
#endif
#endif // defined(GL_NV_sample_locations)
#if defined(GL_NV_viewport_array)
#ifndef glDepthRangeArrayfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeArrayfvNV, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glDepthRangeArrayfvNV_defined
#endif
#ifndef glDepthRangeIndexedfNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeIndexedfNV, (index, n, f), (GLuint index, GLfloat n, GLfloat f))
#define glDepthRangeIndexedfNV_defined
#endif
#ifndef glDisableiNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableiNV, (target, index), (GLenum target, GLuint index))
#define glDisableiNV_defined
#endif
#ifndef glEnableiNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableiNV, (target, index), (GLenum target, GLuint index))
#define glEnableiNV_defined
#endif
#ifndef glGetFloati_vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloati_vNV, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloati_vNV_defined
#endif
#ifndef glIsEnablediNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnablediNV, (target, index), (GLenum target, GLuint index))
#define glIsEnablediNV_defined
#endif
#ifndef glScissorArrayvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorArrayvNV, (first, count, v), (GLuint first, GLsizei count, const GLint *v))
#define glScissorArrayvNV_defined
#endif
#ifndef glScissorIndexedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedNV, (index, left, bottom, width, height), (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))
#define glScissorIndexedNV_defined
#endif
#ifndef glScissorIndexedvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedvNV, (index, v), (GLuint index, const GLint *v))
#define glScissorIndexedvNV_defined
#endif
#ifndef glViewportArrayvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportArrayvNV, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glViewportArrayvNV_defined
#endif
#ifndef glViewportIndexedfNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfNV, (index, x, y, w, h), (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))
#define glViewportIndexedfNV_defined
#endif
#ifndef glViewportIndexedfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfvNV, (index, v), (GLuint index, const GLfloat *v))
#define glViewportIndexedfvNV_defined
#endif
#endif // defined(GL_NV_viewport_array)
#if defined(GL_NV_viewport_swizzle)
#ifndef glViewportSwizzleNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportSwizzleNV, (index, swizzlex, swizzley, swizzlez, swizzlew), (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew))
#define glViewportSwizzleNV_defined
#endif
#endif // defined(GL_NV_viewport_swizzle)
#if defined(GL_OES_EGL_image)
#ifndef glEGLImageTargetRenderbufferStorageOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEGLImageTargetRenderbufferStorageOES, (target, image), (GLenum target, GLeglImageOES image))
#define glEGLImageTargetRenderbufferStorageOES_defined
#endif
#ifndef glEGLImageTargetTexture2DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEGLImageTargetTexture2DOES, (target, image), (GLenum target, GLeglImageOES image))
#define glEGLImageTargetTexture2DOES_defined
#endif
#endif // defined(GL_OES_EGL_image)
#if defined(GL_OES_copy_image)
#ifndef glCopyImageSubDataOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyImageSubDataOES, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubDataOES_defined
#endif
#endif // defined(GL_OES_copy_image)
#if defined(GL_OES_draw_buffers_indexed)
#ifndef glBlendEquationSeparateiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparateiOES, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateiOES_defined
#endif
#ifndef glBlendEquationiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationiOES, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationiOES_defined
#endif
#ifndef glBlendFuncSeparateiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparateiOES, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateiOES_defined
#endif
#ifndef glBlendFunciOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunciOES, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunciOES_defined
#endif
#ifndef glColorMaskiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMaskiOES, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaskiOES_defined
#endif
#ifndef glDisableiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableiOES, (target, index), (GLenum target, GLuint index))
#define glDisableiOES_defined
#endif
#ifndef glEnableiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableiOES, (target, index), (GLenum target, GLuint index))
#define glEnableiOES_defined
#endif
#ifndef glIsEnablediOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnablediOES, (target, index), (GLenum target, GLuint index))
#define glIsEnablediOES_defined
#endif
#endif // defined(GL_OES_draw_buffers_indexed)
#if defined(GL_OES_draw_elements_base_vertex)
#ifndef glDrawElementsBaseVertexOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsBaseVertexOES, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertexOES_defined
#endif
#ifndef glDrawElementsInstancedBaseVertexOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertexOES, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertexOES_defined
#endif
#ifndef glDrawRangeElementsBaseVertexOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElementsBaseVertexOES, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertexOES_defined
#endif
#ifndef glMultiDrawElementsBaseVertexOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawElementsBaseVertexOES, (mode, count, type, indices, primcount, basevertex), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex))
#define glMultiDrawElementsBaseVertexOES_defined
#endif
#endif // defined(GL_OES_draw_elements_base_vertex)
#if defined(GL_OES_geometry_shader)
#ifndef glFramebufferTextureOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureOES, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTextureOES_defined
#endif
#endif // defined(GL_OES_geometry_shader)
#if defined(GL_OES_get_program_binary)
#ifndef glGetProgramBinaryOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinaryOES, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinaryOES_defined
#endif
#ifndef glProgramBinaryOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinaryOES, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLint length))
#define glProgramBinaryOES_defined
#endif
#endif // defined(GL_OES_get_program_binary)
#if defined(GL_OES_mapbuffer)
#ifndef glGetBufferPointervOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointervOES, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointervOES_defined
#endif
#ifndef glMapBufferOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferOES, (target, access), (GLenum target, GLenum access))
#define glMapBufferOES_defined
#endif
#ifndef glUnmapBufferOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBufferOES, (target), (GLenum target))
#define glUnmapBufferOES_defined
#endif
#endif // defined(GL_OES_mapbuffer)
#if defined(GL_OES_primitive_bounding_box)
#ifndef glPrimitiveBoundingBoxOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPrimitiveBoundingBoxOES, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBoxOES_defined
#endif
#endif // defined(GL_OES_primitive_bounding_box)
#if defined(GL_OES_sample_shading)
#ifndef glMinSampleShadingOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMinSampleShadingOES, (value), (GLfloat value))
#define glMinSampleShadingOES_defined
#endif
#endif // defined(GL_OES_sample_shading)
#if defined(GL_OES_tessellation_shader)
#ifndef glPatchParameteriOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPatchParameteriOES, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteriOES_defined
#endif
#endif // defined(GL_OES_tessellation_shader)
#if defined(GL_OES_texture_3D)
#ifndef glCompressedTexImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3DOES, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3DOES_defined
#endif
#ifndef glCompressedTexSubImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3DOES, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3DOES_defined
#endif
#ifndef glCopyTexSubImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3DOES, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3DOES_defined
#endif
#ifndef glFramebufferTexture3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture3DOES, (target, attachment, textarget, texture, level, zoffset), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glFramebufferTexture3DOES_defined
#endif
#ifndef glTexImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3DOES, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3DOES_defined
#endif
#ifndef glTexSubImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3DOES, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3DOES_defined
#endif
#endif // defined(GL_OES_texture_3D)
#if defined(GL_OES_texture_border_clamp)
#ifndef glGetSamplerParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIivOES, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIivOES_defined
#endif
#ifndef glGetSamplerParameterIuivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIuivOES, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuivOES_defined
#endif
#ifndef glGetTexParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIivOES, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIivOES_defined
#endif
#ifndef glGetTexParameterIuivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIuivOES, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuivOES_defined
#endif
#ifndef glSamplerParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIivOES, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIivOES_defined
#endif
#ifndef glSamplerParameterIuivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIuivOES, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuivOES_defined
#endif
#ifndef glTexParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIivOES, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIivOES_defined
#endif
#ifndef glTexParameterIuivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIuivOES, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuivOES_defined
#endif
#endif // defined(GL_OES_texture_border_clamp)
#if defined(GL_OES_texture_buffer)
#ifndef glTexBufferOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferOES, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBufferOES_defined
#endif
#ifndef glTexBufferRangeOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferRangeOES, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRangeOES_defined
#endif
#endif // defined(GL_OES_texture_buffer)
#if defined(GL_OES_texture_storage_multisample_2d_array)
#ifndef glTexStorage3DMultisampleOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3DMultisampleOES, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexStorage3DMultisampleOES_defined
#endif
#endif // defined(GL_OES_texture_storage_multisample_2d_array)
#if defined(GL_OES_texture_view)
#ifndef glTextureViewOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureViewOES, (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers), (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))
#define glTextureViewOES_defined
#endif
#endif // defined(GL_OES_texture_view)
#if defined(GL_OES_vertex_array_object)
#ifndef glBindVertexArrayOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArrayOES, (array), (GLuint array))
#define glBindVertexArrayOES_defined
#endif
#ifndef glDeleteVertexArraysOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArraysOES, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArraysOES_defined
#endif
#ifndef glGenVertexArraysOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArraysOES, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArraysOES_defined
#endif
#ifndef glIsVertexArrayOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArrayOES, (array), (GLuint array))
#define glIsVertexArrayOES_defined
#endif
#endif // defined(GL_OES_vertex_array_object)
#if defined(GL_OES_viewport_array)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeArrayfvOES, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glDepthRangeArrayfvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeIndexedfOES, (index, n, f), (GLuint index, GLfloat n, GLfloat f))
#define glDepthRangeIndexedfOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloati_vOES, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloati_vOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorArrayvOES, (first, count, v), (GLuint first, GLsizei count, const GLint *v))
#define glScissorArrayvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedOES, (index, left, bottom, width, height), (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))
#define glScissorIndexedOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedvOES, (index, v), (GLuint index, const GLint *v))
#define glScissorIndexedvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportArrayvOES, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glViewportArrayvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfOES, (index, x, y, w, h), (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))
#define glViewportIndexedfOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfvOES, (index, v), (GLuint index, const GLfloat *v))
#define glViewportIndexedfvOES_defined
#endif // defined(GL_OES_viewport_array)
#if defined(GL_OVR_multiview)
#ifndef glFramebufferTextureMultiviewOVR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureMultiviewOVR, (target, attachment, texture, level, baseViewIndex, numViews), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews))
#define glFramebufferTextureMultiviewOVR_defined
#endif
#endif // defined(GL_OVR_multiview)
#if defined(GL_OVR_multiview_multisampled_render_to_texture)
#ifndef glFramebufferTextureMultisampleMultiviewOVR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureMultisampleMultiviewOVR, (target, attachment, texture, level, samples, baseViewIndex, numViews), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews))
#define glFramebufferTextureMultisampleMultiviewOVR_defined
#endif
#endif // defined(GL_OVR_multiview_multisampled_render_to_texture)
#if defined(GL_QCOM_alpha_test)
#ifndef glAlphaFuncQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAlphaFuncQCOM, (func, ref), (GLenum func, GLclampf ref))
#define glAlphaFuncQCOM_defined
#endif
#endif // defined(GL_QCOM_alpha_test)
#if defined(GL_QCOM_driver_control)
#ifndef glDisableDriverControlQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableDriverControlQCOM, (driverControl), (GLuint driverControl))
#define glDisableDriverControlQCOM_defined
#endif
#ifndef glEnableDriverControlQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableDriverControlQCOM, (driverControl), (GLuint driverControl))
#define glEnableDriverControlQCOM_defined
#endif
#ifndef glGetDriverControlStringQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetDriverControlStringQCOM, (driverControl, bufSize, length, driverControlString), (GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString))
#define glGetDriverControlStringQCOM_defined
#endif
#ifndef glGetDriverControlsQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetDriverControlsQCOM, (num, size, driverControls), (GLint *num, GLsizei size, GLuint *driverControls))
#define glGetDriverControlsQCOM_defined
#endif
#endif // defined(GL_QCOM_driver_control)
#if defined(GL_QCOM_extended_get)
#ifndef glExtGetBufferPointervQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetBufferPointervQCOM, (target, params), (GLenum target, void **params))
#define glExtGetBufferPointervQCOM_defined
#endif
#ifndef glExtGetBuffersQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetBuffersQCOM, (buffers, maxBuffers, numBuffers), (GLuint *buffers, GLint maxBuffers, GLint *numBuffers))
#define glExtGetBuffersQCOM_defined
#endif
#ifndef glExtGetFramebuffersQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetFramebuffersQCOM, (framebuffers, maxFramebuffers, numFramebuffers), (GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers))
#define glExtGetFramebuffersQCOM_defined
#endif
#ifndef glExtGetRenderbuffersQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetRenderbuffersQCOM, (renderbuffers, maxRenderbuffers, numRenderbuffers), (GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers))
#define glExtGetRenderbuffersQCOM_defined
#endif
#ifndef glExtGetTexLevelParameterivQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetTexLevelParameterivQCOM, (texture, face, level, pname, params), (GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params))
#define glExtGetTexLevelParameterivQCOM_defined
#endif
#ifndef glExtGetTexSubImageQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetTexSubImageQCOM, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels))
#define glExtGetTexSubImageQCOM_defined
#endif
#ifndef glExtGetTexturesQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetTexturesQCOM, (textures, maxTextures, numTextures), (GLuint *textures, GLint maxTextures, GLint *numTextures))
#define glExtGetTexturesQCOM_defined
#endif
#ifndef glExtTexObjectStateOverrideiQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtTexObjectStateOverrideiQCOM, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glExtTexObjectStateOverrideiQCOM_defined
#endif
#endif // defined(GL_QCOM_extended_get)
#if defined(GL_QCOM_extended_get2)
#ifndef glExtGetProgramBinarySourceQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetProgramBinarySourceQCOM, (program, shadertype, source, length), (GLuint program, GLenum shadertype, GLchar *source, GLint *length))
#define glExtGetProgramBinarySourceQCOM_defined
#endif
#ifndef glExtGetProgramsQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetProgramsQCOM, (programs, maxPrograms, numPrograms), (GLuint *programs, GLint maxPrograms, GLint *numPrograms))
#define glExtGetProgramsQCOM_defined
#endif
#ifndef glExtGetShadersQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetShadersQCOM, (shaders, maxShaders, numShaders), (GLuint *shaders, GLint maxShaders, GLint *numShaders))
#define glExtGetShadersQCOM_defined
#endif
#ifndef glExtIsProgramBinaryQCOM_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glExtIsProgramBinaryQCOM, (program), (GLuint program))
#define glExtIsProgramBinaryQCOM_defined
#endif
#endif // defined(GL_QCOM_extended_get2)
#if defined(GL_QCOM_tiled_rendering)
#ifndef glEndTilingQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTilingQCOM, (preserveMask), (GLbitfield preserveMask))
#define glEndTilingQCOM_defined
#endif
#ifndef glStartTilingQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStartTilingQCOM, (x, y, width, height, preserveMask), (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask))
#define glStartTilingQCOM_defined
#endif
#endif // defined(GL_QCOM_tiled_rendering)
#endif // defined(__gl2ext_h_)
#if defined(__gl31_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#if defined(GL_ES_VERSION_3_0)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBuffer, (mode), (GLenum mode))
#define glReadBuffer_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_ES_VERSION_3_0)
#if defined(GL_ES_VERSION_3_1)
#ifndef glActiveShaderProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveShaderProgram, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgram_defined
#endif
#ifndef glBindImageTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindImageTexture, (unit, texture, level, layered, layer, access, format), (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))
#define glBindImageTexture_defined
#endif
#ifndef glBindProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindProgramPipeline, (pipeline), (GLuint pipeline))
#define glBindProgramPipeline_defined
#endif
#ifndef glBindVertexBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexBuffer, (bindingindex, buffer, offset, stride), (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glBindVertexBuffer_defined
#endif
#ifndef glCreateShaderProgramv_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShaderProgramv, (type, count, strings), (GLenum type, GLsizei count, const GLchar *const*strings))
#define glCreateShaderProgramv_defined
#endif
#ifndef glDeleteProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgramPipelines, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelines_defined
#endif
#ifndef glDispatchCompute_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchCompute, (num_groups_x, num_groups_y, num_groups_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))
#define glDispatchCompute_defined
#endif
#ifndef glDispatchComputeIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchComputeIndirect, (indirect), (GLintptr indirect))
#define glDispatchComputeIndirect_defined
#endif
#ifndef glDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysIndirect, (mode, indirect), (GLenum mode, const void *indirect))
#define glDrawArraysIndirect_defined
#endif
#ifndef glDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsIndirect, (mode, type, indirect), (GLenum mode, GLenum type, const void *indirect))
#define glDrawElementsIndirect_defined
#endif
#ifndef glFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glFramebufferParameteri_defined
#endif
#ifndef glGenProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelines_defined
#endif
#ifndef glGetBooleani_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleani_v, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleani_v_defined
#endif
#ifndef glGetFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetFramebufferParameteriv_defined
#endif
#ifndef glGetMultisamplefv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetMultisamplefv, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefv_defined
#endif
#ifndef glGetProgramInterfaceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInterfaceiv, (program, programInterface, pname, params), (GLuint program, GLenum programInterface, GLenum pname, GLint *params))
#define glGetProgramInterfaceiv_defined
#endif
#ifndef glGetProgramPipelineInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineInfoLog, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLog_defined
#endif
#ifndef glGetProgramPipelineiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineiv, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineiv_defined
#endif
#ifndef glGetProgramResourceIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetProgramResourceIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceIndex_defined
#endif
#ifndef glGetProgramResourceLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetProgramResourceLocation, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocation_defined
#endif
#ifndef glGetProgramResourceName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceName, (program, programInterface, index, bufSize, length, name), (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))
#define glGetProgramResourceName_defined
#endif
#ifndef glGetProgramResourceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceiv, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))
#define glGetProgramResourceiv_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glIsProgramPipeline_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgramPipeline, (pipeline), (GLuint pipeline))
#define glIsProgramPipeline_defined
#endif
#ifndef glMemoryBarrier_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrier, (barriers), (GLbitfield barriers))
#define glMemoryBarrier_defined
#endif
#ifndef glMemoryBarrierByRegion_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrierByRegion, (barriers), (GLbitfield barriers))
#define glMemoryBarrierByRegion_defined
#endif
#ifndef glProgramUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1f, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1f_defined
#endif
#ifndef glProgramUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fv_defined
#endif
#ifndef glProgramUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1i_defined
#endif
#ifndef glProgramUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1iv_defined
#endif
#ifndef glProgramUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1ui_defined
#endif
#ifndef glProgramUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uiv_defined
#endif
#ifndef glProgramUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2f, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2f_defined
#endif
#ifndef glProgramUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fv_defined
#endif
#ifndef glProgramUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2i_defined
#endif
#ifndef glProgramUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2iv_defined
#endif
#ifndef glProgramUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2ui_defined
#endif
#ifndef glProgramUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uiv_defined
#endif
#ifndef glProgramUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3f, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3f_defined
#endif
#ifndef glProgramUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fv_defined
#endif
#ifndef glProgramUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3i_defined
#endif
#ifndef glProgramUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3iv_defined
#endif
#ifndef glProgramUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3ui_defined
#endif
#ifndef glProgramUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uiv_defined
#endif
#ifndef glProgramUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4f, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4f_defined
#endif
#ifndef glProgramUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fv_defined
#endif
#ifndef glProgramUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4i_defined
#endif
#ifndef glProgramUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4iv_defined
#endif
#ifndef glProgramUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4ui_defined
#endif
#ifndef glProgramUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uiv_defined
#endif
#ifndef glProgramUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fv_defined
#endif
#ifndef glProgramUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fv_defined
#endif
#ifndef glProgramUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fv_defined
#endif
#ifndef glProgramUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fv_defined
#endif
#ifndef glProgramUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fv_defined
#endif
#ifndef glProgramUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fv_defined
#endif
#ifndef glProgramUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fv_defined
#endif
#ifndef glProgramUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fv_defined
#endif
#ifndef glProgramUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fv_defined
#endif
#ifndef glSampleMaski_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleMaski, (maskNumber, mask), (GLuint maskNumber, GLbitfield mask))
#define glSampleMaski_defined
#endif
#ifndef glTexStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexStorage2DMultisample_defined
#endif
#ifndef glUseProgramStages_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgramStages, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStages_defined
#endif
#ifndef glValidateProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgramPipeline, (pipeline), (GLuint pipeline))
#define glValidateProgramPipeline_defined
#endif
#ifndef glVertexAttribBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribBinding, (attribindex, bindingindex), (GLuint attribindex, GLuint bindingindex))
#define glVertexAttribBinding_defined
#endif
#ifndef glVertexAttribFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribFormat, (attribindex, size, type, normalized, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexAttribFormat_defined
#endif
#ifndef glVertexAttribIFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribIFormat_defined
#endif
#ifndef glVertexBindingDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexBindingDivisor, (bindingindex, divisor), (GLuint bindingindex, GLuint divisor))
#define glVertexBindingDivisor_defined
#endif
#endif // defined(GL_ES_VERSION_3_1)
#endif // defined(__gl31_h_)
#if defined(__gl32_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#if defined(GL_ES_VERSION_3_0)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBuffer, (src), (GLenum src))
#define glReadBuffer_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_ES_VERSION_3_0)
#if defined(GL_ES_VERSION_3_1)
#ifndef glActiveShaderProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveShaderProgram, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgram_defined
#endif
#ifndef glBindImageTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindImageTexture, (unit, texture, level, layered, layer, access, format), (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))
#define glBindImageTexture_defined
#endif
#ifndef glBindProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindProgramPipeline, (pipeline), (GLuint pipeline))
#define glBindProgramPipeline_defined
#endif
#ifndef glBindVertexBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexBuffer, (bindingindex, buffer, offset, stride), (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glBindVertexBuffer_defined
#endif
#ifndef glCreateShaderProgramv_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShaderProgramv, (type, count, strings), (GLenum type, GLsizei count, const GLchar *const*strings))
#define glCreateShaderProgramv_defined
#endif
#ifndef glDeleteProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgramPipelines, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelines_defined
#endif
#ifndef glDispatchCompute_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchCompute, (num_groups_x, num_groups_y, num_groups_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))
#define glDispatchCompute_defined
#endif
#ifndef glDispatchComputeIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchComputeIndirect, (indirect), (GLintptr indirect))
#define glDispatchComputeIndirect_defined
#endif
#ifndef glDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysIndirect, (mode, indirect), (GLenum mode, const void *indirect))
#define glDrawArraysIndirect_defined
#endif
#ifndef glDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsIndirect, (mode, type, indirect), (GLenum mode, GLenum type, const void *indirect))
#define glDrawElementsIndirect_defined
#endif
#ifndef glFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glFramebufferParameteri_defined
#endif
#ifndef glGenProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelines_defined
#endif
#ifndef glGetBooleani_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleani_v, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleani_v_defined
#endif
#ifndef glGetFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetFramebufferParameteriv_defined
#endif
#ifndef glGetMultisamplefv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetMultisamplefv, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefv_defined
#endif
#ifndef glGetProgramInterfaceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInterfaceiv, (program, programInterface, pname, params), (GLuint program, GLenum programInterface, GLenum pname, GLint *params))
#define glGetProgramInterfaceiv_defined
#endif
#ifndef glGetProgramPipelineInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineInfoLog, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLog_defined
#endif
#ifndef glGetProgramPipelineiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineiv, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineiv_defined
#endif
#ifndef glGetProgramResourceIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetProgramResourceIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceIndex_defined
#endif
#ifndef glGetProgramResourceLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetProgramResourceLocation, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocation_defined
#endif
#ifndef glGetProgramResourceName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceName, (program, programInterface, index, bufSize, length, name), (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))
#define glGetProgramResourceName_defined
#endif
#ifndef glGetProgramResourceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceiv, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))
#define glGetProgramResourceiv_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glIsProgramPipeline_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgramPipeline, (pipeline), (GLuint pipeline))
#define glIsProgramPipeline_defined
#endif
#ifndef glMemoryBarrier_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrier, (barriers), (GLbitfield barriers))
#define glMemoryBarrier_defined
#endif
#ifndef glMemoryBarrierByRegion_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrierByRegion, (barriers), (GLbitfield barriers))
#define glMemoryBarrierByRegion_defined
#endif
#ifndef glProgramUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1f, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1f_defined
#endif
#ifndef glProgramUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fv_defined
#endif
#ifndef glProgramUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1i_defined
#endif
#ifndef glProgramUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1iv_defined
#endif
#ifndef glProgramUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1ui_defined
#endif
#ifndef glProgramUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uiv_defined
#endif
#ifndef glProgramUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2f, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2f_defined
#endif
#ifndef glProgramUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fv_defined
#endif
#ifndef glProgramUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2i_defined
#endif
#ifndef glProgramUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2iv_defined
#endif
#ifndef glProgramUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2ui_defined
#endif
#ifndef glProgramUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uiv_defined
#endif
#ifndef glProgramUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3f, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3f_defined
#endif
#ifndef glProgramUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fv_defined
#endif
#ifndef glProgramUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3i_defined
#endif
#ifndef glProgramUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3iv_defined
#endif
#ifndef glProgramUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3ui_defined
#endif
#ifndef glProgramUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uiv_defined
#endif
#ifndef glProgramUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4f, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4f_defined
#endif
#ifndef glProgramUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fv_defined
#endif
#ifndef glProgramUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4i_defined
#endif
#ifndef glProgramUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4iv_defined
#endif
#ifndef glProgramUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4ui_defined
#endif
#ifndef glProgramUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uiv_defined
#endif
#ifndef glProgramUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fv_defined
#endif
#ifndef glProgramUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fv_defined
#endif
#ifndef glProgramUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fv_defined
#endif
#ifndef glProgramUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fv_defined
#endif
#ifndef glProgramUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fv_defined
#endif
#ifndef glProgramUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fv_defined
#endif
#ifndef glProgramUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fv_defined
#endif
#ifndef glProgramUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fv_defined
#endif
#ifndef glProgramUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fv_defined
#endif
#ifndef glSampleMaski_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleMaski, (maskNumber, mask), (GLuint maskNumber, GLbitfield mask))
#define glSampleMaski_defined
#endif
#ifndef glTexStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexStorage2DMultisample_defined
#endif
#ifndef glUseProgramStages_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgramStages, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStages_defined
#endif
#ifndef glValidateProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgramPipeline, (pipeline), (GLuint pipeline))
#define glValidateProgramPipeline_defined
#endif
#ifndef glVertexAttribBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribBinding, (attribindex, bindingindex), (GLuint attribindex, GLuint bindingindex))
#define glVertexAttribBinding_defined
#endif
#ifndef glVertexAttribFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribFormat, (attribindex, size, type, normalized, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexAttribFormat_defined
#endif
#ifndef glVertexAttribIFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribIFormat_defined
#endif
#ifndef glVertexBindingDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexBindingDivisor, (bindingindex, divisor), (GLuint bindingindex, GLuint divisor))
#define glVertexBindingDivisor_defined
#endif
#endif // defined(GL_ES_VERSION_3_1)
#if defined(GL_ES_VERSION_3_2)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendBarrier, (), (void))
#define glBlendBarrier_defined
#ifndef glBlendEquationSeparatei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparatei, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparatei_defined
#endif
#ifndef glBlendEquationi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationi, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationi_defined
#endif
#ifndef glBlendFuncSeparatei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparatei, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparatei_defined
#endif
#ifndef glBlendFunci_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunci, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunci_defined
#endif
#ifndef glColorMaski_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMaski, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaski_defined
#endif
#ifndef glCopyImageSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyImageSubData, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubData_defined
#endif
#ifndef glDebugMessageCallback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageCallback, (callback, userParam), (GLDEBUGPROC callback, const void *userParam))
#define glDebugMessageCallback_defined
#endif
#ifndef glDebugMessageControl_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageControl, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControl_defined
#endif
#ifndef glDebugMessageInsert_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageInsert, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsert_defined
#endif
#ifndef glDisablei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisablei, (target, index), (GLenum target, GLuint index))
#define glDisablei_defined
#endif
#ifndef glDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsBaseVertex, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertex_defined
#endif
#ifndef glDrawElementsInstancedBaseVertex_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertex, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertex_defined
#endif
#ifndef glDrawRangeElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElementsBaseVertex, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertex_defined
#endif
#ifndef glEnablei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnablei, (target, index), (GLenum target, GLuint index))
#define glEnablei_defined
#endif
#ifndef glFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTexture_defined
#endif
#ifndef glGetDebugMessageLog_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetDebugMessageLog, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLog_defined
#endif
#ifndef glGetGraphicsResetStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetGraphicsResetStatus, (), (void))
#define glGetGraphicsResetStatus_defined
#endif
#ifndef glGetObjectLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectLabel, (identifier, name, bufSize, length, label), (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabel_defined
#endif
#ifndef glGetObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectPtrLabel, (ptr, bufSize, length, label), (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectPtrLabel_defined
#endif
#ifndef glGetPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPointerv, (pname, params), (GLenum pname, void **params))
#define glGetPointerv_defined
#endif
#ifndef glGetSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIiv_defined
#endif
#ifndef glGetSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIuiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuiv_defined
#endif
#ifndef glGetTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIiv_defined
#endif
#ifndef glGetTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuiv_defined
#endif
#ifndef glGetnUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformfv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfv_defined
#endif
#ifndef glGetnUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformiv_defined
#endif
#ifndef glGetnUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformuiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuiv_defined
#endif
#ifndef glIsEnabledi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabledi, (target, index), (GLenum target, GLuint index))
#define glIsEnabledi_defined
#endif
#ifndef glMinSampleShading_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMinSampleShading, (value), (GLfloat value))
#define glMinSampleShading_defined
#endif
#ifndef glObjectLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectLabel, (identifier, name, length, label), (GLenum identifier, GLuint name, GLsizei length, const GLchar *label))
#define glObjectLabel_defined
#endif
#ifndef glObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectPtrLabel, (ptr, length, label), (const void *ptr, GLsizei length, const GLchar *label))
#define glObjectPtrLabel_defined
#endif
#ifndef glPatchParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPatchParameteri, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteri_defined
#endif
#ifndef glPopDebugGroup_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPopDebugGroup, (), (void))
#define glPopDebugGroup_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPrimitiveBoundingBox, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBox_defined
#ifndef glPushDebugGroup_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPushDebugGroup, (source, id, length, message), (GLenum source, GLuint id, GLsizei length, const GLchar *message))
#define glPushDebugGroup_defined
#endif
#ifndef glReadnPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadnPixels, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixels_defined
#endif
#ifndef glSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIiv_defined
#endif
#ifndef glSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIuiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuiv_defined
#endif
#ifndef glTexBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBuffer, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBuffer_defined
#endif
#ifndef glTexBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferRange, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRange_defined
#endif
#ifndef glTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIiv_defined
#endif
#ifndef glTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuiv_defined
#endif
#ifndef glTexStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexStorage3DMultisample_defined
#endif
#endif // defined(GL_ES_VERSION_3_2)
#endif // defined(__gl32_h_)
#if defined(__gl3_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#if defined(GL_ES_VERSION_3_0)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBuffer, (mode), (GLenum mode))
#define glReadBuffer_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_ES_VERSION_3_0)
#endif // defined(__gl3_h_)
#if defined(__gl_glcorearb_h_)
#if defined(GL_AMD_performance_monitor)
#ifndef glBeginPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginPerfMonitorAMD, (monitor), (GLuint monitor))
#define glBeginPerfMonitorAMD_defined
#endif
#ifndef glDeletePerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeletePerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glDeletePerfMonitorsAMD_defined
#endif
#ifndef glEndPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndPerfMonitorAMD, (monitor), (GLuint monitor))
#define glEndPerfMonitorAMD_defined
#endif
#ifndef glGenPerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenPerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glGenPerfMonitorsAMD_defined
#endif
#ifndef glGetPerfMonitorCounterDataAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCounterDataAMD, (monitor, pname, dataSize, data, bytesWritten), (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten))
#define glGetPerfMonitorCounterDataAMD_defined
#endif
#ifndef glGetPerfMonitorCounterInfoAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCounterInfoAMD, (group, counter, pname, data), (GLuint group, GLuint counter, GLenum pname, void *data))
#define glGetPerfMonitorCounterInfoAMD_defined
#endif
#ifndef glGetPerfMonitorCounterStringAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCounterStringAMD, (group, counter, bufSize, length, counterString), (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString))
#define glGetPerfMonitorCounterStringAMD_defined
#endif
#ifndef glGetPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCountersAMD, (group, numCounters, maxActiveCounters, counterSize, counters), (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters))
#define glGetPerfMonitorCountersAMD_defined
#endif
#ifndef glGetPerfMonitorGroupStringAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorGroupStringAMD, (group, bufSize, length, groupString), (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString))
#define glGetPerfMonitorGroupStringAMD_defined
#endif
#ifndef glGetPerfMonitorGroupsAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorGroupsAMD, (numGroups, groupsSize, groups), (GLint *numGroups, GLsizei groupsSize, GLuint *groups))
#define glGetPerfMonitorGroupsAMD_defined
#endif
#ifndef glSelectPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSelectPerfMonitorCountersAMD, (monitor, enable, group, numCounters, counterList), (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList))
#define glSelectPerfMonitorCountersAMD_defined
#endif
#endif // defined(GL_AMD_performance_monitor)
#if defined(GL_ARB_ES3_2_compatibility)
#ifndef glPrimitiveBoundingBoxARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrimitiveBoundingBoxARB, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBoxARB_defined
#endif
#endif // defined(GL_ARB_ES3_2_compatibility)
#if defined(GL_ARB_bindless_texture)
#ifndef glGetImageHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetImageHandleARB, (texture, level, layered, layer, format), (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))
#define glGetImageHandleARB_defined
#endif
#ifndef glGetTextureHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureHandleARB, (texture), (GLuint texture))
#define glGetTextureHandleARB_defined
#endif
#ifndef glGetTextureSamplerHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureSamplerHandleARB, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleARB_defined
#endif
#ifndef glGetVertexAttribLui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLui64vARB, (index, pname, params), (GLuint index, GLenum pname, GLuint64EXT *params))
#define glGetVertexAttribLui64vARB_defined
#endif
#ifndef glIsImageHandleResidentARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsImageHandleResidentARB, (handle), (GLuint64 handle))
#define glIsImageHandleResidentARB_defined
#endif
#ifndef glIsTextureHandleResidentARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTextureHandleResidentARB, (handle), (GLuint64 handle))
#define glIsTextureHandleResidentARB_defined
#endif
#ifndef glMakeImageHandleNonResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleNonResidentARB, (handle), (GLuint64 handle))
#define glMakeImageHandleNonResidentARB_defined
#endif
#ifndef glMakeImageHandleResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleResidentARB, (handle, access), (GLuint64 handle, GLenum access))
#define glMakeImageHandleResidentARB_defined
#endif
#ifndef glMakeTextureHandleNonResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleNonResidentARB, (handle), (GLuint64 handle))
#define glMakeTextureHandleNonResidentARB_defined
#endif
#ifndef glMakeTextureHandleResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleResidentARB, (handle), (GLuint64 handle))
#define glMakeTextureHandleResidentARB_defined
#endif
#ifndef glProgramUniformHandleui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64ARB, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64ARB_defined
#endif
#ifndef glProgramUniformHandleui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64vARB, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vARB_defined
#endif
#ifndef glUniformHandleui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64ARB, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64ARB_defined
#endif
#ifndef glUniformHandleui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vARB_defined
#endif
#ifndef glVertexAttribL1ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64ARB, (index, x), (GLuint index, GLuint64EXT x))
#define glVertexAttribL1ui64ARB_defined
#endif
#ifndef glVertexAttribL1ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64vARB, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL1ui64vARB_defined
#endif
#endif // defined(GL_ARB_bindless_texture)
#if defined(GL_ARB_cl_event)
#ifndef glCreateSyncFromCLeventARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLsync, APIENTRY, glCreateSyncFromCLeventARB, (context, event, flags), (struct _cl_context *context, struct _cl_event *event, GLbitfield flags))
#define glCreateSyncFromCLeventARB_defined
#endif
#endif // defined(GL_ARB_cl_event)
#if defined(GL_ARB_compute_variable_group_size)
#ifndef glDispatchComputeGroupSizeARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchComputeGroupSizeARB, (num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z))
#define glDispatchComputeGroupSizeARB_defined
#endif
#endif // defined(GL_ARB_compute_variable_group_size)
#if defined(GL_ARB_debug_output)
#ifndef glDebugMessageCallbackARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageCallbackARB, (callback, userParam), (GLDEBUGPROCARB callback, const void *userParam))
#define glDebugMessageCallbackARB_defined
#endif
#ifndef glDebugMessageControlARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageControlARB, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControlARB_defined
#endif
#ifndef glDebugMessageInsertARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageInsertARB, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsertARB_defined
#endif
#ifndef glGetDebugMessageLogARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetDebugMessageLogARB, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLogARB_defined
#endif
#endif // defined(GL_ARB_debug_output)
#if defined(GL_ARB_draw_buffers_blend)
#ifndef glBlendEquationSeparateiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparateiARB, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateiARB_defined
#endif
#ifndef glBlendEquationiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationiARB, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationiARB_defined
#endif
#ifndef glBlendFuncSeparateiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparateiARB, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateiARB_defined
#endif
#ifndef glBlendFunciARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunciARB, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunciARB_defined
#endif
#endif // defined(GL_ARB_draw_buffers_blend)
#if defined(GL_ARB_draw_instanced)
#ifndef glDrawArraysInstancedARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstancedARB, (mode, first, count, primcount), (GLenum mode, GLint first, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedARB_defined
#endif
#ifndef glDrawElementsInstancedARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedARB, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedARB_defined
#endif
#endif // defined(GL_ARB_draw_instanced)
#if defined(GL_ARB_geometry_shader4)
#ifndef glFramebufferTextureARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureARB, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTextureARB_defined
#endif
#ifndef glFramebufferTextureFaceARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureFaceARB, (target, attachment, texture, level, face), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face))
#define glFramebufferTextureFaceARB_defined
#endif
#ifndef glFramebufferTextureLayerARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureLayerARB, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayerARB_defined
#endif
#ifndef glProgramParameteriARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameteriARB, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteriARB_defined
#endif
#endif // defined(GL_ARB_geometry_shader4)
#if defined(GL_ARB_gl_spirv)
#ifndef glSpecializeShaderARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpecializeShaderARB, (shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue), (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue))
#define glSpecializeShaderARB_defined
#endif
#endif // defined(GL_ARB_gl_spirv)
#if defined(GL_ARB_gpu_shader_int64)
#ifndef glGetUniformi64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformi64vARB, (program, location, params), (GLuint program, GLint location, GLint64 *params))
#define glGetUniformi64vARB_defined
#endif
#ifndef glGetUniformui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformui64vARB, (program, location, params), (GLuint program, GLint location, GLuint64 *params))
#define glGetUniformui64vARB_defined
#endif
#ifndef glGetnUniformi64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformi64vARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint64 *params))
#define glGetnUniformi64vARB_defined
#endif
#ifndef glGetnUniformui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformui64vARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params))
#define glGetnUniformui64vARB_defined
#endif
#ifndef glProgramUniform1i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64ARB, (program, location, x), (GLuint program, GLint location, GLint64 x))
#define glProgramUniform1i64ARB_defined
#endif
#ifndef glProgramUniform1i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform1i64vARB_defined
#endif
#ifndef glProgramUniform1ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64ARB, (program, location, x), (GLuint program, GLint location, GLuint64 x))
#define glProgramUniform1ui64ARB_defined
#endif
#ifndef glProgramUniform1ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform1ui64vARB_defined
#endif
#ifndef glProgramUniform2i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64ARB, (program, location, x, y), (GLuint program, GLint location, GLint64 x, GLint64 y))
#define glProgramUniform2i64ARB_defined
#endif
#ifndef glProgramUniform2i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform2i64vARB_defined
#endif
#ifndef glProgramUniform2ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64ARB, (program, location, x, y), (GLuint program, GLint location, GLuint64 x, GLuint64 y))
#define glProgramUniform2ui64ARB_defined
#endif
#ifndef glProgramUniform2ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform2ui64vARB_defined
#endif
#ifndef glProgramUniform3i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64ARB, (program, location, x, y, z), (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z))
#define glProgramUniform3i64ARB_defined
#endif
#ifndef glProgramUniform3i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform3i64vARB_defined
#endif
#ifndef glProgramUniform3ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64ARB, (program, location, x, y, z), (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z))
#define glProgramUniform3ui64ARB_defined
#endif
#ifndef glProgramUniform3ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform3ui64vARB_defined
#endif
#ifndef glProgramUniform4i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64ARB, (program, location, x, y, z, w), (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w))
#define glProgramUniform4i64ARB_defined
#endif
#ifndef glProgramUniform4i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform4i64vARB_defined
#endif
#ifndef glProgramUniform4ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64ARB, (program, location, x, y, z, w), (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w))
#define glProgramUniform4ui64ARB_defined
#endif
#ifndef glProgramUniform4ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform4ui64vARB_defined
#endif
#ifndef glUniform1i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64ARB, (location, x), (GLint location, GLint64 x))
#define glUniform1i64ARB_defined
#endif
#ifndef glUniform1i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform1i64vARB_defined
#endif
#ifndef glUniform1ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64ARB, (location, x), (GLint location, GLuint64 x))
#define glUniform1ui64ARB_defined
#endif
#ifndef glUniform1ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform1ui64vARB_defined
#endif
#ifndef glUniform2i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64ARB, (location, x, y), (GLint location, GLint64 x, GLint64 y))
#define glUniform2i64ARB_defined
#endif
#ifndef glUniform2i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform2i64vARB_defined
#endif
#ifndef glUniform2ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64ARB, (location, x, y), (GLint location, GLuint64 x, GLuint64 y))
#define glUniform2ui64ARB_defined
#endif
#ifndef glUniform2ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform2ui64vARB_defined
#endif
#ifndef glUniform3i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64ARB, (location, x, y, z), (GLint location, GLint64 x, GLint64 y, GLint64 z))
#define glUniform3i64ARB_defined
#endif
#ifndef glUniform3i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform3i64vARB_defined
#endif
#ifndef glUniform3ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64ARB, (location, x, y, z), (GLint location, GLuint64 x, GLuint64 y, GLuint64 z))
#define glUniform3ui64ARB_defined
#endif
#ifndef glUniform3ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform3ui64vARB_defined
#endif
#ifndef glUniform4i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64ARB, (location, x, y, z, w), (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w))
#define glUniform4i64ARB_defined
#endif
#ifndef glUniform4i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform4i64vARB_defined
#endif
#ifndef glUniform4ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64ARB, (location, x, y, z, w), (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w))
#define glUniform4ui64ARB_defined
#endif
#ifndef glUniform4ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform4ui64vARB_defined
#endif
#endif // defined(GL_ARB_gpu_shader_int64)
#if defined(GL_ARB_indirect_parameters)
#ifndef glMultiDrawArraysIndirectCountARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectCountARB, (mode, indirect, drawcount, maxdrawcount, stride), (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawArraysIndirectCountARB_defined
#endif
#ifndef glMultiDrawElementsIndirectCountARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectCountARB, (mode, type, indirect, drawcount, maxdrawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawElementsIndirectCountARB_defined
#endif
#endif // defined(GL_ARB_indirect_parameters)
#if defined(GL_ARB_instanced_arrays)
#ifndef glVertexAttribDivisorARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribDivisorARB, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorARB_defined
#endif
#endif // defined(GL_ARB_instanced_arrays)
#if defined(GL_ARB_parallel_shader_compile)
#ifndef glMaxShaderCompilerThreadsARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMaxShaderCompilerThreadsARB, (count), (GLuint count))
#define glMaxShaderCompilerThreadsARB_defined
#endif
#endif // defined(GL_ARB_parallel_shader_compile)
#if defined(GL_ARB_robustness)
#ifndef glGetGraphicsResetStatusARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetGraphicsResetStatusARB, (), (void))
#define glGetGraphicsResetStatusARB_defined
#endif
#ifndef glGetnCompressedTexImageARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnCompressedTexImageARB, (target, lod, bufSize, img), (GLenum target, GLint lod, GLsizei bufSize, void *img))
#define glGetnCompressedTexImageARB_defined
#endif
#ifndef glGetnTexImageARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnTexImageARB, (target, level, format, type, bufSize, img), (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img))
#define glGetnTexImageARB_defined
#endif
#ifndef glGetnUniformdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformdvARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLdouble *params))
#define glGetnUniformdvARB_defined
#endif
#ifndef glGetnUniformfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformfvARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfvARB_defined
#endif
#ifndef glGetnUniformivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformivARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformivARB_defined
#endif
#ifndef glGetnUniformuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformuivARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuivARB_defined
#endif
#ifndef glReadnPixelsARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadnPixelsARB, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixelsARB_defined
#endif
#endif // defined(GL_ARB_robustness)
#if defined(GL_ARB_sample_locations)
#ifndef glEvaluateDepthValuesARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEvaluateDepthValuesARB, (), (void))
#define glEvaluateDepthValuesARB_defined
#endif
#ifndef glFramebufferSampleLocationsfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferSampleLocationsfvARB, (target, start, count, v), (GLenum target, GLuint start, GLsizei count, const GLfloat *v))
#define glFramebufferSampleLocationsfvARB_defined
#endif
#ifndef glNamedFramebufferSampleLocationsfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferSampleLocationsfvARB, (framebuffer, start, count, v), (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))
#define glNamedFramebufferSampleLocationsfvARB_defined
#endif
#endif // defined(GL_ARB_sample_locations)
#if defined(GL_ARB_sample_shading)
#ifndef glMinSampleShadingARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinSampleShadingARB, (value), (GLfloat value))
#define glMinSampleShadingARB_defined
#endif
#endif // defined(GL_ARB_sample_shading)
#if defined(GL_ARB_shading_language_include)
#ifndef glCompileShaderIncludeARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileShaderIncludeARB, (shader, count, path, length), (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length))
#define glCompileShaderIncludeARB_defined
#endif
#ifndef glDeleteNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteNamedStringARB, (namelen, name), (GLint namelen, const GLchar *name))
#define glDeleteNamedStringARB_defined
#endif
#ifndef glGetNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedStringARB, (namelen, name, bufSize, stringlen, string), (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string))
#define glGetNamedStringARB_defined
#endif
#ifndef glGetNamedStringivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedStringivARB, (namelen, name, pname, params), (GLint namelen, const GLchar *name, GLenum pname, GLint *params))
#define glGetNamedStringivARB_defined
#endif
#ifndef glIsNamedStringARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsNamedStringARB, (namelen, name), (GLint namelen, const GLchar *name))
#define glIsNamedStringARB_defined
#endif
#ifndef glNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedStringARB, (type, namelen, name, stringlen, string), (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string))
#define glNamedStringARB_defined
#endif
#endif // defined(GL_ARB_shading_language_include)
#if defined(GL_ARB_sparse_buffer)
#ifndef glBufferPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferPageCommitmentARB, (target, offset, size, commit), (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit))
#define glBufferPageCommitmentARB_defined
#endif
#ifndef glNamedBufferPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferPageCommitmentARB, (buffer, offset, size, commit), (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit))
#define glNamedBufferPageCommitmentARB_defined
#endif
#ifndef glNamedBufferPageCommitmentEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferPageCommitmentEXT, (buffer, offset, size, commit), (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit))
#define glNamedBufferPageCommitmentEXT_defined
#endif
#endif // defined(GL_ARB_sparse_buffer)
#if defined(GL_ARB_sparse_texture)
#ifndef glTexPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexPageCommitmentARB, (target, level, xoffset, yoffset, zoffset, width, height, depth, commit), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit))
#define glTexPageCommitmentARB_defined
#endif
#endif // defined(GL_ARB_sparse_texture)
#if defined(GL_ARB_texture_buffer_object)
#ifndef glTexBufferARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBufferARB, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBufferARB_defined
#endif
#endif // defined(GL_ARB_texture_buffer_object)
#if defined(GL_EXT_EGL_image_storage)
#ifndef glEGLImageTargetTexStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEGLImageTargetTexStorageEXT, (target, image, attrib_list), (GLenum target, GLeglImageOES image, const GLint* attrib_list))
#define glEGLImageTargetTexStorageEXT_defined
#endif
#ifndef glEGLImageTargetTextureStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEGLImageTargetTextureStorageEXT, (texture, image, attrib_list), (GLuint texture, GLeglImageOES image, const GLint* attrib_list))
#define glEGLImageTargetTextureStorageEXT_defined
#endif
#endif // defined(GL_EXT_EGL_image_storage)
#if defined(GL_EXT_debug_label)
#ifndef glGetObjectLabelEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectLabelEXT, (type, object, bufSize, length, label), (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabelEXT_defined
#endif
#ifndef glLabelObjectEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLabelObjectEXT, (type, object, length, label), (GLenum type, GLuint object, GLsizei length, const GLchar *label))
#define glLabelObjectEXT_defined
#endif
#endif // defined(GL_EXT_debug_label)
#if defined(GL_EXT_debug_marker)
#ifndef glInsertEventMarkerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInsertEventMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glInsertEventMarkerEXT_defined
#endif
#ifndef glPopGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPopGroupMarkerEXT, (), (void))
#define glPopGroupMarkerEXT_defined
#endif
#ifndef glPushGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPushGroupMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glPushGroupMarkerEXT_defined
#endif
#endif // defined(GL_EXT_debug_marker)
#if defined(GL_EXT_direct_state_access)
#ifndef glBindMultiTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindMultiTextureEXT, (texunit, target, texture), (GLenum texunit, GLenum target, GLuint texture))
#define glBindMultiTextureEXT_defined
#endif
#ifndef glCheckNamedFramebufferStatusEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckNamedFramebufferStatusEXT, (framebuffer, target), (GLuint framebuffer, GLenum target))
#define glCheckNamedFramebufferStatusEXT_defined
#endif
#ifndef glClearNamedBufferDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferDataEXT, (buffer, internalformat, format, type, data), (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferDataEXT_defined
#endif
#ifndef glClearNamedBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferSubDataEXT, (buffer, internalformat, offset, size, format, type, data), (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferSubDataEXT_defined
#endif
#ifndef glClientAttribDefaultEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClientAttribDefaultEXT, (mask), (GLbitfield mask))
#define glClientAttribDefaultEXT_defined
#endif
#ifndef glCompressedMultiTexImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexImage1DEXT, (texunit, target, level, internalformat, width, border, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexImage1DEXT_defined
#endif
#ifndef glCompressedMultiTexImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexImage2DEXT, (texunit, target, level, internalformat, width, height, border, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexImage2DEXT_defined
#endif
#ifndef glCompressedMultiTexImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexImage3DEXT, (texunit, target, level, internalformat, width, height, depth, border, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexImage3DEXT_defined
#endif
#ifndef glCompressedMultiTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexSubImage1DEXT, (texunit, target, level, xoffset, width, format, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexSubImage1DEXT_defined
#endif
#ifndef glCompressedMultiTexSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexSubImage2DEXT, (texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexSubImage2DEXT_defined
#endif
#ifndef glCompressedMultiTexSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexSubImage3DEXT, (texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexSubImage3DEXT_defined
#endif
#ifndef glCompressedTextureImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureImage1DEXT, (texture, target, level, internalformat, width, border, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedTextureImage1DEXT_defined
#endif
#ifndef glCompressedTextureImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureImage2DEXT, (texture, target, level, internalformat, width, height, border, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedTextureImage2DEXT_defined
#endif
#ifndef glCompressedTextureImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureImage3DEXT, (texture, target, level, internalformat, width, height, depth, border, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedTextureImage3DEXT_defined
#endif
#ifndef glCompressedTextureSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage1DEXT, (texture, target, level, xoffset, width, format, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedTextureSubImage1DEXT_defined
#endif
#ifndef glCompressedTextureSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage2DEXT, (texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedTextureSubImage2DEXT_defined
#endif
#ifndef glCompressedTextureSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage3DEXT, (texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedTextureSubImage3DEXT_defined
#endif
#ifndef glCopyMultiTexImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexImage1DEXT, (texunit, target, level, internalformat, x, y, width, border), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyMultiTexImage1DEXT_defined
#endif
#ifndef glCopyMultiTexImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexImage2DEXT, (texunit, target, level, internalformat, x, y, width, height, border), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyMultiTexImage2DEXT_defined
#endif
#ifndef glCopyMultiTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexSubImage1DEXT, (texunit, target, level, xoffset, x, y, width), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyMultiTexSubImage1DEXT_defined
#endif
#ifndef glCopyMultiTexSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexSubImage2DEXT, (texunit, target, level, xoffset, yoffset, x, y, width, height), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyMultiTexSubImage2DEXT_defined
#endif
#ifndef glCopyMultiTexSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexSubImage3DEXT, (texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyMultiTexSubImage3DEXT_defined
#endif
#ifndef glCopyTextureImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureImage1DEXT, (texture, target, level, internalformat, x, y, width, border), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyTextureImage1DEXT_defined
#endif
#ifndef glCopyTextureImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureImage2DEXT, (texture, target, level, internalformat, x, y, width, height, border), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTextureImage2DEXT_defined
#endif
#ifndef glCopyTextureSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage1DEXT, (texture, target, level, xoffset, x, y, width), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTextureSubImage1DEXT_defined
#endif
#ifndef glCopyTextureSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage2DEXT, (texture, target, level, xoffset, yoffset, x, y, width, height), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage2DEXT_defined
#endif
#ifndef glCopyTextureSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage3DEXT, (texture, target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage3DEXT_defined
#endif
#ifndef glDisableClientStateIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableClientStateIndexedEXT, (array, index), (GLenum array, GLuint index))
#define glDisableClientStateIndexedEXT_defined
#endif
#ifndef glDisableClientStateiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableClientStateiEXT, (array, index), (GLenum array, GLuint index))
#define glDisableClientStateiEXT_defined
#endif
#ifndef glDisableIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableIndexedEXT, (target, index), (GLenum target, GLuint index))
#define glDisableIndexedEXT_defined
#endif
#ifndef glDisableVertexArrayAttribEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexArrayAttribEXT, (vaobj, index), (GLuint vaobj, GLuint index))
#define glDisableVertexArrayAttribEXT_defined
#endif
#ifndef glDisableVertexArrayEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexArrayEXT, (vaobj, array), (GLuint vaobj, GLenum array))
#define glDisableVertexArrayEXT_defined
#endif
#ifndef glEnableClientStateIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableClientStateIndexedEXT, (array, index), (GLenum array, GLuint index))
#define glEnableClientStateIndexedEXT_defined
#endif
#ifndef glEnableClientStateiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableClientStateiEXT, (array, index), (GLenum array, GLuint index))
#define glEnableClientStateiEXT_defined
#endif
#ifndef glEnableIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableIndexedEXT, (target, index), (GLenum target, GLuint index))
#define glEnableIndexedEXT_defined
#endif
#ifndef glEnableVertexArrayAttribEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexArrayAttribEXT, (vaobj, index), (GLuint vaobj, GLuint index))
#define glEnableVertexArrayAttribEXT_defined
#endif
#ifndef glEnableVertexArrayEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexArrayEXT, (vaobj, array), (GLuint vaobj, GLenum array))
#define glEnableVertexArrayEXT_defined
#endif
#ifndef glFlushMappedNamedBufferRangeEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedNamedBufferRangeEXT, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizeiptr length))
#define glFlushMappedNamedBufferRangeEXT_defined
#endif
#ifndef glFramebufferDrawBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferDrawBufferEXT, (framebuffer, mode), (GLuint framebuffer, GLenum mode))
#define glFramebufferDrawBufferEXT_defined
#endif
#ifndef glFramebufferDrawBuffersEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferDrawBuffersEXT, (framebuffer, n, bufs), (GLuint framebuffer, GLsizei n, const GLenum *bufs))
#define glFramebufferDrawBuffersEXT_defined
#endif
#ifndef glFramebufferReadBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferReadBufferEXT, (framebuffer, mode), (GLuint framebuffer, GLenum mode))
#define glFramebufferReadBufferEXT_defined
#endif
#ifndef glGenerateMultiTexMipmapEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateMultiTexMipmapEXT, (texunit, target), (GLenum texunit, GLenum target))
#define glGenerateMultiTexMipmapEXT_defined
#endif
#ifndef glGenerateTextureMipmapEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateTextureMipmapEXT, (texture, target), (GLuint texture, GLenum target))
#define glGenerateTextureMipmapEXT_defined
#endif
#ifndef glGetBooleanIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBooleanIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleanIndexedvEXT_defined
#endif
#ifndef glGetCompressedMultiTexImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedMultiTexImageEXT, (texunit, target, lod, img), (GLenum texunit, GLenum target, GLint lod, void *img))
#define glGetCompressedMultiTexImageEXT_defined
#endif
#ifndef glGetCompressedTextureImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureImageEXT, (texture, target, lod, img), (GLuint texture, GLenum target, GLint lod, void *img))
#define glGetCompressedTextureImageEXT_defined
#endif
#ifndef glGetDoubleIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoubleIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLdouble *data))
#define glGetDoubleIndexedvEXT_defined
#endif
#ifndef glGetDoublei_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoublei_vEXT, (pname, index, params), (GLenum pname, GLuint index, GLdouble *params))
#define glGetDoublei_vEXT_defined
#endif
#ifndef glGetFloatIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloatIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloatIndexedvEXT_defined
#endif
#ifndef glGetFloati_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloati_vEXT, (pname, index, params), (GLenum pname, GLuint index, GLfloat *params))
#define glGetFloati_vEXT_defined
#endif
#ifndef glGetFramebufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferParameterivEXT, (framebuffer, pname, params), (GLuint framebuffer, GLenum pname, GLint *params))
#define glGetFramebufferParameterivEXT_defined
#endif
#ifndef glGetIntegerIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegerIndexedvEXT_defined
#endif
#ifndef glGetMultiTexEnvfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexEnvfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLfloat *params))
#define glGetMultiTexEnvfvEXT_defined
#endif
#ifndef glGetMultiTexEnvivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexEnvivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLint *params))
#define glGetMultiTexEnvivEXT_defined
#endif
#ifndef glGetMultiTexGendvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexGendvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params))
#define glGetMultiTexGendvEXT_defined
#endif
#ifndef glGetMultiTexGenfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexGenfvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params))
#define glGetMultiTexGenfvEXT_defined
#endif
#ifndef glGetMultiTexGenivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexGenivEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, GLint *params))
#define glGetMultiTexGenivEXT_defined
#endif
#ifndef glGetMultiTexImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexImageEXT, (texunit, target, level, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels))
#define glGetMultiTexImageEXT_defined
#endif
#ifndef glGetMultiTexLevelParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexLevelParameterfvEXT, (texunit, target, level, pname, params), (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetMultiTexLevelParameterfvEXT_defined
#endif
#ifndef glGetMultiTexLevelParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexLevelParameterivEXT, (texunit, target, level, pname, params), (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetMultiTexLevelParameterivEXT_defined
#endif
#ifndef glGetMultiTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterIivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLint *params))
#define glGetMultiTexParameterIivEXT_defined
#endif
#ifndef glGetMultiTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterIuivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLuint *params))
#define glGetMultiTexParameterIuivEXT_defined
#endif
#ifndef glGetMultiTexParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLfloat *params))
#define glGetMultiTexParameterfvEXT_defined
#endif
#ifndef glGetMultiTexParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLint *params))
#define glGetMultiTexParameterivEXT_defined
#endif
#ifndef glGetNamedBufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameterivEXT, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint *params))
#define glGetNamedBufferParameterivEXT_defined
#endif
#ifndef glGetNamedBufferPointervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferPointervEXT, (buffer, pname, params), (GLuint buffer, GLenum pname, void **params))
#define glGetNamedBufferPointervEXT_defined
#endif
#ifndef glGetNamedBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferSubDataEXT, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data))
#define glGetNamedBufferSubDataEXT_defined
#endif
#ifndef glGetNamedFramebufferAttachmentParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferAttachmentParameterivEXT, (framebuffer, attachment, pname, params), (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params))
#define glGetNamedFramebufferAttachmentParameterivEXT_defined
#endif
#ifndef glGetNamedFramebufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferParameterivEXT, (framebuffer, pname, params), (GLuint framebuffer, GLenum pname, GLint *params))
#define glGetNamedFramebufferParameterivEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterIivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLint *params))
#define glGetNamedProgramLocalParameterIivEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterIuivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLuint *params))
#define glGetNamedProgramLocalParameterIuivEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterdvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterdvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLdouble *params))
#define glGetNamedProgramLocalParameterdvEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterfvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLfloat *params))
#define glGetNamedProgramLocalParameterfvEXT_defined
#endif
#ifndef glGetNamedProgramStringEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramStringEXT, (program, target, pname, string), (GLuint program, GLenum target, GLenum pname, void *string))
#define glGetNamedProgramStringEXT_defined
#endif
#ifndef glGetNamedProgramivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramivEXT, (program, target, pname, params), (GLuint program, GLenum target, GLenum pname, GLint *params))
#define glGetNamedProgramivEXT_defined
#endif
#ifndef glGetNamedRenderbufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedRenderbufferParameterivEXT, (renderbuffer, pname, params), (GLuint renderbuffer, GLenum pname, GLint *params))
#define glGetNamedRenderbufferParameterivEXT_defined
#endif
#ifndef glGetPointerIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPointerIndexedvEXT, (target, index, data), (GLenum target, GLuint index, void **data))
#define glGetPointerIndexedvEXT_defined
#endif
#ifndef glGetPointeri_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPointeri_vEXT, (pname, index, params), (GLenum pname, GLuint index, void **params))
#define glGetPointeri_vEXT_defined
#endif
#ifndef glGetTextureImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureImageEXT, (texture, target, level, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels))
#define glGetTextureImageEXT_defined
#endif
#ifndef glGetTextureLevelParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameterfvEXT, (texture, target, level, pname, params), (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTextureLevelParameterfvEXT_defined
#endif
#ifndef glGetTextureLevelParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameterivEXT, (texture, target, level, pname, params), (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTextureLevelParameterivEXT_defined
#endif
#ifndef glGetTextureParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLint *params))
#define glGetTextureParameterIivEXT_defined
#endif
#ifndef glGetTextureParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIuivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLuint *params))
#define glGetTextureParameterIuivEXT_defined
#endif
#ifndef glGetTextureParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterfvEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLfloat *params))
#define glGetTextureParameterfvEXT_defined
#endif
#ifndef glGetTextureParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLint *params))
#define glGetTextureParameterivEXT_defined
#endif
#ifndef glGetVertexArrayIntegeri_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIntegeri_vEXT, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint *param))
#define glGetVertexArrayIntegeri_vEXT_defined
#endif
#ifndef glGetVertexArrayIntegervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIntegervEXT, (vaobj, pname, param), (GLuint vaobj, GLenum pname, GLint *param))
#define glGetVertexArrayIntegervEXT_defined
#endif
#ifndef glGetVertexArrayPointeri_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayPointeri_vEXT, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, void **param))
#define glGetVertexArrayPointeri_vEXT_defined
#endif
#ifndef glGetVertexArrayPointervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayPointervEXT, (vaobj, pname, param), (GLuint vaobj, GLenum pname, void **param))
#define glGetVertexArrayPointervEXT_defined
#endif
#ifndef glIsEnabledIndexedEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsEnabledIndexedEXT, (target, index), (GLenum target, GLuint index))
#define glIsEnabledIndexedEXT_defined
#endif
#ifndef glMapNamedBufferEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBufferEXT, (buffer, access), (GLuint buffer, GLenum access))
#define glMapNamedBufferEXT_defined
#endif
#ifndef glMapNamedBufferRangeEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBufferRangeEXT, (buffer, offset, length, access), (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapNamedBufferRangeEXT_defined
#endif
#ifndef glMatrixFrustumEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixFrustumEXT, (mode, left, right, bottom, top, zNear, zFar), (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glMatrixFrustumEXT_defined
#endif
#ifndef glMatrixLoadIdentityEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadIdentityEXT, (mode), (GLenum mode))
#define glMatrixLoadIdentityEXT_defined
#endif
#ifndef glMatrixLoadTransposedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadTransposedEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixLoadTransposedEXT_defined
#endif
#ifndef glMatrixLoadTransposefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadTransposefEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixLoadTransposefEXT_defined
#endif
#ifndef glMatrixLoaddEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoaddEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixLoaddEXT_defined
#endif
#ifndef glMatrixLoadfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadfEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixLoadfEXT_defined
#endif
#ifndef glMatrixMultTransposedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultTransposedEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixMultTransposedEXT_defined
#endif
#ifndef glMatrixMultTransposefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultTransposefEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixMultTransposefEXT_defined
#endif
#ifndef glMatrixMultdEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultdEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixMultdEXT_defined
#endif
#ifndef glMatrixMultfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultfEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixMultfEXT_defined
#endif
#ifndef glMatrixOrthoEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixOrthoEXT, (mode, left, right, bottom, top, zNear, zFar), (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glMatrixOrthoEXT_defined
#endif
#ifndef glMatrixPopEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixPopEXT, (mode), (GLenum mode))
#define glMatrixPopEXT_defined
#endif
#ifndef glMatrixPushEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixPushEXT, (mode), (GLenum mode))
#define glMatrixPushEXT_defined
#endif
#ifndef glMatrixRotatedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixRotatedEXT, (mode, angle, x, y, z), (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixRotatedEXT_defined
#endif
#ifndef glMatrixRotatefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixRotatefEXT, (mode, angle, x, y, z), (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixRotatefEXT_defined
#endif
#ifndef glMatrixScaledEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixScaledEXT, (mode, x, y, z), (GLenum mode, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixScaledEXT_defined
#endif
#ifndef glMatrixScalefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixScalefEXT, (mode, x, y, z), (GLenum mode, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixScalefEXT_defined
#endif
#ifndef glMatrixTranslatedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixTranslatedEXT, (mode, x, y, z), (GLenum mode, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixTranslatedEXT_defined
#endif
#ifndef glMatrixTranslatefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixTranslatefEXT, (mode, x, y, z), (GLenum mode, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixTranslatefEXT_defined
#endif
#ifndef glMultiTexBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexBufferEXT, (texunit, target, internalformat, buffer), (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer))
#define glMultiTexBufferEXT_defined
#endif
#ifndef glMultiTexCoordPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordPointerEXT, (texunit, size, type, stride, pointer), (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glMultiTexCoordPointerEXT_defined
#endif
#ifndef glMultiTexEnvfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnvfEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLfloat param))
#define glMultiTexEnvfEXT_defined
#endif
#ifndef glMultiTexEnvfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnvfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params))
#define glMultiTexEnvfvEXT_defined
#endif
#ifndef glMultiTexEnviEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnviEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLint param))
#define glMultiTexEnviEXT_defined
#endif
#ifndef glMultiTexEnvivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnvivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLint *params))
#define glMultiTexEnvivEXT_defined
#endif
#ifndef glMultiTexGendEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGendEXT, (texunit, coord, pname, param), (GLenum texunit, GLenum coord, GLenum pname, GLdouble param))
#define glMultiTexGendEXT_defined
#endif
#ifndef glMultiTexGendvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGendvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params))
#define glMultiTexGendvEXT_defined
#endif
#ifndef glMultiTexGenfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGenfEXT, (texunit, coord, pname, param), (GLenum texunit, GLenum coord, GLenum pname, GLfloat param))
#define glMultiTexGenfEXT_defined
#endif
#ifndef glMultiTexGenfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGenfvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params))
#define glMultiTexGenfvEXT_defined
#endif
#ifndef glMultiTexGeniEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGeniEXT, (texunit, coord, pname, param), (GLenum texunit, GLenum coord, GLenum pname, GLint param))
#define glMultiTexGeniEXT_defined
#endif
#ifndef glMultiTexGenivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGenivEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, const GLint *params))
#define glMultiTexGenivEXT_defined
#endif
#ifndef glMultiTexImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexImage1DEXT, (texunit, target, level, internalformat, width, border, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))
#define glMultiTexImage1DEXT_defined
#endif
#ifndef glMultiTexImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexImage2DEXT, (texunit, target, level, internalformat, width, height, border, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glMultiTexImage2DEXT_defined
#endif
#ifndef glMultiTexImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexImage3DEXT, (texunit, target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glMultiTexImage3DEXT_defined
#endif
#ifndef glMultiTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterIivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLint *params))
#define glMultiTexParameterIivEXT_defined
#endif
#ifndef glMultiTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterIuivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLuint *params))
#define glMultiTexParameterIuivEXT_defined
#endif
#ifndef glMultiTexParameterfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterfEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLfloat param))
#define glMultiTexParameterfEXT_defined
#endif
#ifndef glMultiTexParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params))
#define glMultiTexParameterfvEXT_defined
#endif
#ifndef glMultiTexParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameteriEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLint param))
#define glMultiTexParameteriEXT_defined
#endif
#ifndef glMultiTexParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLint *params))
#define glMultiTexParameterivEXT_defined
#endif
#ifndef glMultiTexRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexRenderbufferEXT, (texunit, target, renderbuffer), (GLenum texunit, GLenum target, GLuint renderbuffer))
#define glMultiTexRenderbufferEXT_defined
#endif
#ifndef glMultiTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexSubImage1DEXT, (texunit, target, level, xoffset, width, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glMultiTexSubImage1DEXT_defined
#endif
#ifndef glMultiTexSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexSubImage2DEXT, (texunit, target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glMultiTexSubImage2DEXT_defined
#endif
#ifndef glMultiTexSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexSubImage3DEXT, (texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glMultiTexSubImage3DEXT_defined
#endif
#ifndef glNamedBufferDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferDataEXT, (buffer, size, data, usage), (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage))
#define glNamedBufferDataEXT_defined
#endif
#ifndef glNamedBufferStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferStorageEXT, (buffer, size, data, flags), (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags))
#define glNamedBufferStorageEXT_defined
#endif
#ifndef glNamedBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferSubDataEXT, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data))
#define glNamedBufferSubDataEXT_defined
#endif
#ifndef glNamedCopyBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedCopyBufferSubDataEXT, (readBuffer, writeBuffer, readOffset, writeOffset, size), (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glNamedCopyBufferSubDataEXT_defined
#endif
#ifndef glNamedFramebufferParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferParameteriEXT, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint param))
#define glNamedFramebufferParameteriEXT_defined
#endif
#ifndef glNamedFramebufferRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferRenderbufferEXT, (framebuffer, attachment, renderbuffertarget, renderbuffer), (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glNamedFramebufferRenderbufferEXT_defined
#endif
#ifndef glNamedFramebufferTexture1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture1DEXT, (framebuffer, attachment, textarget, texture, level), (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glNamedFramebufferTexture1DEXT_defined
#endif
#ifndef glNamedFramebufferTexture2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture2DEXT, (framebuffer, attachment, textarget, texture, level), (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glNamedFramebufferTexture2DEXT_defined
#endif
#ifndef glNamedFramebufferTexture3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture3DEXT, (framebuffer, attachment, textarget, texture, level, zoffset), (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glNamedFramebufferTexture3DEXT_defined
#endif
#ifndef glNamedFramebufferTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureEXT, (framebuffer, attachment, texture, level), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level))
#define glNamedFramebufferTextureEXT_defined
#endif
#ifndef glNamedFramebufferTextureFaceEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureFaceEXT, (framebuffer, attachment, texture, level, face), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face))
#define glNamedFramebufferTextureFaceEXT_defined
#endif
#ifndef glNamedFramebufferTextureLayerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureLayerEXT, (framebuffer, attachment, texture, level, layer), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glNamedFramebufferTextureLayerEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4dEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glNamedProgramLocalParameter4dEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4dvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLdouble *params))
#define glNamedProgramLocalParameter4dvEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4fEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glNamedProgramLocalParameter4fEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4fvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLfloat *params))
#define glNamedProgramLocalParameter4fvEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4iEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glNamedProgramLocalParameterI4iEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4ivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLint *params))
#define glNamedProgramLocalParameterI4ivEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4uiEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glNamedProgramLocalParameterI4uiEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4uivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLuint *params))
#define glNamedProgramLocalParameterI4uivEXT_defined
#endif
#ifndef glNamedProgramLocalParameters4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameters4fvEXT, (program, target, index, count, params), (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params))
#define glNamedProgramLocalParameters4fvEXT_defined
#endif
#ifndef glNamedProgramLocalParametersI4ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParametersI4ivEXT, (program, target, index, count, params), (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params))
#define glNamedProgramLocalParametersI4ivEXT_defined
#endif
#ifndef glNamedProgramLocalParametersI4uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParametersI4uivEXT, (program, target, index, count, params), (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params))
#define glNamedProgramLocalParametersI4uivEXT_defined
#endif
#ifndef glNamedProgramStringEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramStringEXT, (program, target, format, len, string), (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string))
#define glNamedProgramStringEXT_defined
#endif
#ifndef glNamedRenderbufferStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageEXT, (renderbuffer, internalformat, width, height), (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageEXT_defined
#endif
#ifndef glNamedRenderbufferStorageMultisampleCoverageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageMultisampleCoverageEXT, (renderbuffer, coverageSamples, colorSamples, internalformat, width, height), (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisampleCoverageEXT_defined
#endif
#ifndef glNamedRenderbufferStorageMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageMultisampleEXT, (renderbuffer, samples, internalformat, width, height), (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisampleEXT_defined
#endif
#ifndef glProgramUniform1dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1dEXT, (program, location, x), (GLuint program, GLint location, GLdouble x))
#define glProgramUniform1dEXT_defined
#endif
#ifndef glProgramUniform1dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform1dvEXT_defined
#endif
#ifndef glProgramUniform1fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1fEXT, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1fEXT_defined
#endif
#ifndef glProgramUniform1fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fvEXT_defined
#endif
#ifndef glProgramUniform1iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1iEXT, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1iEXT_defined
#endif
#ifndef glProgramUniform1ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1ivEXT_defined
#endif
#ifndef glProgramUniform1uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1uiEXT, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1uiEXT_defined
#endif
#ifndef glProgramUniform1uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uivEXT_defined
#endif
#ifndef glProgramUniform2dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2dEXT, (program, location, x, y), (GLuint program, GLint location, GLdouble x, GLdouble y))
#define glProgramUniform2dEXT_defined
#endif
#ifndef glProgramUniform2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform2dvEXT_defined
#endif
#ifndef glProgramUniform2fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2fEXT, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2fEXT_defined
#endif
#ifndef glProgramUniform2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fvEXT_defined
#endif
#ifndef glProgramUniform2iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2iEXT, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2iEXT_defined
#endif
#ifndef glProgramUniform2ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2ivEXT_defined
#endif
#ifndef glProgramUniform2uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2uiEXT, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2uiEXT_defined
#endif
#ifndef glProgramUniform2uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uivEXT_defined
#endif
#ifndef glProgramUniform3dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3dEXT, (program, location, x, y, z), (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z))
#define glProgramUniform3dEXT_defined
#endif
#ifndef glProgramUniform3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform3dvEXT_defined
#endif
#ifndef glProgramUniform3fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3fEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3fEXT_defined
#endif
#ifndef glProgramUniform3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fvEXT_defined
#endif
#ifndef glProgramUniform3iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3iEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3iEXT_defined
#endif
#ifndef glProgramUniform3ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3ivEXT_defined
#endif
#ifndef glProgramUniform3uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3uiEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3uiEXT_defined
#endif
#ifndef glProgramUniform3uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uivEXT_defined
#endif
#ifndef glProgramUniform4dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4dEXT, (program, location, x, y, z, w), (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glProgramUniform4dEXT_defined
#endif
#ifndef glProgramUniform4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform4dvEXT_defined
#endif
#ifndef glProgramUniform4fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4fEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4fEXT_defined
#endif
#ifndef glProgramUniform4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fvEXT_defined
#endif
#ifndef glProgramUniform4iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4iEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4iEXT_defined
#endif
#ifndef glProgramUniform4ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4ivEXT_defined
#endif
#ifndef glProgramUniform4uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4uiEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4uiEXT_defined
#endif
#ifndef glProgramUniform4uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uivEXT_defined
#endif
#ifndef glProgramUniformMatrix2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2dvEXT_defined
#endif
#ifndef glProgramUniformMatrix2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x3dvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x4dvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3dvEXT_defined
#endif
#ifndef glProgramUniformMatrix3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x2dvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x4dvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4dvEXT_defined
#endif
#ifndef glProgramUniformMatrix4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x2dvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x3dvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fvEXT_defined
#endif
#ifndef glPushClientAttribDefaultEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPushClientAttribDefaultEXT, (mask), (GLbitfield mask))
#define glPushClientAttribDefaultEXT_defined
#endif
#ifndef glTextureBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBufferEXT, (texture, target, internalformat, buffer), (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer))
#define glTextureBufferEXT_defined
#endif
#ifndef glTextureBufferRangeEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBufferRangeEXT, (texture, target, internalformat, buffer, offset, size), (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTextureBufferRangeEXT_defined
#endif
#ifndef glTextureImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage1DEXT, (texture, target, level, internalformat, width, border, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTextureImage1DEXT_defined
#endif
#ifndef glTextureImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage2DEXT, (texture, target, level, internalformat, width, height, border, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTextureImage2DEXT_defined
#endif
#ifndef glTextureImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage3DEXT, (texture, target, level, internalformat, width, height, depth, border, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTextureImage3DEXT_defined
#endif
#ifndef glTexturePageCommitmentEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexturePageCommitmentEXT, (texture, level, xoffset, yoffset, zoffset, width, height, depth, commit), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit))
#define glTexturePageCommitmentEXT_defined
#endif
#ifndef glTextureParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLint *params))
#define glTextureParameterIivEXT_defined
#endif
#ifndef glTextureParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIuivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLuint *params))
#define glTextureParameterIuivEXT_defined
#endif
#ifndef glTextureParameterfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterfEXT, (texture, target, pname, param), (GLuint texture, GLenum target, GLenum pname, GLfloat param))
#define glTextureParameterfEXT_defined
#endif
#ifndef glTextureParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterfvEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLfloat *params))
#define glTextureParameterfvEXT_defined
#endif
#ifndef glTextureParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteriEXT, (texture, target, pname, param), (GLuint texture, GLenum target, GLenum pname, GLint param))
#define glTextureParameteriEXT_defined
#endif
#ifndef glTextureParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLint *params))
#define glTextureParameterivEXT_defined
#endif
#ifndef glTextureRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureRenderbufferEXT, (texture, target, renderbuffer), (GLuint texture, GLenum target, GLuint renderbuffer))
#define glTextureRenderbufferEXT_defined
#endif
#ifndef glTextureStorage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage1DEXT, (texture, target, levels, internalformat, width), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTextureStorage1DEXT_defined
#endif
#ifndef glTextureStorage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2DEXT, (texture, target, levels, internalformat, width, height), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTextureStorage2DEXT_defined
#endif
#ifndef glTextureStorage2DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2DMultisampleEXT, (texture, target, samples, internalformat, width, height, fixedsamplelocations), (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTextureStorage2DMultisampleEXT_defined
#endif
#ifndef glTextureStorage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3DEXT, (texture, target, levels, internalformat, width, height, depth), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTextureStorage3DEXT_defined
#endif
#ifndef glTextureStorage3DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3DMultisampleEXT, (texture, target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTextureStorage3DMultisampleEXT_defined
#endif
#ifndef glTextureSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage1DEXT, (texture, target, level, xoffset, width, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage1DEXT_defined
#endif
#ifndef glTextureSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage2DEXT, (texture, target, level, xoffset, yoffset, width, height, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage2DEXT_defined
#endif
#ifndef glTextureSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage3DEXT, (texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage3DEXT_defined
#endif
#ifndef glUnmapNamedBufferEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapNamedBufferEXT, (buffer), (GLuint buffer))
#define glUnmapNamedBufferEXT_defined
#endif
#ifndef glVertexArrayBindVertexBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayBindVertexBufferEXT, (vaobj, bindingindex, buffer, offset, stride), (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glVertexArrayBindVertexBufferEXT_defined
#endif
#ifndef glVertexArrayColorOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayColorOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayColorOffsetEXT_defined
#endif
#ifndef glVertexArrayEdgeFlagOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayEdgeFlagOffsetEXT, (vaobj, buffer, stride, offset), (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset))
#define glVertexArrayEdgeFlagOffsetEXT_defined
#endif
#ifndef glVertexArrayFogCoordOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayFogCoordOffsetEXT, (vaobj, buffer, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayFogCoordOffsetEXT_defined
#endif
#ifndef glVertexArrayIndexOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayIndexOffsetEXT, (vaobj, buffer, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayIndexOffsetEXT_defined
#endif
#ifndef glVertexArrayMultiTexCoordOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayMultiTexCoordOffsetEXT, (vaobj, buffer, texunit, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayMultiTexCoordOffsetEXT_defined
#endif
#ifndef glVertexArrayNormalOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayNormalOffsetEXT, (vaobj, buffer, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayNormalOffsetEXT_defined
#endif
#ifndef glVertexArraySecondaryColorOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArraySecondaryColorOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArraySecondaryColorOffsetEXT_defined
#endif
#ifndef glVertexArrayTexCoordOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayTexCoordOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayTexCoordOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexAttribBindingEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribBindingEXT, (vaobj, attribindex, bindingindex), (GLuint vaobj, GLuint attribindex, GLuint bindingindex))
#define glVertexArrayVertexAttribBindingEXT_defined
#endif
#ifndef glVertexArrayVertexAttribDivisorEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribDivisorEXT, (vaobj, index, divisor), (GLuint vaobj, GLuint index, GLuint divisor))
#define glVertexArrayVertexAttribDivisorEXT_defined
#endif
#ifndef glVertexArrayVertexAttribFormatEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribFormatEXT, (vaobj, attribindex, size, type, normalized, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexArrayVertexAttribFormatEXT_defined
#endif
#ifndef glVertexArrayVertexAttribIFormatEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribIFormatEXT, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayVertexAttribIFormatEXT_defined
#endif
#ifndef glVertexArrayVertexAttribIOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribIOffsetEXT, (vaobj, buffer, index, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexAttribIOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexAttribLFormatEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribLFormatEXT, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayVertexAttribLFormatEXT_defined
#endif
#ifndef glVertexArrayVertexAttribLOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribLOffsetEXT, (vaobj, buffer, index, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexAttribLOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexAttribOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribOffsetEXT, (vaobj, buffer, index, size, type, normalized, stride, offset), (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexAttribOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexBindingDivisorEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBindingDivisorEXT, (vaobj, bindingindex, divisor), (GLuint vaobj, GLuint bindingindex, GLuint divisor))
#define glVertexArrayVertexBindingDivisorEXT_defined
#endif
#ifndef glVertexArrayVertexOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexOffsetEXT_defined
#endif
#endif // defined(GL_EXT_direct_state_access)
#if defined(GL_EXT_draw_instanced)
#ifndef glDrawArraysInstancedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstancedEXT, (mode, start, count, primcount), (GLenum mode, GLint start, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedEXT_defined
#endif
#ifndef glDrawElementsInstancedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedEXT, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedEXT_defined
#endif
#endif // defined(GL_EXT_draw_instanced)
#if defined(GL_EXT_polygon_offset_clamp)
#ifndef glPolygonOffsetClampEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffsetClampEXT, (factor, units, clamp), (GLfloat factor, GLfloat units, GLfloat clamp))
#define glPolygonOffsetClampEXT_defined
#endif
#endif // defined(GL_EXT_polygon_offset_clamp)
#if defined(GL_EXT_raster_multisample)
#ifndef glRasterSamplesEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterSamplesEXT, (samples, fixedsamplelocations), (GLuint samples, GLboolean fixedsamplelocations))
#define glRasterSamplesEXT_defined
#endif
#endif // defined(GL_EXT_raster_multisample)
#if defined(GL_EXT_separate_shader_objects)
#ifndef glActiveProgramEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveProgramEXT, (program), (GLuint program))
#define glActiveProgramEXT_defined
#endif
#ifndef glCreateShaderProgramEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShaderProgramEXT, (type, string), (GLenum type, const GLchar *string))
#define glCreateShaderProgramEXT_defined
#endif
#ifndef glUseShaderProgramEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseShaderProgramEXT, (type, program), (GLenum type, GLuint program))
#define glUseShaderProgramEXT_defined
#endif
#endif // defined(GL_EXT_separate_shader_objects)
#if defined(GL_EXT_shader_framebuffer_fetch_non_coherent)
#ifndef glFramebufferFetchBarrierEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferFetchBarrierEXT, (), (void))
#define glFramebufferFetchBarrierEXT_defined
#endif
#endif // defined(GL_EXT_shader_framebuffer_fetch_non_coherent)
#if defined(GL_EXT_window_rectangles)
#ifndef glWindowRectanglesEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowRectanglesEXT, (mode, count, box), (GLenum mode, GLsizei count, const GLint *box))
#define glWindowRectanglesEXT_defined
#endif
#endif // defined(GL_EXT_window_rectangles)
#if defined(GL_INTEL_framebuffer_CMAA)
#ifndef glApplyFramebufferAttachmentCMAAINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glApplyFramebufferAttachmentCMAAINTEL, (), (void))
#define glApplyFramebufferAttachmentCMAAINTEL_defined
#endif
#endif // defined(GL_INTEL_framebuffer_CMAA)
#if defined(GL_INTEL_performance_query)
#ifndef glBeginPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glBeginPerfQueryINTEL_defined
#endif
#ifndef glCreatePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreatePerfQueryINTEL, (queryId, queryHandle), (GLuint queryId, GLuint *queryHandle))
#define glCreatePerfQueryINTEL_defined
#endif
#ifndef glDeletePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeletePerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glDeletePerfQueryINTEL_defined
#endif
#ifndef glEndPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glEndPerfQueryINTEL_defined
#endif
#ifndef glGetFirstPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFirstPerfQueryIdINTEL, (queryId), (GLuint *queryId))
#define glGetFirstPerfQueryIdINTEL_defined
#endif
#ifndef glGetNextPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNextPerfQueryIdINTEL, (queryId, nextQueryId), (GLuint queryId, GLuint *nextQueryId))
#define glGetNextPerfQueryIdINTEL_defined
#endif
#ifndef glGetPerfCounterInfoINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfCounterInfoINTEL, (queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue), (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue))
#define glGetPerfCounterInfoINTEL_defined
#endif
#ifndef glGetPerfQueryDataINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfQueryDataINTEL, (queryHandle, flags, dataSize, data, bytesWritten), (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten))
#define glGetPerfQueryDataINTEL_defined
#endif
#ifndef glGetPerfQueryIdByNameINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfQueryIdByNameINTEL, (queryName, queryId), (GLchar *queryName, GLuint *queryId))
#define glGetPerfQueryIdByNameINTEL_defined
#endif
#ifndef glGetPerfQueryInfoINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfQueryInfoINTEL, (queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask), (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask))
#define glGetPerfQueryInfoINTEL_defined
#endif
#endif // defined(GL_INTEL_performance_query)
#if defined(GL_KHR_blend_equation_advanced)
#ifndef glBlendBarrierKHR_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendBarrierKHR, (), (void))
#define glBlendBarrierKHR_defined
#endif
#endif // defined(GL_KHR_blend_equation_advanced)
#if defined(GL_KHR_parallel_shader_compile)
#ifndef glMaxShaderCompilerThreadsKHR_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMaxShaderCompilerThreadsKHR, (count), (GLuint count))
#define glMaxShaderCompilerThreadsKHR_defined
#endif
#endif // defined(GL_KHR_parallel_shader_compile)
#if defined(GL_NV_bindless_multi_draw_indirect)
#ifndef glMultiDrawArraysIndirectBindlessNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectBindlessNV, (mode, indirect, drawCount, stride, vertexBufferCount), (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawArraysIndirectBindlessNV_defined
#endif
#ifndef glMultiDrawElementsIndirectBindlessNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectBindlessNV, (mode, type, indirect, drawCount, stride, vertexBufferCount), (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawElementsIndirectBindlessNV_defined
#endif
#endif // defined(GL_NV_bindless_multi_draw_indirect)
#if defined(GL_NV_bindless_multi_draw_indirect_count)
#ifndef glMultiDrawArraysIndirectBindlessCountNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectBindlessCountNV, (mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount), (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawArraysIndirectBindlessCountNV_defined
#endif
#ifndef glMultiDrawElementsIndirectBindlessCountNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectBindlessCountNV, (mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount), (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawElementsIndirectBindlessCountNV_defined
#endif
#endif // defined(GL_NV_bindless_multi_draw_indirect_count)
#if defined(GL_NV_bindless_texture)
#ifndef glGetImageHandleNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetImageHandleNV, (texture, level, layered, layer, format), (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))
#define glGetImageHandleNV_defined
#endif
#ifndef glGetTextureHandleNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureHandleNV, (texture), (GLuint texture))
#define glGetTextureHandleNV_defined
#endif
#ifndef glGetTextureSamplerHandleNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureSamplerHandleNV, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleNV_defined
#endif
#ifndef glIsImageHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsImageHandleResidentNV, (handle), (GLuint64 handle))
#define glIsImageHandleResidentNV_defined
#endif
#ifndef glIsTextureHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glIsTextureHandleResidentNV_defined
#endif
#ifndef glMakeImageHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeImageHandleNonResidentNV_defined
#endif
#ifndef glMakeImageHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleResidentNV, (handle, access), (GLuint64 handle, GLenum access))
#define glMakeImageHandleResidentNV_defined
#endif
#ifndef glMakeTextureHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleNonResidentNV_defined
#endif
#ifndef glMakeTextureHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleResidentNV_defined
#endif
#ifndef glProgramUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64NV, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64NV_defined
#endif
#ifndef glProgramUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64vNV, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vNV_defined
#endif
#ifndef glUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64NV, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64NV_defined
#endif
#ifndef glUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vNV_defined
#endif
#endif // defined(GL_NV_bindless_texture)
#if defined(GL_NV_blend_equation_advanced)
#ifndef glBlendBarrierNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendBarrierNV, (), (void))
#define glBlendBarrierNV_defined
#endif
#ifndef glBlendParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendParameteriNV, (pname, value), (GLenum pname, GLint value))
#define glBlendParameteriNV_defined
#endif
#endif // defined(GL_NV_blend_equation_advanced)
#if defined(GL_NV_clip_space_w_scaling)
#ifndef glViewportPositionWScaleNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportPositionWScaleNV, (index, xcoeff, ycoeff), (GLuint index, GLfloat xcoeff, GLfloat ycoeff))
#define glViewportPositionWScaleNV_defined
#endif
#endif // defined(GL_NV_clip_space_w_scaling)
#if defined(GL_NV_command_list)
#ifndef glCallCommandListNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCallCommandListNV, (list), (GLuint list))
#define glCallCommandListNV_defined
#endif
#ifndef glCommandListSegmentsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCommandListSegmentsNV, (list, segments), (GLuint list, GLuint segments))
#define glCommandListSegmentsNV_defined
#endif
#ifndef glCompileCommandListNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileCommandListNV, (list), (GLuint list))
#define glCompileCommandListNV_defined
#endif
#ifndef glCreateCommandListsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateCommandListsNV, (n, lists), (GLsizei n, GLuint *lists))
#define glCreateCommandListsNV_defined
#endif
#ifndef glCreateStatesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateStatesNV, (n, states), (GLsizei n, GLuint *states))
#define glCreateStatesNV_defined
#endif
#ifndef glDeleteCommandListsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteCommandListsNV, (n, lists), (GLsizei n, const GLuint *lists))
#define glDeleteCommandListsNV_defined
#endif
#ifndef glDeleteStatesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteStatesNV, (n, states), (GLsizei n, const GLuint *states))
#define glDeleteStatesNV_defined
#endif
#ifndef glDrawCommandsAddressNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsAddressNV, (primitiveMode, indirects, sizes, count), (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count))
#define glDrawCommandsAddressNV_defined
#endif
#ifndef glDrawCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsNV, (primitiveMode, buffer, indirects, sizes, count), (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count))
#define glDrawCommandsNV_defined
#endif
#ifndef glDrawCommandsStatesAddressNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsStatesAddressNV, (indirects, sizes, states, fbos, count), (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count))
#define glDrawCommandsStatesAddressNV_defined
#endif
#ifndef glDrawCommandsStatesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsStatesNV, (buffer, indirects, sizes, states, fbos, count), (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count))
#define glDrawCommandsStatesNV_defined
#endif
#ifndef glGetCommandHeaderNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetCommandHeaderNV, (tokenID, size), (GLenum tokenID, GLuint size))
#define glGetCommandHeaderNV_defined
#endif
#ifndef glGetStageIndexNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLushort, APIENTRY, glGetStageIndexNV, (shadertype), (GLenum shadertype))
#define glGetStageIndexNV_defined
#endif
#ifndef glIsCommandListNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsCommandListNV, (list), (GLuint list))
#define glIsCommandListNV_defined
#endif
#ifndef glIsStateNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsStateNV, (state), (GLuint state))
#define glIsStateNV_defined
#endif
#ifndef glListDrawCommandsStatesClientNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glListDrawCommandsStatesClientNV, (list, segment, indirects, sizes, states, fbos, count), (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count))
#define glListDrawCommandsStatesClientNV_defined
#endif
#ifndef glStateCaptureNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStateCaptureNV, (state, mode), (GLuint state, GLenum mode))
#define glStateCaptureNV_defined
#endif
#endif // defined(GL_NV_command_list)
#if defined(GL_NV_conditional_render)
#ifndef glBeginConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginConditionalRenderNV, (id, mode), (GLuint id, GLenum mode))
#define glBeginConditionalRenderNV_defined
#endif
#ifndef glEndConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndConditionalRenderNV, (), (void))
#define glEndConditionalRenderNV_defined
#endif
#endif // defined(GL_NV_conditional_render)
#if defined(GL_NV_conservative_raster)
#ifndef glSubpixelPrecisionBiasNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSubpixelPrecisionBiasNV, (xbits, ybits), (GLuint xbits, GLuint ybits))
#define glSubpixelPrecisionBiasNV_defined
#endif
#endif // defined(GL_NV_conservative_raster)
#if defined(GL_NV_conservative_raster_dilate)
#ifndef glConservativeRasterParameterfNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConservativeRasterParameterfNV, (pname, value), (GLenum pname, GLfloat value))
#define glConservativeRasterParameterfNV_defined
#endif
#endif // defined(GL_NV_conservative_raster_dilate)
#if defined(GL_NV_conservative_raster_pre_snap_triangles)
#ifndef glConservativeRasterParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConservativeRasterParameteriNV, (pname, param), (GLenum pname, GLint param))
#define glConservativeRasterParameteriNV_defined
#endif
#endif // defined(GL_NV_conservative_raster_pre_snap_triangles)
#if defined(GL_NV_draw_vulkan_image)
#ifndef glDrawVkImageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawVkImageNV, (vkImage, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1), (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1))
#define glDrawVkImageNV_defined
#endif
#ifndef glGetVkProcAddrNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLVULKANPROCNV, APIENTRY, glGetVkProcAddrNV, (name), (const GLchar *name))
#define glGetVkProcAddrNV_defined
#endif
#ifndef glSignalVkFenceNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSignalVkFenceNV, (vkFence), (GLuint64 vkFence))
#define glSignalVkFenceNV_defined
#endif
#ifndef glSignalVkSemaphoreNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSignalVkSemaphoreNV, (vkSemaphore), (GLuint64 vkSemaphore))
#define glSignalVkSemaphoreNV_defined
#endif
#ifndef glWaitVkSemaphoreNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWaitVkSemaphoreNV, (vkSemaphore), (GLuint64 vkSemaphore))
#define glWaitVkSemaphoreNV_defined
#endif
#endif // defined(GL_NV_draw_vulkan_image)
#if defined(GL_NV_fragment_coverage_to_color)
#ifndef glFragmentCoverageColorNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentCoverageColorNV, (color), (GLuint color))
#define glFragmentCoverageColorNV_defined
#endif
#endif // defined(GL_NV_fragment_coverage_to_color)
#if defined(GL_NV_framebuffer_mixed_samples)
#ifndef glCoverageModulationNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverageModulationNV, (components), (GLenum components))
#define glCoverageModulationNV_defined
#endif
#ifndef glCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverageModulationTableNV, (n, v), (GLsizei n, const GLfloat *v))
#define glCoverageModulationTableNV_defined
#endif
#ifndef glGetCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCoverageModulationTableNV, (bufsize, v), (GLsizei bufsize, GLfloat *v))
#define glGetCoverageModulationTableNV_defined
#endif
#endif // defined(GL_NV_framebuffer_mixed_samples)
#if defined(GL_NV_framebuffer_multisample_coverage)
#ifndef glRenderbufferStorageMultisampleCoverageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorageMultisampleCoverageNV, (target, coverageSamples, colorSamples, internalformat, width, height), (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleCoverageNV_defined
#endif
#endif // defined(GL_NV_framebuffer_multisample_coverage)
#if defined(GL_NV_gpu_shader5)
#ifndef glGetUniformi64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformi64vNV, (program, location, params), (GLuint program, GLint location, GLint64EXT *params))
#define glGetUniformi64vNV_defined
#endif
#ifndef glProgramUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64NV, (program, location, x), (GLuint program, GLint location, GLint64EXT x))
#define glProgramUniform1i64NV_defined
#endif
#ifndef glProgramUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform1i64vNV_defined
#endif
#ifndef glProgramUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64NV, (program, location, x), (GLuint program, GLint location, GLuint64EXT x))
#define glProgramUniform1ui64NV_defined
#endif
#ifndef glProgramUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform1ui64vNV_defined
#endif
#ifndef glProgramUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64NV, (program, location, x, y), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y))
#define glProgramUniform2i64NV_defined
#endif
#ifndef glProgramUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform2i64vNV_defined
#endif
#ifndef glProgramUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64NV, (program, location, x, y), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y))
#define glProgramUniform2ui64NV_defined
#endif
#ifndef glProgramUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform2ui64vNV_defined
#endif
#ifndef glProgramUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64NV, (program, location, x, y, z), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glProgramUniform3i64NV_defined
#endif
#ifndef glProgramUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform3i64vNV_defined
#endif
#ifndef glProgramUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64NV, (program, location, x, y, z), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glProgramUniform3ui64NV_defined
#endif
#ifndef glProgramUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform3ui64vNV_defined
#endif
#ifndef glProgramUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glProgramUniform4i64NV_defined
#endif
#ifndef glProgramUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform4i64vNV_defined
#endif
#ifndef glProgramUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glProgramUniform4ui64NV_defined
#endif
#ifndef glProgramUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform4ui64vNV_defined
#endif
#ifndef glUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64NV, (location, x), (GLint location, GLint64EXT x))
#define glUniform1i64NV_defined
#endif
#ifndef glUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform1i64vNV_defined
#endif
#ifndef glUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64NV, (location, x), (GLint location, GLuint64EXT x))
#define glUniform1ui64NV_defined
#endif
#ifndef glUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform1ui64vNV_defined
#endif
#ifndef glUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64NV, (location, x, y), (GLint location, GLint64EXT x, GLint64EXT y))
#define glUniform2i64NV_defined
#endif
#ifndef glUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform2i64vNV_defined
#endif
#ifndef glUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64NV, (location, x, y), (GLint location, GLuint64EXT x, GLuint64EXT y))
#define glUniform2ui64NV_defined
#endif
#ifndef glUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform2ui64vNV_defined
#endif
#ifndef glUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64NV, (location, x, y, z), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glUniform3i64NV_defined
#endif
#ifndef glUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform3i64vNV_defined
#endif
#ifndef glUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64NV, (location, x, y, z), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glUniform3ui64NV_defined
#endif
#ifndef glUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform3ui64vNV_defined
#endif
#ifndef glUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64NV, (location, x, y, z, w), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glUniform4i64NV_defined
#endif
#ifndef glUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform4i64vNV_defined
#endif
#ifndef glUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64NV, (location, x, y, z, w), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glUniform4ui64NV_defined
#endif
#ifndef glUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform4ui64vNV_defined
#endif
#endif // defined(GL_NV_gpu_shader5)
#if defined(GL_NV_internalformat_sample_query)
#ifndef glGetInternalformatSampleivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformatSampleivNV, (target, internalformat, samples, pname, bufSize, params), (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformatSampleivNV_defined
#endif
#endif // defined(GL_NV_internalformat_sample_query)
#if defined(GL_NV_path_rendering)
#ifndef glCopyPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyPathNV, (resultPath, srcPath), (GLuint resultPath, GLuint srcPath))
#define glCopyPathNV_defined
#endif
#ifndef glCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverFillPathInstancedNV_defined
#endif
#ifndef glCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverFillPathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverFillPathNV_defined
#endif
#ifndef glCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverStrokePathInstancedNV_defined
#endif
#ifndef glCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverStrokePathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverStrokePathNV_defined
#endif
#ifndef glDeletePathsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeletePathsNV, (path, range), (GLuint path, GLsizei range))
#define glDeletePathsNV_defined
#endif
#ifndef glGenPathsNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGenPathsNV, (range), (GLsizei range))
#define glGenPathsNV_defined
#endif
#ifndef glGetPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathCommandsNV, (path, commands), (GLuint path, GLubyte *commands))
#define glGetPathCommandsNV_defined
#endif
#ifndef glGetPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathCoordsNV, (path, coords), (GLuint path, GLfloat *coords))
#define glGetPathCoordsNV_defined
#endif
#ifndef glGetPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathDashArrayNV, (path, dashArray), (GLuint path, GLfloat *dashArray))
#define glGetPathDashArrayNV_defined
#endif
#ifndef glGetPathLengthNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLfloat, APIENTRY, glGetPathLengthNV, (path, startSegment, numSegments), (GLuint path, GLsizei startSegment, GLsizei numSegments))
#define glGetPathLengthNV_defined
#endif
#ifndef glGetPathMetricRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathMetricRangeNV, (metricQueryMask, firstPathName, numPaths, stride, metrics), (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricRangeNV_defined
#endif
#ifndef glGetPathMetricsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathMetricsNV, (metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics), (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricsNV_defined
#endif
#ifndef glGetPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat *value))
#define glGetPathParameterfvNV_defined
#endif
#ifndef glGetPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, GLint *value))
#define glGetPathParameterivNV_defined
#endif
#ifndef glGetPathSpacingNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathSpacingNV, (pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing), (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing))
#define glGetPathSpacingNV_defined
#endif
#ifndef glGetProgramResourcefvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourcefvNV, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params))
#define glGetProgramResourcefvNV_defined
#endif
#ifndef glInterpolatePathsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInterpolatePathsNV, (resultPath, pathA, pathB, weight), (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight))
#define glInterpolatePathsNV_defined
#endif
#ifndef glIsPathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsPathNV, (path), (GLuint path))
#define glIsPathNV_defined
#endif
#ifndef glIsPointInFillPathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsPointInFillPathNV, (path, mask, x, y), (GLuint path, GLuint mask, GLfloat x, GLfloat y))
#define glIsPointInFillPathNV_defined
#endif
#ifndef glIsPointInStrokePathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsPointInStrokePathNV, (path, x, y), (GLuint path, GLfloat x, GLfloat y))
#define glIsPointInStrokePathNV_defined
#endif
#ifndef glMatrixLoad3x2fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoad3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x2fNV_defined
#endif
#ifndef glMatrixLoad3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoad3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x3fNV_defined
#endif
#ifndef glMatrixLoadTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoadTranspose3x3fNV_defined
#endif
#ifndef glMatrixMult3x2fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMult3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x2fNV_defined
#endif
#ifndef glMatrixMult3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMult3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x3fNV_defined
#endif
#ifndef glMatrixMultTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMultTranspose3x3fNV_defined
#endif
#ifndef glPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathCommandsNV, (path, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCommandsNV_defined
#endif
#ifndef glPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathCoordsNV, (path, numCoords, coordType, coords), (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCoordsNV_defined
#endif
#ifndef glPathCoverDepthFuncNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathCoverDepthFuncNV, (func), (GLenum func))
#define glPathCoverDepthFuncNV_defined
#endif
#ifndef glPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathDashArrayNV, (path, dashCount, dashArray), (GLuint path, GLsizei dashCount, const GLfloat *dashArray))
#define glPathDashArrayNV_defined
#endif
#ifndef glPathGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glPathGlyphIndexArrayNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphIndexArrayNV_defined
#endif
#ifndef glPathGlyphIndexRangeNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glPathGlyphIndexRangeNV, (fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount), (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]))
#define glPathGlyphIndexRangeNV_defined
#endif
#ifndef glPathGlyphRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathGlyphRangeNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphRangeNV_defined
#endif
#ifndef glPathGlyphsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathGlyphsNV, (firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphsNV_defined
#endif
#ifndef glPathMemoryGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glPathMemoryGlyphIndexArrayNV, (firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathMemoryGlyphIndexArrayNV_defined
#endif
#ifndef glPathParameterfNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameterfNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat value))
#define glPathParameterfNV_defined
#endif
#ifndef glPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, const GLfloat *value))
#define glPathParameterfvNV_defined
#endif
#ifndef glPathParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameteriNV, (path, pname, value), (GLuint path, GLenum pname, GLint value))
#define glPathParameteriNV_defined
#endif
#ifndef glPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, const GLint *value))
#define glPathParameterivNV_defined
#endif
#ifndef glPathStencilDepthOffsetNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathStencilDepthOffsetNV, (factor, units), (GLfloat factor, GLfloat units))
#define glPathStencilDepthOffsetNV_defined
#endif
#ifndef glPathStencilFuncNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathStencilFuncNV, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glPathStencilFuncNV_defined
#endif
#ifndef glPathStringNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathStringNV, (path, format, length, pathString), (GLuint path, GLenum format, GLsizei length, const void *pathString))
#define glPathStringNV_defined
#endif
#ifndef glPathSubCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathSubCommandsNV, (path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCommandsNV_defined
#endif
#ifndef glPathSubCoordsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathSubCoordsNV, (path, coordStart, numCoords, coordType, coords), (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCoordsNV_defined
#endif
#ifndef glPointAlongPathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glPointAlongPathNV, (path, startSegment, numSegments, distance, x, y, tangentX, tangentY), (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY))
#define glPointAlongPathNV_defined
#endif
#ifndef glProgramPathFragmentInputGenNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramPathFragmentInputGenNV, (program, location, genMode, components, coeffs), (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs))
#define glProgramPathFragmentInputGenNV_defined
#endif
#ifndef glStencilFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilFillPathInstancedNV_defined
#endif
#ifndef glStencilFillPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFillPathNV, (path, fillMode, mask), (GLuint path, GLenum fillMode, GLuint mask))
#define glStencilFillPathNV_defined
#endif
#ifndef glStencilStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilStrokePathInstancedNV_defined
#endif
#ifndef glStencilStrokePathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilStrokePathNV, (path, reference, mask), (GLuint path, GLint reference, GLuint mask))
#define glStencilStrokePathNV_defined
#endif
#ifndef glStencilThenCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverFillPathInstancedNV_defined
#endif
#ifndef glStencilThenCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverFillPathNV, (path, fillMode, mask, coverMode), (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode))
#define glStencilThenCoverFillPathNV_defined
#endif
#ifndef glStencilThenCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverStrokePathInstancedNV_defined
#endif
#ifndef glStencilThenCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverStrokePathNV, (path, reference, mask, coverMode), (GLuint path, GLint reference, GLuint mask, GLenum coverMode))
#define glStencilThenCoverStrokePathNV_defined
#endif
#ifndef glTransformPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformPathNV, (resultPath, srcPath, transformType, transformValues), (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues))
#define glTransformPathNV_defined
#endif
#ifndef glWeightPathsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightPathsNV, (resultPath, numPaths, paths, weights), (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights))
#define glWeightPathsNV_defined
#endif
#endif // defined(GL_NV_path_rendering)
#if defined(GL_NV_sample_locations)
#ifndef glFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferSampleLocationsfvNV, (target, start, count, v), (GLenum target, GLuint start, GLsizei count, const GLfloat *v))
#define glFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glNamedFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferSampleLocationsfvNV, (framebuffer, start, count, v), (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))
#define glNamedFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glResolveDepthValuesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResolveDepthValuesNV, (), (void))
#define glResolveDepthValuesNV_defined
#endif
#endif // defined(GL_NV_sample_locations)
#if defined(GL_NV_shader_buffer_load)
#ifndef glGetBufferParameterui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameterui64vNV, (target, pname, params), (GLenum target, GLenum pname, GLuint64EXT *params))
#define glGetBufferParameterui64vNV_defined
#endif
#ifndef glGetIntegerui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerui64vNV, (value, result), (GLenum value, GLuint64EXT *result))
#define glGetIntegerui64vNV_defined
#endif
#ifndef glGetNamedBufferParameterui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameterui64vNV, (buffer, pname, params), (GLuint buffer, GLenum pname, GLuint64EXT *params))
#define glGetNamedBufferParameterui64vNV_defined
#endif
#ifndef glGetUniformui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformui64vNV, (program, location, params), (GLuint program, GLint location, GLuint64EXT *params))
#define glGetUniformui64vNV_defined
#endif
#ifndef glIsBufferResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsBufferResidentNV, (target), (GLenum target))
#define glIsBufferResidentNV_defined
#endif
#ifndef glIsNamedBufferResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsNamedBufferResidentNV, (buffer), (GLuint buffer))
#define glIsNamedBufferResidentNV_defined
#endif
#ifndef glMakeBufferNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeBufferNonResidentNV, (target), (GLenum target))
#define glMakeBufferNonResidentNV_defined
#endif
#ifndef glMakeBufferResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeBufferResidentNV, (target, access), (GLenum target, GLenum access))
#define glMakeBufferResidentNV_defined
#endif
#ifndef glMakeNamedBufferNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeNamedBufferNonResidentNV, (buffer), (GLuint buffer))
#define glMakeNamedBufferNonResidentNV_defined
#endif
#ifndef glMakeNamedBufferResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeNamedBufferResidentNV, (buffer, access), (GLuint buffer, GLenum access))
#define glMakeNamedBufferResidentNV_defined
#endif
#ifndef glProgramUniformui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformui64NV, (program, location, value), (GLuint program, GLint location, GLuint64EXT value))
#define glProgramUniformui64NV_defined
#endif
#ifndef glProgramUniformui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniformui64vNV_defined
#endif
#ifndef glUniformui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformui64NV, (location, value), (GLint location, GLuint64EXT value))
#define glUniformui64NV_defined
#endif
#ifndef glUniformui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniformui64vNV_defined
#endif
#endif // defined(GL_NV_shader_buffer_load)
#if defined(GL_NV_texture_barrier)
#ifndef glTextureBarrierNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBarrierNV, (), (void))
#define glTextureBarrierNV_defined
#endif
#endif // defined(GL_NV_texture_barrier)
#if defined(GL_NV_vertex_attrib_integer_64bit)
#ifndef glGetVertexAttribLi64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLi64vNV, (index, pname, params), (GLuint index, GLenum pname, GLint64EXT *params))
#define glGetVertexAttribLi64vNV_defined
#endif
#ifndef glGetVertexAttribLui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLui64vNV, (index, pname, params), (GLuint index, GLenum pname, GLuint64EXT *params))
#define glGetVertexAttribLui64vNV_defined
#endif
#ifndef glVertexAttribL1i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1i64NV, (index, x), (GLuint index, GLint64EXT x))
#define glVertexAttribL1i64NV_defined
#endif
#ifndef glVertexAttribL1i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL1i64vNV_defined
#endif
#ifndef glVertexAttribL1ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64NV, (index, x), (GLuint index, GLuint64EXT x))
#define glVertexAttribL1ui64NV_defined
#endif
#ifndef glVertexAttribL1ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL1ui64vNV_defined
#endif
#ifndef glVertexAttribL2i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2i64NV, (index, x, y), (GLuint index, GLint64EXT x, GLint64EXT y))
#define glVertexAttribL2i64NV_defined
#endif
#ifndef glVertexAttribL2i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL2i64vNV_defined
#endif
#ifndef glVertexAttribL2ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2ui64NV, (index, x, y), (GLuint index, GLuint64EXT x, GLuint64EXT y))
#define glVertexAttribL2ui64NV_defined
#endif
#ifndef glVertexAttribL2ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL2ui64vNV_defined
#endif
#ifndef glVertexAttribL3i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3i64NV, (index, x, y, z), (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glVertexAttribL3i64NV_defined
#endif
#ifndef glVertexAttribL3i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL3i64vNV_defined
#endif
#ifndef glVertexAttribL3ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3ui64NV, (index, x, y, z), (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glVertexAttribL3ui64NV_defined
#endif
#ifndef glVertexAttribL3ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL3ui64vNV_defined
#endif
#ifndef glVertexAttribL4i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4i64NV, (index, x, y, z, w), (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glVertexAttribL4i64NV_defined
#endif
#ifndef glVertexAttribL4i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL4i64vNV_defined
#endif
#ifndef glVertexAttribL4ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4ui64NV, (index, x, y, z, w), (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glVertexAttribL4ui64NV_defined
#endif
#ifndef glVertexAttribL4ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL4ui64vNV_defined
#endif
#ifndef glVertexAttribLFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLFormatNV, (index, size, type, stride), (GLuint index, GLint size, GLenum type, GLsizei stride))
#define glVertexAttribLFormatNV_defined
#endif
#endif // defined(GL_NV_vertex_attrib_integer_64bit)
#if defined(GL_NV_vertex_buffer_unified_memory)
#ifndef glBufferAddressRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferAddressRangeNV, (pname, index, address, length), (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length))
#define glBufferAddressRangeNV_defined
#endif
#ifndef glColorFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glColorFormatNV_defined
#endif
#ifndef glEdgeFlagFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEdgeFlagFormatNV, (stride), (GLsizei stride))
#define glEdgeFlagFormatNV_defined
#endif
#ifndef glFogCoordFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordFormatNV, (type, stride), (GLenum type, GLsizei stride))
#define glFogCoordFormatNV_defined
#endif
#ifndef glGetIntegerui64i_vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerui64i_vNV, (value, index, result), (GLenum value, GLuint index, GLuint64EXT *result))
#define glGetIntegerui64i_vNV_defined
#endif
#ifndef glIndexFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexFormatNV, (type, stride), (GLenum type, GLsizei stride))
#define glIndexFormatNV_defined
#endif
#ifndef glNormalFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalFormatNV, (type, stride), (GLenum type, GLsizei stride))
#define glNormalFormatNV_defined
#endif
#ifndef glSecondaryColorFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColorFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glSecondaryColorFormatNV_defined
#endif
#ifndef glTexCoordFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glTexCoordFormatNV_defined
#endif
#ifndef glVertexAttribFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribFormatNV, (index, size, type, normalized, stride), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride))
#define glVertexAttribFormatNV_defined
#endif
#ifndef glVertexAttribIFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIFormatNV, (index, size, type, stride), (GLuint index, GLint size, GLenum type, GLsizei stride))
#define glVertexAttribIFormatNV_defined
#endif
#ifndef glVertexFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glVertexFormatNV_defined
#endif
#endif // defined(GL_NV_vertex_buffer_unified_memory)
#if defined(GL_NV_viewport_swizzle)
#ifndef glViewportSwizzleNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportSwizzleNV, (index, swizzlex, swizzley, swizzlez, swizzlew), (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew))
#define glViewportSwizzleNV_defined
#endif
#endif // defined(GL_NV_viewport_swizzle)
#if defined(GL_OVR_multiview)
#ifndef glFramebufferTextureMultiviewOVR_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureMultiviewOVR, (target, attachment, texture, level, baseViewIndex, numViews), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews))
#define glFramebufferTextureMultiviewOVR_defined
#endif
#endif // defined(GL_OVR_multiview)
#if defined(GL_VERSION_1_0)
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepth_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepth, (depth), (GLdouble depth))
#define glClearDepth_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRange, (n, f), (GLdouble n, GLdouble f))
#define glDepthRange_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDrawBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawBuffer, (buf), (GLenum buf))
#define glDrawBuffer_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetDoublev_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoublev, (pname, data), (GLenum pname, GLdouble *data))
#define glGetDoublev_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GLAPI, const GLubyte *, APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexImage, (target, level, format, type, pixels), (GLenum target, GLint level, GLenum format, GLenum type, void *pixels))
#define glGetTexImage_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLogicOp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLogicOp, (opcode), (GLenum opcode))
#define glLogicOp_defined
#endif
#ifndef glPixelStoref_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelStoref, (pname, param), (GLenum pname, GLfloat param))
#define glPixelStoref_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPointSize_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointSize, (size), (GLfloat size))
#define glPointSize_defined
#endif
#ifndef glPolygonMode_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonMode, (face, mode), (GLenum face, GLenum mode))
#define glPolygonMode_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadBuffer, (src), (GLenum src))
#define glReadBuffer_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage1D, (target, level, internalformat, width, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage1D_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_VERSION_1_0)
#if defined(GL_VERSION_1_1)
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glCopyTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexImage1D, (target, level, internalformat, x, y, width, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyTexImage1D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage1D, (target, level, xoffset, x, y, width), (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTexSubImage1D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGetPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPointerv, (pname, params), (GLenum pname, void **params))
#define glGetPointerv_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage1D, (target, level, xoffset, width, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage1D_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#endif // defined(GL_VERSION_1_1)
#if defined(GL_VERSION_1_2)
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#endif // defined(GL_VERSION_1_2)
#if defined(GL_VERSION_1_3)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glCompressedTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage1D, (target, level, internalformat, width, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage1D_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage1D, (target, level, xoffset, width, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage1D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glGetCompressedTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTexImage, (target, level, img), (GLenum target, GLint level, void *img))
#define glGetCompressedTexImage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#endif // defined(GL_VERSION_1_3)
#if defined(GL_VERSION_1_4)
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glMultiDrawArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArrays, (mode, first, count, drawcount), (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount))
#define glMultiDrawArrays_defined
#endif
#ifndef glMultiDrawElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElements, (mode, count, type, indices, drawcount), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount))
#define glMultiDrawElements_defined
#endif
#ifndef glPointParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterf, (pname, param), (GLenum pname, GLfloat param))
#define glPointParameterf_defined
#endif
#ifndef glPointParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glPointParameterfv_defined
#endif
#ifndef glPointParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameteri, (pname, param), (GLenum pname, GLint param))
#define glPointParameteri_defined
#endif
#ifndef glPointParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameteriv, (pname, params), (GLenum pname, const GLint *params))
#define glPointParameteriv_defined
#endif
#endif // defined(GL_VERSION_1_4)
#if defined(GL_VERSION_1_5)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, void *data))
#define glGetBufferSubData_defined
#endif
#ifndef glGetQueryObjectiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectiv, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetQueryObjectiv_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glMapBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapBuffer, (target, access), (GLenum target, GLenum access))
#define glMapBuffer_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#endif // defined(GL_VERSION_1_5)
#if defined(GL_VERSION_2_0)
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribdv, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribdv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1d, (index, x), (GLuint index, GLdouble x))
#define glVertexAttrib1d_defined
#endif
#ifndef glVertexAttrib1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib1dv_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib1s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1s, (index, x), (GLuint index, GLshort x))
#define glVertexAttrib1s_defined
#endif
#ifndef glVertexAttrib1sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib1sv_defined
#endif
#ifndef glVertexAttrib2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2d, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttrib2d_defined
#endif
#ifndef glVertexAttrib2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib2dv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2s, (index, x, y), (GLuint index, GLshort x, GLshort y))
#define glVertexAttrib2s_defined
#endif
#ifndef glVertexAttrib2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib2sv_defined
#endif
#ifndef glVertexAttrib3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3d, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttrib3d_defined
#endif
#ifndef glVertexAttrib3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib3dv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3s, (index, x, y, z), (GLuint index, GLshort x, GLshort y, GLshort z))
#define glVertexAttrib3s_defined
#endif
#ifndef glVertexAttrib3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib3sv_defined
#endif
#ifndef glVertexAttrib4Nbv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nbv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4Nbv_defined
#endif
#ifndef glVertexAttrib4Niv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Niv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4Niv_defined
#endif
#ifndef glVertexAttrib4Nsv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nsv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4Nsv_defined
#endif
#ifndef glVertexAttrib4Nub_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nub, (index, x, y, z, w), (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))
#define glVertexAttrib4Nub_defined
#endif
#ifndef glVertexAttrib4Nubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4Nubv_defined
#endif
#ifndef glVertexAttrib4Nuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nuiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4Nuiv_defined
#endif
#ifndef glVertexAttrib4Nusv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nusv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4Nusv_defined
#endif
#ifndef glVertexAttrib4bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4bv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4bv_defined
#endif
#ifndef glVertexAttrib4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4d, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttrib4d_defined
#endif
#ifndef glVertexAttrib4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib4dv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttrib4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4iv_defined
#endif
#ifndef glVertexAttrib4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4s, (index, x, y, z, w), (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertexAttrib4s_defined
#endif
#ifndef glVertexAttrib4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4sv_defined
#endif
#ifndef glVertexAttrib4ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4ubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4ubv_defined
#endif
#ifndef glVertexAttrib4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4uiv_defined
#endif
#ifndef glVertexAttrib4usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4usv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4usv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#endif // defined(GL_VERSION_2_0)
#if defined(GL_VERSION_2_1)
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#endif // defined(GL_VERSION_2_1)
#if defined(GL_VERSION_3_0)
#ifndef glBeginConditionalRender_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginConditionalRender, (id, mode), (GLuint id, GLenum mode))
#define glBeginConditionalRender_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindFragDataLocation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragDataLocation, (program, color, name), (GLuint program, GLuint color, const GLchar *name))
#define glBindFragDataLocation_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClampColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClampColor, (target, clamp), (GLenum target, GLenum clamp))
#define glClampColor_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glColorMaski_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorMaski, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaski_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDisablei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisablei, (target, index), (GLenum target, GLuint index))
#define glDisablei_defined
#endif
#ifndef glEnablei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnablei, (target, index), (GLenum target, GLuint index))
#define glEnablei_defined
#endif
#ifndef glEndConditionalRender_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndConditionalRender, (), (void))
#define glEndConditionalRender_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture1D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture1D_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFramebufferTexture3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture3D, (target, attachment, textarget, texture, level, zoffset), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glFramebufferTexture3D_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetBooleani_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBooleani_v, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleani_v_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GLAPI, const GLubyte *, APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIiv_defined
#endif
#ifndef glGetTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuiv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glIsEnabledi_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsEnabledi, (target, index), (GLenum target, GLuint index))
#define glIsEnabledi_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIiv_defined
#endif
#ifndef glTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuiv_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glVertexAttribI1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1i, (index, x), (GLuint index, GLint x))
#define glVertexAttribI1i_defined
#endif
#ifndef glVertexAttribI1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI1iv_defined
#endif
#ifndef glVertexAttribI1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1ui, (index, x), (GLuint index, GLuint x))
#define glVertexAttribI1ui_defined
#endif
#ifndef glVertexAttribI1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI1uiv_defined
#endif
#ifndef glVertexAttribI2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2i, (index, x, y), (GLuint index, GLint x, GLint y))
#define glVertexAttribI2i_defined
#endif
#ifndef glVertexAttribI2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI2iv_defined
#endif
#ifndef glVertexAttribI2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2ui, (index, x, y), (GLuint index, GLuint x, GLuint y))
#define glVertexAttribI2ui_defined
#endif
#ifndef glVertexAttribI2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI2uiv_defined
#endif
#ifndef glVertexAttribI3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3i, (index, x, y, z), (GLuint index, GLint x, GLint y, GLint z))
#define glVertexAttribI3i_defined
#endif
#ifndef glVertexAttribI3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI3iv_defined
#endif
#ifndef glVertexAttribI3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3ui, (index, x, y, z), (GLuint index, GLuint x, GLuint y, GLuint z))
#define glVertexAttribI3ui_defined
#endif
#ifndef glVertexAttribI3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI3uiv_defined
#endif
#ifndef glVertexAttribI4bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4bv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttribI4bv_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttribI4sv_defined
#endif
#ifndef glVertexAttribI4ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttribI4ubv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribI4usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4usv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttribI4usv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#endif // defined(GL_VERSION_3_0)
#if defined(GL_VERSION_3_1)
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformName, (program, uniformIndex, bufSize, length, uniformName), (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName))
#define glGetActiveUniformName_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glPrimitiveRestartIndex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrimitiveRestartIndex, (index), (GLuint index))
#define glPrimitiveRestartIndex_defined
#endif
#ifndef glTexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBuffer, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBuffer_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#endif // defined(GL_VERSION_3_1)
#if defined(GL_VERSION_3_2)
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsBaseVertex, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertex_defined
#endif
#ifndef glDrawElementsInstancedBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseVertex, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertex_defined
#endif
#ifndef glDrawRangeElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElementsBaseVertex, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertex_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLsync, APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTexture_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetMultisamplefv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultisamplefv, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefv_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glMultiDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsBaseVertex, (mode, count, type, indices, drawcount, basevertex), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex))
#define glMultiDrawElementsBaseVertex_defined
#endif
#ifndef glProvokingVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProvokingVertex, (mode), (GLenum mode))
#define glProvokingVertex_defined
#endif
#ifndef glSampleMaski_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleMaski, (maskNumber, mask), (GLuint maskNumber, GLbitfield mask))
#define glSampleMaski_defined
#endif
#ifndef glTexImage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexImage2DMultisample_defined
#endif
#ifndef glTexImage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexImage3DMultisample_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_VERSION_3_2)
#if defined(GL_VERSION_3_3)
#ifndef glBindFragDataLocationIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragDataLocationIndexed, (program, colorNumber, index, name), (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name))
#define glBindFragDataLocationIndexed_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGetFragDataIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetFragDataIndex, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataIndex_defined
#endif
#ifndef glGetQueryObjecti64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjecti64v, (id, pname, params), (GLuint id, GLenum pname, GLint64 *params))
#define glGetQueryObjecti64v_defined
#endif
#ifndef glGetQueryObjectui64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectui64v, (id, pname, params), (GLuint id, GLenum pname, GLuint64 *params))
#define glGetQueryObjectui64v_defined
#endif
#ifndef glGetSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterIiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIiv_defined
#endif
#ifndef glGetSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterIuiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glQueryCounter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glQueryCounter, (id, target), (GLuint id, GLenum target))
#define glQueryCounter_defined
#endif
#ifndef glSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterIiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIiv_defined
#endif
#ifndef glSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterIuiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuiv_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribP1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP1ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP1ui_defined
#endif
#ifndef glVertexAttribP1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP1uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP1uiv_defined
#endif
#ifndef glVertexAttribP2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP2ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP2ui_defined
#endif
#ifndef glVertexAttribP2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP2uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP2uiv_defined
#endif
#ifndef glVertexAttribP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP3ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP3ui_defined
#endif
#ifndef glVertexAttribP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP3uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP3uiv_defined
#endif
#ifndef glVertexAttribP4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP4ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP4ui_defined
#endif
#ifndef glVertexAttribP4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP4uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP4uiv_defined
#endif
#endif // defined(GL_VERSION_3_3)
#if defined(GL_VERSION_4_0)
#ifndef glBeginQueryIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginQueryIndexed, (target, index, id), (GLenum target, GLuint index, GLuint id))
#define glBeginQueryIndexed_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBlendEquationSeparatei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparatei, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparatei_defined
#endif
#ifndef glBlendEquationi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationi, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationi_defined
#endif
#ifndef glBlendFuncSeparatei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparatei, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparatei_defined
#endif
#ifndef glBlendFunci_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunci, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunci_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysIndirect, (mode, indirect), (GLenum mode, const void *indirect))
#define glDrawArraysIndirect_defined
#endif
#ifndef glDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsIndirect, (mode, type, indirect), (GLenum mode, GLenum type, const void *indirect))
#define glDrawElementsIndirect_defined
#endif
#ifndef glDrawTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedback, (mode, id), (GLenum mode, GLuint id))
#define glDrawTransformFeedback_defined
#endif
#ifndef glDrawTransformFeedbackStream_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackStream, (mode, id, stream), (GLenum mode, GLuint id, GLuint stream))
#define glDrawTransformFeedbackStream_defined
#endif
#ifndef glEndQueryIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndQueryIndexed, (target, index), (GLenum target, GLuint index))
#define glEndQueryIndexed_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGetActiveSubroutineName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineName, (program, shadertype, index, bufsize, length, name), (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))
#define glGetActiveSubroutineName_defined
#endif
#ifndef glGetActiveSubroutineUniformName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineUniformName, (program, shadertype, index, bufsize, length, name), (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))
#define glGetActiveSubroutineUniformName_defined
#endif
#ifndef glGetActiveSubroutineUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineUniformiv, (program, shadertype, index, pname, values), (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values))
#define glGetActiveSubroutineUniformiv_defined
#endif
#ifndef glGetProgramStageiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramStageiv, (program, shadertype, pname, values), (GLuint program, GLenum shadertype, GLenum pname, GLint *values))
#define glGetProgramStageiv_defined
#endif
#ifndef glGetQueryIndexediv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryIndexediv, (target, index, pname, params), (GLenum target, GLuint index, GLenum pname, GLint *params))
#define glGetQueryIndexediv_defined
#endif
#ifndef glGetSubroutineIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetSubroutineIndex, (program, shadertype, name), (GLuint program, GLenum shadertype, const GLchar *name))
#define glGetSubroutineIndex_defined
#endif
#ifndef glGetSubroutineUniformLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetSubroutineUniformLocation, (program, shadertype, name), (GLuint program, GLenum shadertype, const GLchar *name))
#define glGetSubroutineUniformLocation_defined
#endif
#ifndef glGetUniformSubroutineuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformSubroutineuiv, (shadertype, location, params), (GLenum shadertype, GLint location, GLuint *params))
#define glGetUniformSubroutineuiv_defined
#endif
#ifndef glGetUniformdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformdv, (program, location, params), (GLuint program, GLint location, GLdouble *params))
#define glGetUniformdv_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glMinSampleShading_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinSampleShading, (value), (GLfloat value))
#define glMinSampleShading_defined
#endif
#ifndef glPatchParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPatchParameterfv, (pname, values), (GLenum pname, const GLfloat *values))
#define glPatchParameterfv_defined
#endif
#ifndef glPatchParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPatchParameteri, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteri_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glUniform1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1d, (location, x), (GLint location, GLdouble x))
#define glUniform1d_defined
#endif
#ifndef glUniform1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform1dv_defined
#endif
#ifndef glUniform2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2d, (location, x, y), (GLint location, GLdouble x, GLdouble y))
#define glUniform2d_defined
#endif
#ifndef glUniform2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform2dv_defined
#endif
#ifndef glUniform3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3d, (location, x, y, z), (GLint location, GLdouble x, GLdouble y, GLdouble z))
#define glUniform3d_defined
#endif
#ifndef glUniform3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform3dv_defined
#endif
#ifndef glUniform4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4d, (location, x, y, z, w), (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glUniform4d_defined
#endif
#ifndef glUniform4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform4dv_defined
#endif
#ifndef glUniformMatrix2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2dv_defined
#endif
#ifndef glUniformMatrix2x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2x3dv_defined
#endif
#ifndef glUniformMatrix2x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2x4dv_defined
#endif
#ifndef glUniformMatrix3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3dv_defined
#endif
#ifndef glUniformMatrix3x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3x2dv_defined
#endif
#ifndef glUniformMatrix3x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3x4dv_defined
#endif
#ifndef glUniformMatrix4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4dv_defined
#endif
#ifndef glUniformMatrix4x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4x2dv_defined
#endif
#ifndef glUniformMatrix4x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4x3dv_defined
#endif
#ifndef glUniformSubroutinesuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformSubroutinesuiv, (shadertype, count, indices), (GLenum shadertype, GLsizei count, const GLuint *indices))
#define glUniformSubroutinesuiv_defined
#endif
#endif // defined(GL_VERSION_4_0)
#if defined(GL_VERSION_4_1)
#ifndef glActiveShaderProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveShaderProgram, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgram_defined
#endif
#ifndef glBindProgramPipeline_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindProgramPipeline, (pipeline), (GLuint pipeline))
#define glBindProgramPipeline_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glCreateShaderProgramv_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShaderProgramv, (type, count, strings), (GLenum type, GLsizei count, const GLchar *const*strings))
#define glCreateShaderProgramv_defined
#endif
#ifndef glDeleteProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgramPipelines, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelines_defined
#endif
#ifndef glDepthRangeArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangeArrayv, (first, count, v), (GLuint first, GLsizei count, const GLdouble *v))
#define glDepthRangeArrayv_defined
#endif
#ifndef glDepthRangeIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangeIndexed, (index, n, f), (GLuint index, GLdouble n, GLdouble f))
#define glDepthRangeIndexed_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glGenProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelines_defined
#endif
#ifndef glGetDoublei_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoublei_v, (target, index, data), (GLenum target, GLuint index, GLdouble *data))
#define glGetDoublei_v_defined
#endif
#ifndef glGetFloati_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloati_v, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloati_v_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetProgramPipelineInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramPipelineInfoLog, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLog_defined
#endif
#ifndef glGetProgramPipelineiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramPipelineiv, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineiv_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetVertexAttribLdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLdv, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribLdv_defined
#endif
#ifndef glIsProgramPipeline_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgramPipeline, (pipeline), (GLuint pipeline))
#define glIsProgramPipeline_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glProgramUniform1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1d, (program, location, v0), (GLuint program, GLint location, GLdouble v0))
#define glProgramUniform1d_defined
#endif
#ifndef glProgramUniform1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform1dv_defined
#endif
#ifndef glProgramUniform1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1f, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1f_defined
#endif
#ifndef glProgramUniform1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fv_defined
#endif
#ifndef glProgramUniform1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1i_defined
#endif
#ifndef glProgramUniform1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1iv_defined
#endif
#ifndef glProgramUniform1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1ui_defined
#endif
#ifndef glProgramUniform1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uiv_defined
#endif
#ifndef glProgramUniform2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2d, (program, location, v0, v1), (GLuint program, GLint location, GLdouble v0, GLdouble v1))
#define glProgramUniform2d_defined
#endif
#ifndef glProgramUniform2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform2dv_defined
#endif
#ifndef glProgramUniform2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2f, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2f_defined
#endif
#ifndef glProgramUniform2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fv_defined
#endif
#ifndef glProgramUniform2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2i_defined
#endif
#ifndef glProgramUniform2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2iv_defined
#endif
#ifndef glProgramUniform2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2ui_defined
#endif
#ifndef glProgramUniform2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uiv_defined
#endif
#ifndef glProgramUniform3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3d, (program, location, v0, v1, v2), (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2))
#define glProgramUniform3d_defined
#endif
#ifndef glProgramUniform3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform3dv_defined
#endif
#ifndef glProgramUniform3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3f, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3f_defined
#endif
#ifndef glProgramUniform3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fv_defined
#endif
#ifndef glProgramUniform3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3i_defined
#endif
#ifndef glProgramUniform3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3iv_defined
#endif
#ifndef glProgramUniform3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3ui_defined
#endif
#ifndef glProgramUniform3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uiv_defined
#endif
#ifndef glProgramUniform4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4d, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3))
#define glProgramUniform4d_defined
#endif
#ifndef glProgramUniform4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform4dv_defined
#endif
#ifndef glProgramUniform4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4f, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4f_defined
#endif
#ifndef glProgramUniform4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fv_defined
#endif
#ifndef glProgramUniform4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4i_defined
#endif
#ifndef glProgramUniform4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4iv_defined
#endif
#ifndef glProgramUniform4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4ui_defined
#endif
#ifndef glProgramUniform4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uiv_defined
#endif
#ifndef glProgramUniformMatrix2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2dv_defined
#endif
#ifndef glProgramUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fv_defined
#endif
#ifndef glProgramUniformMatrix2x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x3dv_defined
#endif
#ifndef glProgramUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fv_defined
#endif
#ifndef glProgramUniformMatrix2x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x4dv_defined
#endif
#ifndef glProgramUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fv_defined
#endif
#ifndef glProgramUniformMatrix3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3dv_defined
#endif
#ifndef glProgramUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fv_defined
#endif
#ifndef glProgramUniformMatrix3x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x2dv_defined
#endif
#ifndef glProgramUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fv_defined
#endif
#ifndef glProgramUniformMatrix3x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x4dv_defined
#endif
#ifndef glProgramUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fv_defined
#endif
#ifndef glProgramUniformMatrix4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4dv_defined
#endif
#ifndef glProgramUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fv_defined
#endif
#ifndef glProgramUniformMatrix4x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x2dv_defined
#endif
#ifndef glProgramUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fv_defined
#endif
#ifndef glProgramUniformMatrix4x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x3dv_defined
#endif
#ifndef glProgramUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fv_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glScissorArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorArrayv, (first, count, v), (GLuint first, GLsizei count, const GLint *v))
#define glScissorArrayv_defined
#endif
#ifndef glScissorIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorIndexed, (index, left, bottom, width, height), (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))
#define glScissorIndexed_defined
#endif
#ifndef glScissorIndexedv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorIndexedv, (index, v), (GLuint index, const GLint *v))
#define glScissorIndexedv_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glUseProgramStages_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseProgramStages, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStages_defined
#endif
#ifndef glValidateProgramPipeline_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glValidateProgramPipeline, (pipeline), (GLuint pipeline))
#define glValidateProgramPipeline_defined
#endif
#ifndef glVertexAttribL1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1d, (index, x), (GLuint index, GLdouble x))
#define glVertexAttribL1d_defined
#endif
#ifndef glVertexAttribL1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL1dv_defined
#endif
#ifndef glVertexAttribL2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2d, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttribL2d_defined
#endif
#ifndef glVertexAttribL2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL2dv_defined
#endif
#ifndef glVertexAttribL3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3d, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttribL3d_defined
#endif
#ifndef glVertexAttribL3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL3dv_defined
#endif
#ifndef glVertexAttribL4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4d, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttribL4d_defined
#endif
#ifndef glVertexAttribL4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL4dv_defined
#endif
#ifndef glVertexAttribLPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribLPointer_defined
#endif
#ifndef glViewportArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportArrayv, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glViewportArrayv_defined
#endif
#ifndef glViewportIndexedf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportIndexedf, (index, x, y, w, h), (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))
#define glViewportIndexedf_defined
#endif
#ifndef glViewportIndexedfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportIndexedfv, (index, v), (GLuint index, const GLfloat *v))
#define glViewportIndexedfv_defined
#endif
#endif // defined(GL_VERSION_4_1)
#if defined(GL_VERSION_4_2)
#ifndef glBindImageTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindImageTexture, (unit, texture, level, layered, layer, access, format), (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))
#define glBindImageTexture_defined
#endif
#ifndef glDrawArraysInstancedBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstancedBaseInstance, (mode, first, count, instancecount, baseinstance), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance))
#define glDrawArraysInstancedBaseInstance_defined
#endif
#ifndef glDrawElementsInstancedBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseInstance, (mode, count, type, indices, instancecount, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance))
#define glDrawElementsInstancedBaseInstance_defined
#endif
#ifndef glDrawElementsInstancedBaseVertexBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseVertexBaseInstance, (mode, count, type, indices, instancecount, basevertex, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance))
#define glDrawElementsInstancedBaseVertexBaseInstance_defined
#endif
#ifndef glDrawTransformFeedbackInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackInstanced, (mode, id, instancecount), (GLenum mode, GLuint id, GLsizei instancecount))
#define glDrawTransformFeedbackInstanced_defined
#endif
#ifndef glDrawTransformFeedbackStreamInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackStreamInstanced, (mode, id, stream, instancecount), (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount))
#define glDrawTransformFeedbackStreamInstanced_defined
#endif
#ifndef glGetActiveAtomicCounterBufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveAtomicCounterBufferiv, (program, bufferIndex, pname, params), (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params))
#define glGetActiveAtomicCounterBufferiv_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glMemoryBarrier_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryBarrier, (barriers), (GLbitfield barriers))
#define glMemoryBarrier_defined
#endif
#ifndef glTexStorage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage1D, (target, levels, internalformat, width), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTexStorage1D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#endif // defined(GL_VERSION_4_2)
#if defined(GL_VERSION_4_3)
#ifndef glBindVertexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexBuffer, (bindingindex, buffer, offset, stride), (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glBindVertexBuffer_defined
#endif
#ifndef glClearBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferData, (target, internalformat, format, type, data), (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearBufferData_defined
#endif
#ifndef glClearBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferSubData, (target, internalformat, offset, size, format, type, data), (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))
#define glClearBufferSubData_defined
#endif
#ifndef glCopyImageSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyImageSubData, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubData_defined
#endif
#ifndef glDebugMessageCallback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageCallback, (callback, userParam), (GLDEBUGPROC callback, const void *userParam))
#define glDebugMessageCallback_defined
#endif
#ifndef glDebugMessageControl_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageControl, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControl_defined
#endif
#ifndef glDebugMessageInsert_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageInsert, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsert_defined
#endif
#ifndef glDispatchCompute_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchCompute, (num_groups_x, num_groups_y, num_groups_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))
#define glDispatchCompute_defined
#endif
#ifndef glDispatchComputeIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchComputeIndirect, (indirect), (GLintptr indirect))
#define glDispatchComputeIndirect_defined
#endif
#ifndef glFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glFramebufferParameteri_defined
#endif
#ifndef glGetDebugMessageLog_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetDebugMessageLog, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLog_defined
#endif
#ifndef glGetFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetFramebufferParameteriv_defined
#endif
#ifndef glGetInternalformati64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformati64v, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params))
#define glGetInternalformati64v_defined
#endif
#ifndef glGetObjectLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectLabel, (identifier, name, bufSize, length, label), (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabel_defined
#endif
#ifndef glGetObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectPtrLabel, (ptr, bufSize, length, label), (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectPtrLabel_defined
#endif
#ifndef glGetProgramInterfaceiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramInterfaceiv, (program, programInterface, pname, params), (GLuint program, GLenum programInterface, GLenum pname, GLint *params))
#define glGetProgramInterfaceiv_defined
#endif
#ifndef glGetProgramResourceIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetProgramResourceIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceIndex_defined
#endif
#ifndef glGetProgramResourceLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetProgramResourceLocation, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocation_defined
#endif
#ifndef glGetProgramResourceLocationIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetProgramResourceLocationIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocationIndex_defined
#endif
#ifndef glGetProgramResourceName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourceName, (program, programInterface, index, bufSize, length, name), (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))
#define glGetProgramResourceName_defined
#endif
#ifndef glGetProgramResourceiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourceiv, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))
#define glGetProgramResourceiv_defined
#endif
#ifndef glInvalidateBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateBufferData, (buffer), (GLuint buffer))
#define glInvalidateBufferData_defined
#endif
#ifndef glInvalidateBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateBufferSubData, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizeiptr length))
#define glInvalidateBufferSubData_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glInvalidateTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateTexImage, (texture, level), (GLuint texture, GLint level))
#define glInvalidateTexImage_defined
#endif
#ifndef glInvalidateTexSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateTexSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth))
#define glInvalidateTexSubImage_defined
#endif
#ifndef glMultiDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirect, (mode, indirect, drawcount, stride), (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawArraysIndirect_defined
#endif
#ifndef glMultiDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirect, (mode, type, indirect, drawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawElementsIndirect_defined
#endif
#ifndef glObjectLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glObjectLabel, (identifier, name, length, label), (GLenum identifier, GLuint name, GLsizei length, const GLchar *label))
#define glObjectLabel_defined
#endif
#ifndef glObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glObjectPtrLabel, (ptr, length, label), (const void *ptr, GLsizei length, const GLchar *label))
#define glObjectPtrLabel_defined
#endif
#ifndef glPopDebugGroup_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPopDebugGroup, (), (void))
#define glPopDebugGroup_defined
#endif
#ifndef glPushDebugGroup_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPushDebugGroup, (source, id, length, message), (GLenum source, GLuint id, GLsizei length, const GLchar *message))
#define glPushDebugGroup_defined
#endif
#ifndef glShaderStorageBlockBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderStorageBlockBinding, (program, storageBlockIndex, storageBlockBinding), (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding))
#define glShaderStorageBlockBinding_defined
#endif
#ifndef glTexBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBufferRange, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRange_defined
#endif
#ifndef glTexStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexStorage2DMultisample_defined
#endif
#ifndef glTexStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexStorage3DMultisample_defined
#endif
#ifndef glTextureView_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureView, (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers), (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))
#define glTextureView_defined
#endif
#ifndef glVertexAttribBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribBinding, (attribindex, bindingindex), (GLuint attribindex, GLuint bindingindex))
#define glVertexAttribBinding_defined
#endif
#ifndef glVertexAttribFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribFormat, (attribindex, size, type, normalized, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexAttribFormat_defined
#endif
#ifndef glVertexAttribIFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribIFormat_defined
#endif
#ifndef glVertexAttribLFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribLFormat_defined
#endif
#ifndef glVertexBindingDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexBindingDivisor, (bindingindex, divisor), (GLuint bindingindex, GLuint divisor))
#define glVertexBindingDivisor_defined
#endif
#endif // defined(GL_VERSION_4_3)
#if defined(GL_VERSION_4_4)
#ifndef glBindBuffersBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffersBase, (target, first, count, buffers), (GLenum target, GLuint first, GLsizei count, const GLuint *buffers))
#define glBindBuffersBase_defined
#endif
#ifndef glBindBuffersRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffersRange, (target, first, count, buffers, offsets, sizes), (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes))
#define glBindBuffersRange_defined
#endif
#ifndef glBindImageTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindImageTextures, (first, count, textures), (GLuint first, GLsizei count, const GLuint *textures))
#define glBindImageTextures_defined
#endif
#ifndef glBindSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindSamplers, (first, count, samplers), (GLuint first, GLsizei count, const GLuint *samplers))
#define glBindSamplers_defined
#endif
#ifndef glBindTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTextures, (first, count, textures), (GLuint first, GLsizei count, const GLuint *textures))
#define glBindTextures_defined
#endif
#ifndef glBindVertexBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexBuffers, (first, count, buffers, offsets, strides), (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))
#define glBindVertexBuffers_defined
#endif
#ifndef glBufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferStorage, (target, size, data, flags), (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags))
#define glBufferStorage_defined
#endif
#ifndef glClearTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearTexImage, (texture, level, format, type, data), (GLuint texture, GLint level, GLenum format, GLenum type, const void *data))
#define glClearTexImage_defined
#endif
#ifndef glClearTexSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearTexSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data))
#define glClearTexSubImage_defined
#endif
#endif // defined(GL_VERSION_4_4)
#if defined(GL_VERSION_4_5)
#ifndef glBindTextureUnit_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTextureUnit, (unit, texture), (GLuint unit, GLuint texture))
#define glBindTextureUnit_defined
#endif
#ifndef glBlitNamedFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlitNamedFramebuffer, (readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitNamedFramebuffer_defined
#endif
#ifndef glCheckNamedFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckNamedFramebufferStatus, (framebuffer, target), (GLuint framebuffer, GLenum target))
#define glCheckNamedFramebufferStatus_defined
#endif
#ifndef glClearNamedBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferData, (buffer, internalformat, format, type, data), (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferData_defined
#endif
#ifndef glClearNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferSubData, (buffer, internalformat, offset, size, format, type, data), (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferSubData_defined
#endif
#ifndef glClearNamedFramebufferfi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferfi, (framebuffer, buffer, drawbuffer, depth, stencil), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearNamedFramebufferfi_defined
#endif
#ifndef glClearNamedFramebufferfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferfv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearNamedFramebufferfv_defined
#endif
#ifndef glClearNamedFramebufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferiv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearNamedFramebufferiv_defined
#endif
#ifndef glClearNamedFramebufferuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferuiv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearNamedFramebufferuiv_defined
#endif
#ifndef glClipControl_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClipControl, (origin, depth), (GLenum origin, GLenum depth))
#define glClipControl_defined
#endif
#ifndef glCompressedTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage1D, (texture, level, xoffset, width, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage1D_defined
#endif
#ifndef glCompressedTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage2D, (texture, level, xoffset, yoffset, width, height, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage2D_defined
#endif
#ifndef glCompressedTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage3D_defined
#endif
#ifndef glCopyNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyNamedBufferSubData, (readBuffer, writeBuffer, readOffset, writeOffset, size), (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyNamedBufferSubData_defined
#endif
#ifndef glCopyTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage1D, (texture, level, xoffset, x, y, width), (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTextureSubImage1D_defined
#endif
#ifndef glCopyTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage2D, (texture, level, xoffset, yoffset, x, y, width, height), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage2D_defined
#endif
#ifndef glCopyTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, x, y, width, height), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage3D_defined
#endif
#ifndef glCreateBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glCreateBuffers_defined
#endif
#ifndef glCreateFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glCreateFramebuffers_defined
#endif
#ifndef glCreateProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glCreateProgramPipelines_defined
#endif
#ifndef glCreateQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateQueries, (target, n, ids), (GLenum target, GLsizei n, GLuint *ids))
#define glCreateQueries_defined
#endif
#ifndef glCreateRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glCreateRenderbuffers_defined
#endif
#ifndef glCreateSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateSamplers, (n, samplers), (GLsizei n, GLuint *samplers))
#define glCreateSamplers_defined
#endif
#ifndef glCreateTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateTextures, (target, n, textures), (GLenum target, GLsizei n, GLuint *textures))
#define glCreateTextures_defined
#endif
#ifndef glCreateTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glCreateTransformFeedbacks_defined
#endif
#ifndef glCreateVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glCreateVertexArrays_defined
#endif
#ifndef glDisableVertexArrayAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexArrayAttrib, (vaobj, index), (GLuint vaobj, GLuint index))
#define glDisableVertexArrayAttrib_defined
#endif
#ifndef glEnableVertexArrayAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexArrayAttrib, (vaobj, index), (GLuint vaobj, GLuint index))
#define glEnableVertexArrayAttrib_defined
#endif
#ifndef glFlushMappedNamedBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedNamedBufferRange, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizeiptr length))
#define glFlushMappedNamedBufferRange_defined
#endif
#ifndef glGenerateTextureMipmap_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateTextureMipmap, (texture), (GLuint texture))
#define glGenerateTextureMipmap_defined
#endif
#ifndef glGetCompressedTextureImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureImage, (texture, level, bufSize, pixels), (GLuint texture, GLint level, GLsizei bufSize, void *pixels))
#define glGetCompressedTextureImage_defined
#endif
#ifndef glGetCompressedTextureSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels))
#define glGetCompressedTextureSubImage_defined
#endif
#ifndef glGetGraphicsResetStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetGraphicsResetStatus, (), (void))
#define glGetGraphicsResetStatus_defined
#endif
#ifndef glGetNamedBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameteri64v, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint64 *params))
#define glGetNamedBufferParameteri64v_defined
#endif
#ifndef glGetNamedBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameteriv, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint *params))
#define glGetNamedBufferParameteriv_defined
#endif
#ifndef glGetNamedBufferPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferPointerv, (buffer, pname, params), (GLuint buffer, GLenum pname, void **params))
#define glGetNamedBufferPointerv_defined
#endif
#ifndef glGetNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferSubData, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data))
#define glGetNamedBufferSubData_defined
#endif
#ifndef glGetNamedFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferAttachmentParameteriv, (framebuffer, attachment, pname, params), (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params))
#define glGetNamedFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetNamedFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferParameteriv, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint *param))
#define glGetNamedFramebufferParameteriv_defined
#endif
#ifndef glGetNamedRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedRenderbufferParameteriv, (renderbuffer, pname, params), (GLuint renderbuffer, GLenum pname, GLint *params))
#define glGetNamedRenderbufferParameteriv_defined
#endif
#ifndef glGetQueryBufferObjecti64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjecti64v, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjecti64v_defined
#endif
#ifndef glGetQueryBufferObjectiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjectiv, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjectiv_defined
#endif
#ifndef glGetQueryBufferObjectui64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjectui64v, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjectui64v_defined
#endif
#ifndef glGetQueryBufferObjectuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjectuiv, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjectuiv_defined
#endif
#ifndef glGetTextureImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureImage, (texture, level, format, type, bufSize, pixels), (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetTextureImage_defined
#endif
#ifndef glGetTextureLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameterfv, (texture, level, pname, params), (GLuint texture, GLint level, GLenum pname, GLfloat *params))
#define glGetTextureLevelParameterfv_defined
#endif
#ifndef glGetTextureLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameteriv, (texture, level, pname, params), (GLuint texture, GLint level, GLenum pname, GLint *params))
#define glGetTextureLevelParameteriv_defined
#endif
#ifndef glGetTextureParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIiv, (texture, pname, params), (GLuint texture, GLenum pname, GLint *params))
#define glGetTextureParameterIiv_defined
#endif
#ifndef glGetTextureParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIuiv, (texture, pname, params), (GLuint texture, GLenum pname, GLuint *params))
#define glGetTextureParameterIuiv_defined
#endif
#ifndef glGetTextureParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterfv, (texture, pname, params), (GLuint texture, GLenum pname, GLfloat *params))
#define glGetTextureParameterfv_defined
#endif
#ifndef glGetTextureParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameteriv, (texture, pname, params), (GLuint texture, GLenum pname, GLint *params))
#define glGetTextureParameteriv_defined
#endif
#ifndef glGetTextureSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetTextureSubImage_defined
#endif
#ifndef glGetTransformFeedbacki64_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbacki64_v, (xfb, pname, index, param), (GLuint xfb, GLenum pname, GLuint index, GLint64 *param))
#define glGetTransformFeedbacki64_v_defined
#endif
#ifndef glGetTransformFeedbacki_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbacki_v, (xfb, pname, index, param), (GLuint xfb, GLenum pname, GLuint index, GLint *param))
#define glGetTransformFeedbacki_v_defined
#endif
#ifndef glGetTransformFeedbackiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackiv, (xfb, pname, param), (GLuint xfb, GLenum pname, GLint *param))
#define glGetTransformFeedbackiv_defined
#endif
#ifndef glGetVertexArrayIndexed64iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIndexed64iv, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param))
#define glGetVertexArrayIndexed64iv_defined
#endif
#ifndef glGetVertexArrayIndexediv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIndexediv, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint *param))
#define glGetVertexArrayIndexediv_defined
#endif
#ifndef glGetVertexArrayiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayiv, (vaobj, pname, param), (GLuint vaobj, GLenum pname, GLint *param))
#define glGetVertexArrayiv_defined
#endif
#ifndef glGetnCompressedTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnCompressedTexImage, (target, lod, bufSize, pixels), (GLenum target, GLint lod, GLsizei bufSize, void *pixels))
#define glGetnCompressedTexImage_defined
#endif
#ifndef glGetnTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnTexImage, (target, level, format, type, bufSize, pixels), (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetnTexImage_defined
#endif
#ifndef glGetnUniformdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformdv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLdouble *params))
#define glGetnUniformdv_defined
#endif
#ifndef glGetnUniformfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformfv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfv_defined
#endif
#ifndef glGetnUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformiv_defined
#endif
#ifndef glGetnUniformuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformuiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuiv_defined
#endif
#ifndef glInvalidateNamedFramebufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateNamedFramebufferData, (framebuffer, numAttachments, attachments), (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateNamedFramebufferData_defined
#endif
#ifndef glInvalidateNamedFramebufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateNamedFramebufferSubData, (framebuffer, numAttachments, attachments, x, y, width, height), (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateNamedFramebufferSubData_defined
#endif
#ifndef glMapNamedBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBuffer, (buffer, access), (GLuint buffer, GLenum access))
#define glMapNamedBuffer_defined
#endif
#ifndef glMapNamedBufferRange_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBufferRange, (buffer, offset, length, access), (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapNamedBufferRange_defined
#endif
#ifndef glMemoryBarrierByRegion_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryBarrierByRegion, (barriers), (GLbitfield barriers))
#define glMemoryBarrierByRegion_defined
#endif
#ifndef glNamedBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferData, (buffer, size, data, usage), (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage))
#define glNamedBufferData_defined
#endif
#ifndef glNamedBufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferStorage, (buffer, size, data, flags), (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags))
#define glNamedBufferStorage_defined
#endif
#ifndef glNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferSubData, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data))
#define glNamedBufferSubData_defined
#endif
#ifndef glNamedFramebufferDrawBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferDrawBuffer, (framebuffer, buf), (GLuint framebuffer, GLenum buf))
#define glNamedFramebufferDrawBuffer_defined
#endif
#ifndef glNamedFramebufferDrawBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferDrawBuffers, (framebuffer, n, bufs), (GLuint framebuffer, GLsizei n, const GLenum *bufs))
#define glNamedFramebufferDrawBuffers_defined
#endif
#ifndef glNamedFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferParameteri, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint param))
#define glNamedFramebufferParameteri_defined
#endif
#ifndef glNamedFramebufferReadBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferReadBuffer, (framebuffer, src), (GLuint framebuffer, GLenum src))
#define glNamedFramebufferReadBuffer_defined
#endif
#ifndef glNamedFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferRenderbuffer, (framebuffer, attachment, renderbuffertarget, renderbuffer), (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glNamedFramebufferRenderbuffer_defined
#endif
#ifndef glNamedFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture, (framebuffer, attachment, texture, level), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level))
#define glNamedFramebufferTexture_defined
#endif
#ifndef glNamedFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureLayer, (framebuffer, attachment, texture, level, layer), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glNamedFramebufferTextureLayer_defined
#endif
#ifndef glNamedRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorage, (renderbuffer, internalformat, width, height), (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorage_defined
#endif
#ifndef glNamedRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageMultisample, (renderbuffer, samples, internalformat, width, height), (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisample_defined
#endif
#ifndef glReadnPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadnPixels, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixels_defined
#endif
#ifndef glTextureBarrier_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBarrier, (), (void))
#define glTextureBarrier_defined
#endif
#ifndef glTextureBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBuffer, (texture, internalformat, buffer), (GLuint texture, GLenum internalformat, GLuint buffer))
#define glTextureBuffer_defined
#endif
#ifndef glTextureBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBufferRange, (texture, internalformat, buffer, offset, size), (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTextureBufferRange_defined
#endif
#ifndef glTextureParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIiv, (texture, pname, params), (GLuint texture, GLenum pname, const GLint *params))
#define glTextureParameterIiv_defined
#endif
#ifndef glTextureParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIuiv, (texture, pname, params), (GLuint texture, GLenum pname, const GLuint *params))
#define glTextureParameterIuiv_defined
#endif
#ifndef glTextureParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterf, (texture, pname, param), (GLuint texture, GLenum pname, GLfloat param))
#define glTextureParameterf_defined
#endif
#ifndef glTextureParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterfv, (texture, pname, param), (GLuint texture, GLenum pname, const GLfloat *param))
#define glTextureParameterfv_defined
#endif
#ifndef glTextureParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteri, (texture, pname, param), (GLuint texture, GLenum pname, GLint param))
#define glTextureParameteri_defined
#endif
#ifndef glTextureParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteriv, (texture, pname, param), (GLuint texture, GLenum pname, const GLint *param))
#define glTextureParameteriv_defined
#endif
#ifndef glTextureStorage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage1D, (texture, levels, internalformat, width), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTextureStorage1D_defined
#endif
#ifndef glTextureStorage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2D, (texture, levels, internalformat, width, height), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTextureStorage2D_defined
#endif
#ifndef glTextureStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2DMultisample, (texture, samples, internalformat, width, height, fixedsamplelocations), (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTextureStorage2DMultisample_defined
#endif
#ifndef glTextureStorage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3D, (texture, levels, internalformat, width, height, depth), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTextureStorage3D_defined
#endif
#ifndef glTextureStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3DMultisample, (texture, samples, internalformat, width, height, depth, fixedsamplelocations), (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTextureStorage3DMultisample_defined
#endif
#ifndef glTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage1D, (texture, level, xoffset, width, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage1D_defined
#endif
#ifndef glTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage2D, (texture, level, xoffset, yoffset, width, height, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage2D_defined
#endif
#ifndef glTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage3D_defined
#endif
#ifndef glTransformFeedbackBufferBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackBufferBase, (xfb, index, buffer), (GLuint xfb, GLuint index, GLuint buffer))
#define glTransformFeedbackBufferBase_defined
#endif
#ifndef glTransformFeedbackBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackBufferRange, (xfb, index, buffer, offset, size), (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTransformFeedbackBufferRange_defined
#endif
#ifndef glUnmapNamedBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapNamedBuffer, (buffer), (GLuint buffer))
#define glUnmapNamedBuffer_defined
#endif
#ifndef glVertexArrayAttribBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribBinding, (vaobj, attribindex, bindingindex), (GLuint vaobj, GLuint attribindex, GLuint bindingindex))
#define glVertexArrayAttribBinding_defined
#endif
#ifndef glVertexArrayAttribFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribFormat, (vaobj, attribindex, size, type, normalized, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexArrayAttribFormat_defined
#endif
#ifndef glVertexArrayAttribIFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribIFormat, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayAttribIFormat_defined
#endif
#ifndef glVertexArrayAttribLFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribLFormat, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayAttribLFormat_defined
#endif
#ifndef glVertexArrayBindingDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayBindingDivisor, (vaobj, bindingindex, divisor), (GLuint vaobj, GLuint bindingindex, GLuint divisor))
#define glVertexArrayBindingDivisor_defined
#endif
#ifndef glVertexArrayElementBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayElementBuffer, (vaobj, buffer), (GLuint vaobj, GLuint buffer))
#define glVertexArrayElementBuffer_defined
#endif
#ifndef glVertexArrayVertexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBuffer, (vaobj, bindingindex, buffer, offset, stride), (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glVertexArrayVertexBuffer_defined
#endif
#ifndef glVertexArrayVertexBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBuffers, (vaobj, first, count, buffers, offsets, strides), (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))
#define glVertexArrayVertexBuffers_defined
#endif
#endif // defined(GL_VERSION_4_5)
#if defined(GL_VERSION_4_6)
#ifndef glMultiDrawArraysIndirectCount_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectCount, (mode, indirect, drawcount, maxdrawcount, stride), (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawArraysIndirectCount_defined
#endif
#ifndef glMultiDrawElementsIndirectCount_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectCount, (mode, type, indirect, drawcount, maxdrawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawElementsIndirectCount_defined
#endif
#ifndef glPolygonOffsetClamp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffsetClamp, (factor, units, clamp), (GLfloat factor, GLfloat units, GLfloat clamp))
#define glPolygonOffsetClamp_defined
#endif
#ifndef glSpecializeShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpecializeShader, (shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue), (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue))
#define glSpecializeShader_defined
#endif
#endif // defined(GL_VERSION_4_6)
#endif // defined(__gl_glcorearb_h_)
#if defined(__gl_glext_h_)
#if defined(GL_3DFX_tbuffer)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTbufferMask3DFX, (mask), (GLuint mask))
#define glTbufferMask3DFX_defined
#endif // defined(GL_3DFX_tbuffer)
#if defined(GL_AMD_debug_output)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageCallbackAMD, (callback, userParam), (GLDEBUGPROCAMD callback, void *userParam))
#define glDebugMessageCallbackAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageEnableAMD, (category, severity, count, ids, enabled), (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageEnableAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageInsertAMD, (category, severity, id, length, buf), (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf))
#define glDebugMessageInsertAMD_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetDebugMessageLogAMD, (count, bufsize, categories, severities, ids, lengths, message), (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message))
#define glGetDebugMessageLogAMD_defined
#endif // defined(GL_AMD_debug_output)
#if defined(GL_AMD_draw_buffers_blend)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationIndexedAMD, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationIndexedAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparateIndexedAMD, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateIndexedAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncIndexedAMD, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFuncIndexedAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparateIndexedAMD, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateIndexedAMD_defined
#endif // defined(GL_AMD_draw_buffers_blend)
#if defined(GL_AMD_framebuffer_sample_positions)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferSamplePositionsfvAMD, (target, numsamples, pixelindex, values), (GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values))
#define glFramebufferSamplePositionsfvAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferParameterfvAMD, (target, pname, numsamples, pixelindex, size, values), (GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values))
#define glGetFramebufferParameterfvAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferParameterfvAMD, (framebuffer, pname, numsamples, pixelindex, size, values), (GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values))
#define glGetNamedFramebufferParameterfvAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferSamplePositionsfvAMD, (framebuffer, numsamples, pixelindex, values), (GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values))
#define glNamedFramebufferSamplePositionsfvAMD_defined
#endif // defined(GL_AMD_framebuffer_sample_positions)
#if defined(GL_AMD_gpu_shader_int64)
#ifndef glGetUniformi64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformi64vNV, (program, location, params), (GLuint program, GLint location, GLint64EXT *params))
#define glGetUniformi64vNV_defined
#endif
#ifndef glGetUniformui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformui64vNV, (program, location, params), (GLuint program, GLint location, GLuint64EXT *params))
#define glGetUniformui64vNV_defined
#endif
#ifndef glProgramUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64NV, (program, location, x), (GLuint program, GLint location, GLint64EXT x))
#define glProgramUniform1i64NV_defined
#endif
#ifndef glProgramUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform1i64vNV_defined
#endif
#ifndef glProgramUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64NV, (program, location, x), (GLuint program, GLint location, GLuint64EXT x))
#define glProgramUniform1ui64NV_defined
#endif
#ifndef glProgramUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform1ui64vNV_defined
#endif
#ifndef glProgramUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64NV, (program, location, x, y), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y))
#define glProgramUniform2i64NV_defined
#endif
#ifndef glProgramUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform2i64vNV_defined
#endif
#ifndef glProgramUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64NV, (program, location, x, y), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y))
#define glProgramUniform2ui64NV_defined
#endif
#ifndef glProgramUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform2ui64vNV_defined
#endif
#ifndef glProgramUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64NV, (program, location, x, y, z), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glProgramUniform3i64NV_defined
#endif
#ifndef glProgramUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform3i64vNV_defined
#endif
#ifndef glProgramUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64NV, (program, location, x, y, z), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glProgramUniform3ui64NV_defined
#endif
#ifndef glProgramUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform3ui64vNV_defined
#endif
#ifndef glProgramUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glProgramUniform4i64NV_defined
#endif
#ifndef glProgramUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform4i64vNV_defined
#endif
#ifndef glProgramUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glProgramUniform4ui64NV_defined
#endif
#ifndef glProgramUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform4ui64vNV_defined
#endif
#ifndef glUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64NV, (location, x), (GLint location, GLint64EXT x))
#define glUniform1i64NV_defined
#endif
#ifndef glUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform1i64vNV_defined
#endif
#ifndef glUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64NV, (location, x), (GLint location, GLuint64EXT x))
#define glUniform1ui64NV_defined
#endif
#ifndef glUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform1ui64vNV_defined
#endif
#ifndef glUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64NV, (location, x, y), (GLint location, GLint64EXT x, GLint64EXT y))
#define glUniform2i64NV_defined
#endif
#ifndef glUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform2i64vNV_defined
#endif
#ifndef glUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64NV, (location, x, y), (GLint location, GLuint64EXT x, GLuint64EXT y))
#define glUniform2ui64NV_defined
#endif
#ifndef glUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform2ui64vNV_defined
#endif
#ifndef glUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64NV, (location, x, y, z), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glUniform3i64NV_defined
#endif
#ifndef glUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform3i64vNV_defined
#endif
#ifndef glUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64NV, (location, x, y, z), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glUniform3ui64NV_defined
#endif
#ifndef glUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform3ui64vNV_defined
#endif
#ifndef glUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64NV, (location, x, y, z, w), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glUniform4i64NV_defined
#endif
#ifndef glUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform4i64vNV_defined
#endif
#ifndef glUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64NV, (location, x, y, z, w), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glUniform4ui64NV_defined
#endif
#ifndef glUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform4ui64vNV_defined
#endif
#endif // defined(GL_AMD_gpu_shader_int64)
#if defined(GL_AMD_interleaved_elements)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribParameteriAMD, (index, pname, param), (GLuint index, GLenum pname, GLint param))
#define glVertexAttribParameteriAMD_defined
#endif // defined(GL_AMD_interleaved_elements)
#if defined(GL_AMD_multi_draw_indirect)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectAMD, (mode, indirect, primcount, stride), (GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride))
#define glMultiDrawArraysIndirectAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectAMD, (mode, type, indirect, primcount, stride), (GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride))
#define glMultiDrawElementsIndirectAMD_defined
#endif // defined(GL_AMD_multi_draw_indirect)
#if defined(GL_AMD_name_gen_delete)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteNamesAMD, (identifier, num, names), (GLenum identifier, GLuint num, const GLuint *names))
#define glDeleteNamesAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenNamesAMD, (identifier, num, names), (GLenum identifier, GLuint num, GLuint *names))
#define glGenNamesAMD_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsNameAMD, (identifier, name), (GLenum identifier, GLuint name))
#define glIsNameAMD_defined
#endif // defined(GL_AMD_name_gen_delete)
#if defined(GL_AMD_occlusion_query_event)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glQueryObjectParameteruiAMD, (target, id, pname, param), (GLenum target, GLuint id, GLenum pname, GLuint param))
#define glQueryObjectParameteruiAMD_defined
#endif // defined(GL_AMD_occlusion_query_event)
#if defined(GL_AMD_performance_monitor)
#ifndef glBeginPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginPerfMonitorAMD, (monitor), (GLuint monitor))
#define glBeginPerfMonitorAMD_defined
#endif
#ifndef glDeletePerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeletePerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glDeletePerfMonitorsAMD_defined
#endif
#ifndef glEndPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndPerfMonitorAMD, (monitor), (GLuint monitor))
#define glEndPerfMonitorAMD_defined
#endif
#ifndef glGenPerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenPerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glGenPerfMonitorsAMD_defined
#endif
#ifndef glGetPerfMonitorCounterDataAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCounterDataAMD, (monitor, pname, dataSize, data, bytesWritten), (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten))
#define glGetPerfMonitorCounterDataAMD_defined
#endif
#ifndef glGetPerfMonitorCounterInfoAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCounterInfoAMD, (group, counter, pname, data), (GLuint group, GLuint counter, GLenum pname, void *data))
#define glGetPerfMonitorCounterInfoAMD_defined
#endif
#ifndef glGetPerfMonitorCounterStringAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCounterStringAMD, (group, counter, bufSize, length, counterString), (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString))
#define glGetPerfMonitorCounterStringAMD_defined
#endif
#ifndef glGetPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorCountersAMD, (group, numCounters, maxActiveCounters, counterSize, counters), (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters))
#define glGetPerfMonitorCountersAMD_defined
#endif
#ifndef glGetPerfMonitorGroupStringAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorGroupStringAMD, (group, bufSize, length, groupString), (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString))
#define glGetPerfMonitorGroupStringAMD_defined
#endif
#ifndef glGetPerfMonitorGroupsAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfMonitorGroupsAMD, (numGroups, groupsSize, groups), (GLint *numGroups, GLsizei groupsSize, GLuint *groups))
#define glGetPerfMonitorGroupsAMD_defined
#endif
#ifndef glSelectPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSelectPerfMonitorCountersAMD, (monitor, enable, group, numCounters, counterList), (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList))
#define glSelectPerfMonitorCountersAMD_defined
#endif
#endif // defined(GL_AMD_performance_monitor)
#if defined(GL_AMD_sample_positions)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSetMultisamplefvAMD, (pname, index, val), (GLenum pname, GLuint index, const GLfloat *val))
#define glSetMultisamplefvAMD_defined
#endif // defined(GL_AMD_sample_positions)
#if defined(GL_AMD_sparse_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorageSparseAMD, (target, internalFormat, width, height, depth, layers, flags), (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags))
#define glTexStorageSparseAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorageSparseAMD, (texture, target, internalFormat, width, height, depth, layers, flags), (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags))
#define glTextureStorageSparseAMD_defined
#endif // defined(GL_AMD_sparse_texture)
#if defined(GL_AMD_stencil_operation_extended)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilOpValueAMD, (face, value), (GLenum face, GLuint value))
#define glStencilOpValueAMD_defined
#endif // defined(GL_AMD_stencil_operation_extended)
#if defined(GL_AMD_vertex_shader_tessellator)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTessellationFactorAMD, (factor), (GLfloat factor))
#define glTessellationFactorAMD_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTessellationModeAMD, (mode), (GLenum mode))
#define glTessellationModeAMD_defined
#endif // defined(GL_AMD_vertex_shader_tessellator)
#if defined(GL_APPLE_element_array)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementArrayAPPLE, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawElementArrayAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElementArrayAPPLE, (mode, start, end, first, count), (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count))
#define glDrawRangeElementArrayAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glElementPointerAPPLE, (type, pointer), (GLenum type, const void *pointer))
#define glElementPointerAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementArrayAPPLE, (mode, first, count, primcount), (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount))
#define glMultiDrawElementArrayAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawRangeElementArrayAPPLE, (mode, start, end, first, count, primcount), (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount))
#define glMultiDrawRangeElementArrayAPPLE_defined
#endif // defined(GL_APPLE_element_array)
#if defined(GL_APPLE_fence)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteFencesAPPLE, (n, fences), (GLsizei n, const GLuint *fences))
#define glDeleteFencesAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFinishFenceAPPLE, (fence), (GLuint fence))
#define glFinishFenceAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFinishObjectAPPLE, (object, name), (GLenum object, GLint name))
#define glFinishObjectAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenFencesAPPLE, (n, fences), (GLsizei n, GLuint *fences))
#define glGenFencesAPPLE_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsFenceAPPLE, (fence), (GLuint fence))
#define glIsFenceAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSetFenceAPPLE, (fence), (GLuint fence))
#define glSetFenceAPPLE_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glTestFenceAPPLE, (fence), (GLuint fence))
#define glTestFenceAPPLE_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glTestObjectAPPLE, (object, name), (GLenum object, GLuint name))
#define glTestObjectAPPLE_defined
#endif // defined(GL_APPLE_fence)
#if defined(GL_APPLE_flush_buffer_range)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferParameteriAPPLE, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glBufferParameteriAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedBufferRangeAPPLE, (target, offset, size), (GLenum target, GLintptr offset, GLsizeiptr size))
#define glFlushMappedBufferRangeAPPLE_defined
#endif // defined(GL_APPLE_flush_buffer_range)
#if defined(GL_APPLE_object_purgeable)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectParameterivAPPLE, (objectType, name, pname, params), (GLenum objectType, GLuint name, GLenum pname, GLint *params))
#define glGetObjectParameterivAPPLE_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glObjectPurgeableAPPLE, (objectType, name, option), (GLenum objectType, GLuint name, GLenum option))
#define glObjectPurgeableAPPLE_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glObjectUnpurgeableAPPLE, (objectType, name, option), (GLenum objectType, GLuint name, GLenum option))
#define glObjectUnpurgeableAPPLE_defined
#endif // defined(GL_APPLE_object_purgeable)
#if defined(GL_APPLE_texture_range)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterPointervAPPLE, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetTexParameterPointervAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureRangeAPPLE, (target, length, pointer), (GLenum target, GLsizei length, const void *pointer))
#define glTextureRangeAPPLE_defined
#endif // defined(GL_APPLE_texture_range)
#if defined(GL_APPLE_vertex_array_object)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexArrayAPPLE, (array), (GLuint array))
#define glBindVertexArrayAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteVertexArraysAPPLE, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArraysAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenVertexArraysAPPLE, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArraysAPPLE_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsVertexArrayAPPLE, (array), (GLuint array))
#define glIsVertexArrayAPPLE_defined
#endif // defined(GL_APPLE_vertex_array_object)
#if defined(GL_APPLE_vertex_array_range)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushVertexArrayRangeAPPLE, (length, pointer), (GLsizei length, void *pointer))
#define glFlushVertexArrayRangeAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayParameteriAPPLE, (pname, param), (GLenum pname, GLint param))
#define glVertexArrayParameteriAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayRangeAPPLE, (length, pointer), (GLsizei length, void *pointer))
#define glVertexArrayRangeAPPLE_defined
#endif // defined(GL_APPLE_vertex_array_range)
#if defined(GL_APPLE_vertex_program_evaluators)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexAttribAPPLE, (index, pname), (GLuint index, GLenum pname))
#define glDisableVertexAttribAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexAttribAPPLE, (index, pname), (GLuint index, GLenum pname))
#define glEnableVertexAttribAPPLE_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsVertexAttribEnabledAPPLE, (index, pname), (GLuint index, GLenum pname))
#define glIsVertexAttribEnabledAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapVertexAttrib1dAPPLE, (index, size, u1, u2, stride, order, points), (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points))
#define glMapVertexAttrib1dAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapVertexAttrib1fAPPLE, (index, size, u1, u2, stride, order, points), (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points))
#define glMapVertexAttrib1fAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapVertexAttrib2dAPPLE, (index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points), (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points))
#define glMapVertexAttrib2dAPPLE_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapVertexAttrib2fAPPLE, (index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points), (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points))
#define glMapVertexAttrib2fAPPLE_defined
#endif // defined(GL_APPLE_vertex_program_evaluators)
#if defined(GL_ARB_ES3_2_compatibility)
#ifndef glPrimitiveBoundingBoxARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrimitiveBoundingBoxARB, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBoxARB_defined
#endif
#endif // defined(GL_ARB_ES3_2_compatibility)
#if defined(GL_ARB_bindless_texture)
#ifndef glGetImageHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetImageHandleARB, (texture, level, layered, layer, format), (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))
#define glGetImageHandleARB_defined
#endif
#ifndef glGetTextureHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureHandleARB, (texture), (GLuint texture))
#define glGetTextureHandleARB_defined
#endif
#ifndef glGetTextureSamplerHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureSamplerHandleARB, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleARB_defined
#endif
#ifndef glGetVertexAttribLui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLui64vARB, (index, pname, params), (GLuint index, GLenum pname, GLuint64EXT *params))
#define glGetVertexAttribLui64vARB_defined
#endif
#ifndef glIsImageHandleResidentARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsImageHandleResidentARB, (handle), (GLuint64 handle))
#define glIsImageHandleResidentARB_defined
#endif
#ifndef glIsTextureHandleResidentARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTextureHandleResidentARB, (handle), (GLuint64 handle))
#define glIsTextureHandleResidentARB_defined
#endif
#ifndef glMakeImageHandleNonResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleNonResidentARB, (handle), (GLuint64 handle))
#define glMakeImageHandleNonResidentARB_defined
#endif
#ifndef glMakeImageHandleResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleResidentARB, (handle, access), (GLuint64 handle, GLenum access))
#define glMakeImageHandleResidentARB_defined
#endif
#ifndef glMakeTextureHandleNonResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleNonResidentARB, (handle), (GLuint64 handle))
#define glMakeTextureHandleNonResidentARB_defined
#endif
#ifndef glMakeTextureHandleResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleResidentARB, (handle), (GLuint64 handle))
#define glMakeTextureHandleResidentARB_defined
#endif
#ifndef glProgramUniformHandleui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64ARB, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64ARB_defined
#endif
#ifndef glProgramUniformHandleui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64vARB, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vARB_defined
#endif
#ifndef glUniformHandleui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64ARB, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64ARB_defined
#endif
#ifndef glUniformHandleui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vARB_defined
#endif
#ifndef glVertexAttribL1ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64ARB, (index, x), (GLuint index, GLuint64EXT x))
#define glVertexAttribL1ui64ARB_defined
#endif
#ifndef glVertexAttribL1ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64vARB, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL1ui64vARB_defined
#endif
#endif // defined(GL_ARB_bindless_texture)
#if defined(GL_ARB_cl_event)
#ifndef glCreateSyncFromCLeventARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLsync, APIENTRY, glCreateSyncFromCLeventARB, (context, event, flags), (struct _cl_context *context, struct _cl_event *event, GLbitfield flags))
#define glCreateSyncFromCLeventARB_defined
#endif
#endif // defined(GL_ARB_cl_event)
#if defined(GL_ARB_color_buffer_float)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClampColorARB, (target, clamp), (GLenum target, GLenum clamp))
#define glClampColorARB_defined
#endif // defined(GL_ARB_color_buffer_float)
#if defined(GL_ARB_compute_variable_group_size)
#ifndef glDispatchComputeGroupSizeARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchComputeGroupSizeARB, (num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z))
#define glDispatchComputeGroupSizeARB_defined
#endif
#endif // defined(GL_ARB_compute_variable_group_size)
#if defined(GL_ARB_debug_output)
#ifndef glDebugMessageCallbackARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageCallbackARB, (callback, userParam), (GLDEBUGPROCARB callback, const void *userParam))
#define glDebugMessageCallbackARB_defined
#endif
#ifndef glDebugMessageControlARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageControlARB, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControlARB_defined
#endif
#ifndef glDebugMessageInsertARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageInsertARB, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsertARB_defined
#endif
#ifndef glGetDebugMessageLogARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetDebugMessageLogARB, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLogARB_defined
#endif
#endif // defined(GL_ARB_debug_output)
#if defined(GL_ARB_draw_buffers)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawBuffersARB, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffersARB_defined
#endif // defined(GL_ARB_draw_buffers)
#if defined(GL_ARB_draw_buffers_blend)
#ifndef glBlendEquationSeparateiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparateiARB, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateiARB_defined
#endif
#ifndef glBlendEquationiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationiARB, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationiARB_defined
#endif
#ifndef glBlendFuncSeparateiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparateiARB, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateiARB_defined
#endif
#ifndef glBlendFunciARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunciARB, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunciARB_defined
#endif
#endif // defined(GL_ARB_draw_buffers_blend)
#if defined(GL_ARB_draw_instanced)
#ifndef glDrawArraysInstancedARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstancedARB, (mode, first, count, primcount), (GLenum mode, GLint first, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedARB_defined
#endif
#ifndef glDrawElementsInstancedARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedARB, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedARB_defined
#endif
#endif // defined(GL_ARB_draw_instanced)
#if defined(GL_ARB_fragment_program)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindProgramARB, (target, program), (GLenum target, GLuint program))
#define glBindProgramARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgramsARB, (n, programs), (GLsizei n, const GLuint *programs))
#define glDeleteProgramsARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenProgramsARB, (n, programs), (GLsizei n, GLuint *programs))
#define glGenProgramsARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramEnvParameterdvARB, (target, index, params), (GLenum target, GLuint index, GLdouble *params))
#define glGetProgramEnvParameterdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramEnvParameterfvARB, (target, index, params), (GLenum target, GLuint index, GLfloat *params))
#define glGetProgramEnvParameterfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramLocalParameterdvARB, (target, index, params), (GLenum target, GLuint index, GLdouble *params))
#define glGetProgramLocalParameterdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramLocalParameterfvARB, (target, index, params), (GLenum target, GLuint index, GLfloat *params))
#define glGetProgramLocalParameterfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramStringARB, (target, pname, string), (GLenum target, GLenum pname, void *string))
#define glGetProgramStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramivARB, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetProgramivARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgramARB, (program), (GLuint program))
#define glIsProgramARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameter4dARB, (target, index, x, y, z, w), (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glProgramEnvParameter4dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameter4dvARB, (target, index, params), (GLenum target, GLuint index, const GLdouble *params))
#define glProgramEnvParameter4dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameter4fARB, (target, index, x, y, z, w), (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glProgramEnvParameter4fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameter4fvARB, (target, index, params), (GLenum target, GLuint index, const GLfloat *params))
#define glProgramEnvParameter4fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameter4dARB, (target, index, x, y, z, w), (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glProgramLocalParameter4dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameter4dvARB, (target, index, params), (GLenum target, GLuint index, const GLdouble *params))
#define glProgramLocalParameter4dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameter4fARB, (target, index, x, y, z, w), (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glProgramLocalParameter4fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameter4fvARB, (target, index, params), (GLenum target, GLuint index, const GLfloat *params))
#define glProgramLocalParameter4fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramStringARB, (target, format, len, string), (GLenum target, GLenum format, GLsizei len, const void *string))
#define glProgramStringARB_defined
#endif // defined(GL_ARB_fragment_program)
#if defined(GL_ARB_geometry_shader4)
#ifndef glFramebufferTextureARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureARB, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTextureARB_defined
#endif
#ifndef glFramebufferTextureFaceARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureFaceARB, (target, attachment, texture, level, face), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face))
#define glFramebufferTextureFaceARB_defined
#endif
#ifndef glFramebufferTextureLayerARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureLayerARB, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayerARB_defined
#endif
#ifndef glProgramParameteriARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameteriARB, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteriARB_defined
#endif
#endif // defined(GL_ARB_geometry_shader4)
#if defined(GL_ARB_gl_spirv)
#ifndef glSpecializeShaderARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpecializeShaderARB, (shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue), (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue))
#define glSpecializeShaderARB_defined
#endif
#endif // defined(GL_ARB_gl_spirv)
#if defined(GL_ARB_gpu_shader_int64)
#ifndef glGetUniformi64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformi64vARB, (program, location, params), (GLuint program, GLint location, GLint64 *params))
#define glGetUniformi64vARB_defined
#endif
#ifndef glGetUniformui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformui64vARB, (program, location, params), (GLuint program, GLint location, GLuint64 *params))
#define glGetUniformui64vARB_defined
#endif
#ifndef glGetnUniformi64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformi64vARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint64 *params))
#define glGetnUniformi64vARB_defined
#endif
#ifndef glGetnUniformui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformui64vARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params))
#define glGetnUniformui64vARB_defined
#endif
#ifndef glProgramUniform1i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64ARB, (program, location, x), (GLuint program, GLint location, GLint64 x))
#define glProgramUniform1i64ARB_defined
#endif
#ifndef glProgramUniform1i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform1i64vARB_defined
#endif
#ifndef glProgramUniform1ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64ARB, (program, location, x), (GLuint program, GLint location, GLuint64 x))
#define glProgramUniform1ui64ARB_defined
#endif
#ifndef glProgramUniform1ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform1ui64vARB_defined
#endif
#ifndef glProgramUniform2i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64ARB, (program, location, x, y), (GLuint program, GLint location, GLint64 x, GLint64 y))
#define glProgramUniform2i64ARB_defined
#endif
#ifndef glProgramUniform2i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform2i64vARB_defined
#endif
#ifndef glProgramUniform2ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64ARB, (program, location, x, y), (GLuint program, GLint location, GLuint64 x, GLuint64 y))
#define glProgramUniform2ui64ARB_defined
#endif
#ifndef glProgramUniform2ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform2ui64vARB_defined
#endif
#ifndef glProgramUniform3i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64ARB, (program, location, x, y, z), (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z))
#define glProgramUniform3i64ARB_defined
#endif
#ifndef glProgramUniform3i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform3i64vARB_defined
#endif
#ifndef glProgramUniform3ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64ARB, (program, location, x, y, z), (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z))
#define glProgramUniform3ui64ARB_defined
#endif
#ifndef glProgramUniform3ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform3ui64vARB_defined
#endif
#ifndef glProgramUniform4i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64ARB, (program, location, x, y, z, w), (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w))
#define glProgramUniform4i64ARB_defined
#endif
#ifndef glProgramUniform4i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64 *value))
#define glProgramUniform4i64vARB_defined
#endif
#ifndef glProgramUniform4ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64ARB, (program, location, x, y, z, w), (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w))
#define glProgramUniform4ui64ARB_defined
#endif
#ifndef glProgramUniform4ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui64vARB, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64 *value))
#define glProgramUniform4ui64vARB_defined
#endif
#ifndef glUniform1i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64ARB, (location, x), (GLint location, GLint64 x))
#define glUniform1i64ARB_defined
#endif
#ifndef glUniform1i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform1i64vARB_defined
#endif
#ifndef glUniform1ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64ARB, (location, x), (GLint location, GLuint64 x))
#define glUniform1ui64ARB_defined
#endif
#ifndef glUniform1ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform1ui64vARB_defined
#endif
#ifndef glUniform2i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64ARB, (location, x, y), (GLint location, GLint64 x, GLint64 y))
#define glUniform2i64ARB_defined
#endif
#ifndef glUniform2i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform2i64vARB_defined
#endif
#ifndef glUniform2ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64ARB, (location, x, y), (GLint location, GLuint64 x, GLuint64 y))
#define glUniform2ui64ARB_defined
#endif
#ifndef glUniform2ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform2ui64vARB_defined
#endif
#ifndef glUniform3i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64ARB, (location, x, y, z), (GLint location, GLint64 x, GLint64 y, GLint64 z))
#define glUniform3i64ARB_defined
#endif
#ifndef glUniform3i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform3i64vARB_defined
#endif
#ifndef glUniform3ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64ARB, (location, x, y, z), (GLint location, GLuint64 x, GLuint64 y, GLuint64 z))
#define glUniform3ui64ARB_defined
#endif
#ifndef glUniform3ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform3ui64vARB_defined
#endif
#ifndef glUniform4i64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64ARB, (location, x, y, z, w), (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w))
#define glUniform4i64ARB_defined
#endif
#ifndef glUniform4i64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i64vARB, (location, count, value), (GLint location, GLsizei count, const GLint64 *value))
#define glUniform4i64vARB_defined
#endif
#ifndef glUniform4ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64ARB, (location, x, y, z, w), (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w))
#define glUniform4ui64ARB_defined
#endif
#ifndef glUniform4ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniform4ui64vARB_defined
#endif
#endif // defined(GL_ARB_gpu_shader_int64)
#if defined(GL_ARB_imaging)
#ifndef glColorSubTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorSubTable, (target, start, count, format, type, data), (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data))
#define glColorSubTable_defined
#endif
#ifndef glColorTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorTable, (target, internalformat, width, format, type, table), (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table))
#define glColorTable_defined
#endif
#ifndef glColorTableParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorTableParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glColorTableParameterfv_defined
#endif
#ifndef glColorTableParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorTableParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glColorTableParameteriv_defined
#endif
#ifndef glConvolutionFilter1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionFilter1D, (target, internalformat, width, format, type, image), (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image))
#define glConvolutionFilter1D_defined
#endif
#ifndef glConvolutionFilter2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionFilter2D, (target, internalformat, width, height, format, type, image), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image))
#define glConvolutionFilter2D_defined
#endif
#ifndef glConvolutionParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameterf, (target, pname, params), (GLenum target, GLenum pname, GLfloat params))
#define glConvolutionParameterf_defined
#endif
#ifndef glConvolutionParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glConvolutionParameterfv_defined
#endif
#ifndef glConvolutionParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameteri, (target, pname, params), (GLenum target, GLenum pname, GLint params))
#define glConvolutionParameteri_defined
#endif
#ifndef glConvolutionParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glConvolutionParameteriv_defined
#endif
#ifndef glCopyColorSubTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyColorSubTable, (target, start, x, y, width), (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width))
#define glCopyColorSubTable_defined
#endif
#ifndef glCopyColorTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyColorTable, (target, internalformat, x, y, width), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))
#define glCopyColorTable_defined
#endif
#ifndef glCopyConvolutionFilter1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyConvolutionFilter1D, (target, internalformat, x, y, width), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))
#define glCopyConvolutionFilter1D_defined
#endif
#ifndef glCopyConvolutionFilter2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyConvolutionFilter2D, (target, internalformat, x, y, width, height), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyConvolutionFilter2D_defined
#endif
#ifndef glGetColorTable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTable, (target, format, type, table), (GLenum target, GLenum format, GLenum type, void *table))
#define glGetColorTable_defined
#endif
#ifndef glGetColorTableParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetColorTableParameterfv_defined
#endif
#ifndef glGetColorTableParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetColorTableParameteriv_defined
#endif
#ifndef glGetConvolutionFilter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetConvolutionFilter, (target, format, type, image), (GLenum target, GLenum format, GLenum type, void *image))
#define glGetConvolutionFilter_defined
#endif
#ifndef glGetConvolutionParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetConvolutionParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetConvolutionParameterfv_defined
#endif
#ifndef glGetConvolutionParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetConvolutionParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetConvolutionParameteriv_defined
#endif
#ifndef glGetHistogram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetHistogram, (target, reset, format, type, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))
#define glGetHistogram_defined
#endif
#ifndef glGetHistogramParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetHistogramParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetHistogramParameterfv_defined
#endif
#ifndef glGetHistogramParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetHistogramParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetHistogramParameteriv_defined
#endif
#ifndef glGetMinmax_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMinmax, (target, reset, format, type, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))
#define glGetMinmax_defined
#endif
#ifndef glGetMinmaxParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMinmaxParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetMinmaxParameterfv_defined
#endif
#ifndef glGetMinmaxParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMinmaxParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetMinmaxParameteriv_defined
#endif
#ifndef glGetSeparableFilter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSeparableFilter, (target, format, type, row, column, span), (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span))
#define glGetSeparableFilter_defined
#endif
#ifndef glHistogram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glHistogram, (target, width, internalformat, sink), (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink))
#define glHistogram_defined
#endif
#ifndef glMinmax_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinmax, (target, internalformat, sink), (GLenum target, GLenum internalformat, GLboolean sink))
#define glMinmax_defined
#endif
#ifndef glResetHistogram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResetHistogram, (target), (GLenum target))
#define glResetHistogram_defined
#endif
#ifndef glResetMinmax_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResetMinmax, (target), (GLenum target))
#define glResetMinmax_defined
#endif
#ifndef glSeparableFilter2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSeparableFilter2D, (target, internalformat, width, height, format, type, row, column), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column))
#define glSeparableFilter2D_defined
#endif
#endif // defined(GL_ARB_imaging)
#if defined(GL_ARB_indirect_parameters)
#ifndef glMultiDrawArraysIndirectCountARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectCountARB, (mode, indirect, drawcount, maxdrawcount, stride), (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawArraysIndirectCountARB_defined
#endif
#ifndef glMultiDrawElementsIndirectCountARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectCountARB, (mode, type, indirect, drawcount, maxdrawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawElementsIndirectCountARB_defined
#endif
#endif // defined(GL_ARB_indirect_parameters)
#if defined(GL_ARB_instanced_arrays)
#ifndef glVertexAttribDivisorARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribDivisorARB, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorARB_defined
#endif
#endif // defined(GL_ARB_instanced_arrays)
#if defined(GL_ARB_matrix_palette)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCurrentPaletteMatrixARB, (index), (GLint index))
#define glCurrentPaletteMatrixARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixIndexPointerARB, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glMatrixIndexPointerARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixIndexubvARB, (size, indices), (GLint size, const GLubyte *indices))
#define glMatrixIndexubvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixIndexuivARB, (size, indices), (GLint size, const GLuint *indices))
#define glMatrixIndexuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixIndexusvARB, (size, indices), (GLint size, const GLushort *indices))
#define glMatrixIndexusvARB_defined
#endif // defined(GL_ARB_matrix_palette)
#if defined(GL_ARB_multisample)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleCoverageARB, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverageARB_defined
#endif // defined(GL_ARB_multisample)
#if defined(GL_ARB_multitexture)
#ifndef glActiveTextureARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveTextureARB, (texture), (GLenum texture))
#define glActiveTextureARB_defined
#endif
#ifndef glClientActiveTextureARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClientActiveTextureARB, (texture), (GLenum texture))
#define glClientActiveTextureARB_defined
#endif
#ifndef glMultiTexCoord1dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1dARB, (target, s), (GLenum target, GLdouble s))
#define glMultiTexCoord1dARB_defined
#endif
#ifndef glMultiTexCoord1dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord1dvARB_defined
#endif
#ifndef glMultiTexCoord1fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1fARB, (target, s), (GLenum target, GLfloat s))
#define glMultiTexCoord1fARB_defined
#endif
#ifndef glMultiTexCoord1fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord1fvARB_defined
#endif
#ifndef glMultiTexCoord1iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1iARB, (target, s), (GLenum target, GLint s))
#define glMultiTexCoord1iARB_defined
#endif
#ifndef glMultiTexCoord1ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord1ivARB_defined
#endif
#ifndef glMultiTexCoord1sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1sARB, (target, s), (GLenum target, GLshort s))
#define glMultiTexCoord1sARB_defined
#endif
#ifndef glMultiTexCoord1svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord1svARB_defined
#endif
#ifndef glMultiTexCoord2dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2dARB, (target, s, t), (GLenum target, GLdouble s, GLdouble t))
#define glMultiTexCoord2dARB_defined
#endif
#ifndef glMultiTexCoord2dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord2dvARB_defined
#endif
#ifndef glMultiTexCoord2fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2fARB, (target, s, t), (GLenum target, GLfloat s, GLfloat t))
#define glMultiTexCoord2fARB_defined
#endif
#ifndef glMultiTexCoord2fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord2fvARB_defined
#endif
#ifndef glMultiTexCoord2iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2iARB, (target, s, t), (GLenum target, GLint s, GLint t))
#define glMultiTexCoord2iARB_defined
#endif
#ifndef glMultiTexCoord2ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord2ivARB_defined
#endif
#ifndef glMultiTexCoord2sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2sARB, (target, s, t), (GLenum target, GLshort s, GLshort t))
#define glMultiTexCoord2sARB_defined
#endif
#ifndef glMultiTexCoord2svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord2svARB_defined
#endif
#ifndef glMultiTexCoord3dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3dARB, (target, s, t, r), (GLenum target, GLdouble s, GLdouble t, GLdouble r))
#define glMultiTexCoord3dARB_defined
#endif
#ifndef glMultiTexCoord3dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord3dvARB_defined
#endif
#ifndef glMultiTexCoord3fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3fARB, (target, s, t, r), (GLenum target, GLfloat s, GLfloat t, GLfloat r))
#define glMultiTexCoord3fARB_defined
#endif
#ifndef glMultiTexCoord3fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord3fvARB_defined
#endif
#ifndef glMultiTexCoord3iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3iARB, (target, s, t, r), (GLenum target, GLint s, GLint t, GLint r))
#define glMultiTexCoord3iARB_defined
#endif
#ifndef glMultiTexCoord3ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord3ivARB_defined
#endif
#ifndef glMultiTexCoord3sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3sARB, (target, s, t, r), (GLenum target, GLshort s, GLshort t, GLshort r))
#define glMultiTexCoord3sARB_defined
#endif
#ifndef glMultiTexCoord3svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord3svARB_defined
#endif
#ifndef glMultiTexCoord4dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4dARB, (target, s, t, r, q), (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q))
#define glMultiTexCoord4dARB_defined
#endif
#ifndef glMultiTexCoord4dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4dvARB, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord4dvARB_defined
#endif
#ifndef glMultiTexCoord4fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4fARB, (target, s, t, r, q), (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q))
#define glMultiTexCoord4fARB_defined
#endif
#ifndef glMultiTexCoord4fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4fvARB, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord4fvARB_defined
#endif
#ifndef glMultiTexCoord4iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4iARB, (target, s, t, r, q), (GLenum target, GLint s, GLint t, GLint r, GLint q))
#define glMultiTexCoord4iARB_defined
#endif
#ifndef glMultiTexCoord4ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4ivARB, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord4ivARB_defined
#endif
#ifndef glMultiTexCoord4sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4sARB, (target, s, t, r, q), (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q))
#define glMultiTexCoord4sARB_defined
#endif
#ifndef glMultiTexCoord4svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4svARB, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord4svARB_defined
#endif
#endif // defined(GL_ARB_multitexture)
#if defined(GL_ARB_occlusion_query)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginQueryARB, (target, id), (GLenum target, GLuint id))
#define glBeginQueryARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteQueriesARB, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueriesARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndQueryARB, (target), (GLenum target))
#define glEndQueryARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenQueriesARB, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueriesARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectivARB, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetQueryObjectivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectuivARB, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryivARB, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryivARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsQueryARB, (id), (GLuint id))
#define glIsQueryARB_defined
#endif // defined(GL_ARB_occlusion_query)
#if defined(GL_ARB_parallel_shader_compile)
#ifndef glMaxShaderCompilerThreadsARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMaxShaderCompilerThreadsARB, (count), (GLuint count))
#define glMaxShaderCompilerThreadsARB_defined
#endif
#endif // defined(GL_ARB_parallel_shader_compile)
#if defined(GL_ARB_point_parameters)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfARB, (pname, param), (GLenum pname, GLfloat param))
#define glPointParameterfARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfvARB, (pname, params), (GLenum pname, const GLfloat *params))
#define glPointParameterfvARB_defined
#endif // defined(GL_ARB_point_parameters)
#if defined(GL_ARB_robustness)
#ifndef glGetGraphicsResetStatusARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetGraphicsResetStatusARB, (), (void))
#define glGetGraphicsResetStatusARB_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnColorTableARB, (target, format, type, bufSize, table), (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table))
#define glGetnColorTableARB_defined
#ifndef glGetnCompressedTexImageARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnCompressedTexImageARB, (target, lod, bufSize, img), (GLenum target, GLint lod, GLsizei bufSize, void *img))
#define glGetnCompressedTexImageARB_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnConvolutionFilterARB, (target, format, type, bufSize, image), (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image))
#define glGetnConvolutionFilterARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnHistogramARB, (target, reset, format, type, bufSize, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))
#define glGetnHistogramARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMapdvARB, (target, query, bufSize, v), (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v))
#define glGetnMapdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMapfvARB, (target, query, bufSize, v), (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v))
#define glGetnMapfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMapivARB, (target, query, bufSize, v), (GLenum target, GLenum query, GLsizei bufSize, GLint *v))
#define glGetnMapivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMinmaxARB, (target, reset, format, type, bufSize, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))
#define glGetnMinmaxARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPixelMapfvARB, (map, bufSize, values), (GLenum map, GLsizei bufSize, GLfloat *values))
#define glGetnPixelMapfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPixelMapuivARB, (map, bufSize, values), (GLenum map, GLsizei bufSize, GLuint *values))
#define glGetnPixelMapuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPixelMapusvARB, (map, bufSize, values), (GLenum map, GLsizei bufSize, GLushort *values))
#define glGetnPixelMapusvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPolygonStippleARB, (bufSize, pattern), (GLsizei bufSize, GLubyte *pattern))
#define glGetnPolygonStippleARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnSeparableFilterARB, (target, format, type, rowBufSize, row, columnBufSize, column, span), (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span))
#define glGetnSeparableFilterARB_defined
#ifndef glGetnTexImageARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnTexImageARB, (target, level, format, type, bufSize, img), (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img))
#define glGetnTexImageARB_defined
#endif
#ifndef glGetnUniformdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformdvARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLdouble *params))
#define glGetnUniformdvARB_defined
#endif
#ifndef glGetnUniformfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformfvARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfvARB_defined
#endif
#ifndef glGetnUniformivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformivARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformivARB_defined
#endif
#ifndef glGetnUniformuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformuivARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuivARB_defined
#endif
#ifndef glReadnPixelsARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadnPixelsARB, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixelsARB_defined
#endif
#endif // defined(GL_ARB_robustness)
#if defined(GL_ARB_sample_locations)
#ifndef glEvaluateDepthValuesARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEvaluateDepthValuesARB, (), (void))
#define glEvaluateDepthValuesARB_defined
#endif
#ifndef glFramebufferSampleLocationsfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferSampleLocationsfvARB, (target, start, count, v), (GLenum target, GLuint start, GLsizei count, const GLfloat *v))
#define glFramebufferSampleLocationsfvARB_defined
#endif
#ifndef glNamedFramebufferSampleLocationsfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferSampleLocationsfvARB, (framebuffer, start, count, v), (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))
#define glNamedFramebufferSampleLocationsfvARB_defined
#endif
#endif // defined(GL_ARB_sample_locations)
#if defined(GL_ARB_sample_shading)
#ifndef glMinSampleShadingARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinSampleShadingARB, (value), (GLfloat value))
#define glMinSampleShadingARB_defined
#endif
#endif // defined(GL_ARB_sample_shading)
#if defined(GL_ARB_shader_objects)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAttachObjectARB, (containerObj, obj), (GLhandleARB containerObj, GLhandleARB obj))
#define glAttachObjectARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileShaderARB, (shaderObj), (GLhandleARB shaderObj))
#define glCompileShaderARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLhandleARB, APIENTRY, glCreateProgramObjectARB, (), (void))
#define glCreateProgramObjectARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLhandleARB, APIENTRY, glCreateShaderObjectARB, (shaderType), (GLenum shaderType))
#define glCreateShaderObjectARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteObjectARB, (obj), (GLhandleARB obj))
#define glDeleteObjectARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDetachObjectARB, (containerObj, attachedObj), (GLhandleARB containerObj, GLhandleARB attachedObj))
#define glDetachObjectARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformARB, (programObj, index, maxLength, length, size, type, name), (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name))
#define glGetActiveUniformARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetAttachedObjectsARB, (containerObj, maxCount, count, obj), (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj))
#define glGetAttachedObjectsARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLhandleARB, APIENTRY, glGetHandleARB, (pname), (GLenum pname))
#define glGetHandleARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInfoLogARB, (obj, maxLength, length, infoLog), (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog))
#define glGetInfoLogARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectParameterfvARB, (obj, pname, params), (GLhandleARB obj, GLenum pname, GLfloat *params))
#define glGetObjectParameterfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectParameterivARB, (obj, pname, params), (GLhandleARB obj, GLenum pname, GLint *params))
#define glGetObjectParameterivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderSourceARB, (obj, maxLength, length, source), (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source))
#define glGetShaderSourceARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetUniformLocationARB, (programObj, name), (GLhandleARB programObj, const GLcharARB *name))
#define glGetUniformLocationARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformfvARB, (programObj, location, params), (GLhandleARB programObj, GLint location, GLfloat *params))
#define glGetUniformfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformivARB, (programObj, location, params), (GLhandleARB programObj, GLint location, GLint *params))
#define glGetUniformivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLinkProgramARB, (programObj), (GLhandleARB programObj))
#define glLinkProgramARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderSourceARB, (shaderObj, count, string, length), (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length))
#define glShaderSourceARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1fARB, (location, v0), (GLint location, GLfloat v0))
#define glUniform1fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1fvARB, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1iARB, (location, v0), (GLint location, GLint v0))
#define glUniform1iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ivARB, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2fARB, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2fvARB, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2iARB, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ivARB, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3fARB, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3fvARB, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3iARB, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ivARB, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4fARB, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4fvARB, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4iARB, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ivARB, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2fvARB, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3fvARB, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4fvARB, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseProgramObjectARB, (programObj), (GLhandleARB programObj))
#define glUseProgramObjectARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glValidateProgramARB, (programObj), (GLhandleARB programObj))
#define glValidateProgramARB_defined
#endif // defined(GL_ARB_shader_objects)
#if defined(GL_ARB_shading_language_include)
#ifndef glCompileShaderIncludeARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileShaderIncludeARB, (shader, count, path, length), (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length))
#define glCompileShaderIncludeARB_defined
#endif
#ifndef glDeleteNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteNamedStringARB, (namelen, name), (GLint namelen, const GLchar *name))
#define glDeleteNamedStringARB_defined
#endif
#ifndef glGetNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedStringARB, (namelen, name, bufSize, stringlen, string), (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string))
#define glGetNamedStringARB_defined
#endif
#ifndef glGetNamedStringivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedStringivARB, (namelen, name, pname, params), (GLint namelen, const GLchar *name, GLenum pname, GLint *params))
#define glGetNamedStringivARB_defined
#endif
#ifndef glIsNamedStringARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsNamedStringARB, (namelen, name), (GLint namelen, const GLchar *name))
#define glIsNamedStringARB_defined
#endif
#ifndef glNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedStringARB, (type, namelen, name, stringlen, string), (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string))
#define glNamedStringARB_defined
#endif
#endif // defined(GL_ARB_shading_language_include)
#if defined(GL_ARB_sparse_buffer)
#ifndef glBufferPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferPageCommitmentARB, (target, offset, size, commit), (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit))
#define glBufferPageCommitmentARB_defined
#endif
#ifndef glNamedBufferPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferPageCommitmentARB, (buffer, offset, size, commit), (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit))
#define glNamedBufferPageCommitmentARB_defined
#endif
#ifndef glNamedBufferPageCommitmentEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferPageCommitmentEXT, (buffer, offset, size, commit), (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit))
#define glNamedBufferPageCommitmentEXT_defined
#endif
#endif // defined(GL_ARB_sparse_buffer)
#if defined(GL_ARB_sparse_texture)
#ifndef glTexPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexPageCommitmentARB, (target, level, xoffset, yoffset, zoffset, width, height, depth, commit), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit))
#define glTexPageCommitmentARB_defined
#endif
#endif // defined(GL_ARB_sparse_texture)
#if defined(GL_ARB_texture_buffer_object)
#ifndef glTexBufferARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBufferARB, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBufferARB_defined
#endif
#endif // defined(GL_ARB_texture_buffer_object)
#if defined(GL_ARB_texture_compression)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage1DARB, (target, level, internalformat, width, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage1DARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage2DARB, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2DARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage3DARB, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3DARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage1DARB, (target, level, xoffset, width, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage1DARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage2DARB, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2DARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage3DARB, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3DARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTexImageARB, (target, level, img), (GLenum target, GLint level, void *img))
#define glGetCompressedTexImageARB_defined
#endif // defined(GL_ARB_texture_compression)
#if defined(GL_ARB_transpose_matrix)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadTransposeMatrixdARB, (m), (const GLdouble *m))
#define glLoadTransposeMatrixdARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadTransposeMatrixfARB, (m), (const GLfloat *m))
#define glLoadTransposeMatrixfARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultTransposeMatrixdARB, (m), (const GLdouble *m))
#define glMultTransposeMatrixdARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultTransposeMatrixfARB, (m), (const GLfloat *m))
#define glMultTransposeMatrixfARB_defined
#endif // defined(GL_ARB_transpose_matrix)
#if defined(GL_ARB_vertex_blend)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexBlendARB, (count), (GLint count))
#define glVertexBlendARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightPointerARB, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glWeightPointerARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightbvARB, (size, weights), (GLint size, const GLbyte *weights))
#define glWeightbvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightdvARB, (size, weights), (GLint size, const GLdouble *weights))
#define glWeightdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightfvARB, (size, weights), (GLint size, const GLfloat *weights))
#define glWeightfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightivARB, (size, weights), (GLint size, const GLint *weights))
#define glWeightivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightsvARB, (size, weights), (GLint size, const GLshort *weights))
#define glWeightsvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightubvARB, (size, weights), (GLint size, const GLubyte *weights))
#define glWeightubvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightuivARB, (size, weights), (GLint size, const GLuint *weights))
#define glWeightuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightusvARB, (size, weights), (GLint size, const GLushort *weights))
#define glWeightusvARB_defined
#endif // defined(GL_ARB_vertex_blend)
#if defined(GL_ARB_vertex_buffer_object)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferARB, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBufferARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferDataARB, (target, size, data, usage), (GLenum target, GLsizeiptrARB size, const void *data, GLenum usage))
#define glBufferDataARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferSubDataARB, (target, offset, size, data), (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data))
#define glBufferSubDataARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteBuffersARB, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffersARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenBuffersARB, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffersARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameterivARB, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameterivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferPointervARB, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointervARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferSubDataARB, (target, offset, size, data), (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data))
#define glGetBufferSubDataARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsBufferARB, (buffer), (GLuint buffer))
#define glIsBufferARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapBufferARB, (target, access), (GLenum target, GLenum access))
#define glMapBufferARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapBufferARB, (target), (GLenum target))
#define glUnmapBufferARB_defined
#endif // defined(GL_ARB_vertex_buffer_object)
#if defined(GL_ARB_vertex_program)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexAttribArrayARB, (index), (GLuint index))
#define glDisableVertexAttribArrayARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexAttribArrayARB, (index), (GLuint index))
#define glEnableVertexAttribArrayARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribPointervARB, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointervARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribdvARB, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribfvARB, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribivARB, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1dARB, (index, x), (GLuint index, GLdouble x))
#define glVertexAttrib1dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1dvARB, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib1dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1fARB, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1fvARB, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1sARB, (index, x), (GLuint index, GLshort x))
#define glVertexAttrib1sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1svARB, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib1svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2dARB, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttrib2dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2dvARB, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib2dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2fARB, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2fvARB, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2sARB, (index, x, y), (GLuint index, GLshort x, GLshort y))
#define glVertexAttrib2sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2svARB, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib2svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3dARB, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttrib3dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3dvARB, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib3dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3fARB, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3fvARB, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3sARB, (index, x, y, z), (GLuint index, GLshort x, GLshort y, GLshort z))
#define glVertexAttrib3sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3svARB, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib3svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4NbvARB, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4NbvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4NivARB, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4NivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4NsvARB, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4NsvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4NubARB, (index, x, y, z, w), (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))
#define glVertexAttrib4NubARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4NubvARB, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4NubvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4NuivARB, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4NuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4NusvARB, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4NusvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4bvARB, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4bvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4dARB, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttrib4dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4dvARB, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib4dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4fARB, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4fvARB, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4ivARB, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4sARB, (index, x, y, z, w), (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertexAttrib4sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4svARB, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4ubvARB, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4ubvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4uivARB, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4uivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4usvARB, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4usvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribPointerARB, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointerARB_defined
#endif // defined(GL_ARB_vertex_program)
#if defined(GL_ARB_vertex_shader)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindAttribLocationARB, (programObj, index, name), (GLhandleARB programObj, GLuint index, const GLcharARB *name))
#define glBindAttribLocationARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveAttribARB, (programObj, index, maxLength, length, size, type, name), (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name))
#define glGetActiveAttribARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetAttribLocationARB, (programObj, name), (GLhandleARB programObj, const GLcharARB *name))
#define glGetAttribLocationARB_defined
#endif // defined(GL_ARB_vertex_shader)
#if defined(GL_ARB_window_pos)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2dARB, (x, y), (GLdouble x, GLdouble y))
#define glWindowPos2dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2dvARB, (v), (const GLdouble *v))
#define glWindowPos2dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2fARB, (x, y), (GLfloat x, GLfloat y))
#define glWindowPos2fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2fvARB, (v), (const GLfloat *v))
#define glWindowPos2fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2iARB, (x, y), (GLint x, GLint y))
#define glWindowPos2iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2ivARB, (v), (const GLint *v))
#define glWindowPos2ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2sARB, (x, y), (GLshort x, GLshort y))
#define glWindowPos2sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2svARB, (v), (const GLshort *v))
#define glWindowPos2svARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3dARB, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glWindowPos3dARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3dvARB, (v), (const GLdouble *v))
#define glWindowPos3dvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3fARB, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glWindowPos3fARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3fvARB, (v), (const GLfloat *v))
#define glWindowPos3fvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3iARB, (x, y, z), (GLint x, GLint y, GLint z))
#define glWindowPos3iARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3ivARB, (v), (const GLint *v))
#define glWindowPos3ivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3sARB, (x, y, z), (GLshort x, GLshort y, GLshort z))
#define glWindowPos3sARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3svARB, (v), (const GLshort *v))
#define glWindowPos3svARB_defined
#endif // defined(GL_ARB_window_pos)
#if defined(GL_ATI_draw_buffers)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawBuffersATI, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffersATI_defined
#endif // defined(GL_ATI_draw_buffers)
#if defined(GL_ATI_element_array)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementArrayATI, (mode, count), (GLenum mode, GLsizei count))
#define glDrawElementArrayATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElementArrayATI, (mode, start, end, count), (GLenum mode, GLuint start, GLuint end, GLsizei count))
#define glDrawRangeElementArrayATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glElementPointerATI, (type, pointer), (GLenum type, const void *pointer))
#define glElementPointerATI_defined
#endif // defined(GL_ATI_element_array)
#if defined(GL_ATI_envmap_bumpmap)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexBumpParameterfvATI, (pname, param), (GLenum pname, GLfloat *param))
#define glGetTexBumpParameterfvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexBumpParameterivATI, (pname, param), (GLenum pname, GLint *param))
#define glGetTexBumpParameterivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBumpParameterfvATI, (pname, param), (GLenum pname, const GLfloat *param))
#define glTexBumpParameterfvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBumpParameterivATI, (pname, param), (GLenum pname, const GLint *param))
#define glTexBumpParameterivATI_defined
#endif // defined(GL_ATI_envmap_bumpmap)
#if defined(GL_ATI_fragment_shader)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAlphaFragmentOp1ATI, (op, dst, dstMod, arg1, arg1Rep, arg1Mod), (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod))
#define glAlphaFragmentOp1ATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAlphaFragmentOp2ATI, (op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod), (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod))
#define glAlphaFragmentOp2ATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAlphaFragmentOp3ATI, (op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod), (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod))
#define glAlphaFragmentOp3ATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginFragmentShaderATI, (), (void))
#define glBeginFragmentShaderATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragmentShaderATI, (id), (GLuint id))
#define glBindFragmentShaderATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorFragmentOp1ATI, (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod), (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod))
#define glColorFragmentOp1ATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorFragmentOp2ATI, (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod), (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod))
#define glColorFragmentOp2ATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorFragmentOp3ATI, (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod), (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod))
#define glColorFragmentOp3ATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteFragmentShaderATI, (id), (GLuint id))
#define glDeleteFragmentShaderATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndFragmentShaderATI, (), (void))
#define glEndFragmentShaderATI_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGenFragmentShadersATI, (range), (GLuint range))
#define glGenFragmentShadersATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPassTexCoordATI, (dst, coord, swizzle), (GLuint dst, GLuint coord, GLenum swizzle))
#define glPassTexCoordATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleMapATI, (dst, interp, swizzle), (GLuint dst, GLuint interp, GLenum swizzle))
#define glSampleMapATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSetFragmentShaderConstantATI, (dst, value), (GLuint dst, const GLfloat *value))
#define glSetFragmentShaderConstantATI_defined
#endif // defined(GL_ATI_fragment_shader)
#if defined(GL_ATI_map_object_buffer)
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapObjectBufferATI, (buffer), (GLuint buffer))
#define glMapObjectBufferATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUnmapObjectBufferATI, (buffer), (GLuint buffer))
#define glUnmapObjectBufferATI_defined
#endif // defined(GL_ATI_map_object_buffer)
#if defined(GL_ATI_pn_triangles)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPNTrianglesfATI, (pname, param), (GLenum pname, GLfloat param))
#define glPNTrianglesfATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPNTrianglesiATI, (pname, param), (GLenum pname, GLint param))
#define glPNTrianglesiATI_defined
#endif // defined(GL_ATI_pn_triangles)
#if defined(GL_ATI_separate_stencil)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFuncSeparateATI, (frontfunc, backfunc, ref, mask), (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask))
#define glStencilFuncSeparateATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilOpSeparateATI, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparateATI_defined
#endif // defined(GL_ATI_separate_stencil)
#if defined(GL_ATI_vertex_array_object)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glArrayObjectATI, (array, size, type, stride, buffer, offset), (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset))
#define glArrayObjectATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFreeObjectBufferATI, (buffer), (GLuint buffer))
#define glFreeObjectBufferATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetArrayObjectfvATI, (array, pname, params), (GLenum array, GLenum pname, GLfloat *params))
#define glGetArrayObjectfvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetArrayObjectivATI, (array, pname, params), (GLenum array, GLenum pname, GLint *params))
#define glGetArrayObjectivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectBufferfvATI, (buffer, pname, params), (GLuint buffer, GLenum pname, GLfloat *params))
#define glGetObjectBufferfvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectBufferivATI, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint *params))
#define glGetObjectBufferivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVariantArrayObjectfvATI, (id, pname, params), (GLuint id, GLenum pname, GLfloat *params))
#define glGetVariantArrayObjectfvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVariantArrayObjectivATI, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetVariantArrayObjectivATI_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsObjectBufferATI, (buffer), (GLuint buffer))
#define glIsObjectBufferATI_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glNewObjectBufferATI, (size, pointer, usage), (GLsizei size, const void *pointer, GLenum usage))
#define glNewObjectBufferATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUpdateObjectBufferATI, (buffer, offset, size, pointer, preserve), (GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve))
#define glUpdateObjectBufferATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantArrayObjectATI, (id, type, stride, buffer, offset), (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset))
#define glVariantArrayObjectATI_defined
#endif // defined(GL_ATI_vertex_array_object)
#if defined(GL_ATI_vertex_attrib_array_object)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribArrayObjectfvATI, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribArrayObjectfvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribArrayObjectivATI, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribArrayObjectivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribArrayObjectATI, (index, size, type, normalized, stride, buffer, offset), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset))
#define glVertexAttribArrayObjectATI_defined
#endif // defined(GL_ATI_vertex_attrib_array_object)
#if defined(GL_ATI_vertex_streams)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClientActiveVertexStreamATI, (stream), (GLenum stream))
#define glClientActiveVertexStreamATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3bATI, (stream, nx, ny, nz), (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz))
#define glNormalStream3bATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3bvATI, (stream, coords), (GLenum stream, const GLbyte *coords))
#define glNormalStream3bvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3dATI, (stream, nx, ny, nz), (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz))
#define glNormalStream3dATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3dvATI, (stream, coords), (GLenum stream, const GLdouble *coords))
#define glNormalStream3dvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3fATI, (stream, nx, ny, nz), (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz))
#define glNormalStream3fATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3fvATI, (stream, coords), (GLenum stream, const GLfloat *coords))
#define glNormalStream3fvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3iATI, (stream, nx, ny, nz), (GLenum stream, GLint nx, GLint ny, GLint nz))
#define glNormalStream3iATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3ivATI, (stream, coords), (GLenum stream, const GLint *coords))
#define glNormalStream3ivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3sATI, (stream, nx, ny, nz), (GLenum stream, GLshort nx, GLshort ny, GLshort nz))
#define glNormalStream3sATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalStream3svATI, (stream, coords), (GLenum stream, const GLshort *coords))
#define glNormalStream3svATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexBlendEnvfATI, (pname, param), (GLenum pname, GLfloat param))
#define glVertexBlendEnvfATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexBlendEnviATI, (pname, param), (GLenum pname, GLint param))
#define glVertexBlendEnviATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1dATI, (stream, x), (GLenum stream, GLdouble x))
#define glVertexStream1dATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1dvATI, (stream, coords), (GLenum stream, const GLdouble *coords))
#define glVertexStream1dvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1fATI, (stream, x), (GLenum stream, GLfloat x))
#define glVertexStream1fATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1fvATI, (stream, coords), (GLenum stream, const GLfloat *coords))
#define glVertexStream1fvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1iATI, (stream, x), (GLenum stream, GLint x))
#define glVertexStream1iATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1ivATI, (stream, coords), (GLenum stream, const GLint *coords))
#define glVertexStream1ivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1sATI, (stream, x), (GLenum stream, GLshort x))
#define glVertexStream1sATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream1svATI, (stream, coords), (GLenum stream, const GLshort *coords))
#define glVertexStream1svATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2dATI, (stream, x, y), (GLenum stream, GLdouble x, GLdouble y))
#define glVertexStream2dATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2dvATI, (stream, coords), (GLenum stream, const GLdouble *coords))
#define glVertexStream2dvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2fATI, (stream, x, y), (GLenum stream, GLfloat x, GLfloat y))
#define glVertexStream2fATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2fvATI, (stream, coords), (GLenum stream, const GLfloat *coords))
#define glVertexStream2fvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2iATI, (stream, x, y), (GLenum stream, GLint x, GLint y))
#define glVertexStream2iATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2ivATI, (stream, coords), (GLenum stream, const GLint *coords))
#define glVertexStream2ivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2sATI, (stream, x, y), (GLenum stream, GLshort x, GLshort y))
#define glVertexStream2sATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream2svATI, (stream, coords), (GLenum stream, const GLshort *coords))
#define glVertexStream2svATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3dATI, (stream, x, y, z), (GLenum stream, GLdouble x, GLdouble y, GLdouble z))
#define glVertexStream3dATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3dvATI, (stream, coords), (GLenum stream, const GLdouble *coords))
#define glVertexStream3dvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3fATI, (stream, x, y, z), (GLenum stream, GLfloat x, GLfloat y, GLfloat z))
#define glVertexStream3fATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3fvATI, (stream, coords), (GLenum stream, const GLfloat *coords))
#define glVertexStream3fvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3iATI, (stream, x, y, z), (GLenum stream, GLint x, GLint y, GLint z))
#define glVertexStream3iATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3ivATI, (stream, coords), (GLenum stream, const GLint *coords))
#define glVertexStream3ivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3sATI, (stream, x, y, z), (GLenum stream, GLshort x, GLshort y, GLshort z))
#define glVertexStream3sATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream3svATI, (stream, coords), (GLenum stream, const GLshort *coords))
#define glVertexStream3svATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4dATI, (stream, x, y, z, w), (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexStream4dATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4dvATI, (stream, coords), (GLenum stream, const GLdouble *coords))
#define glVertexStream4dvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4fATI, (stream, x, y, z, w), (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexStream4fATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4fvATI, (stream, coords), (GLenum stream, const GLfloat *coords))
#define glVertexStream4fvATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4iATI, (stream, x, y, z, w), (GLenum stream, GLint x, GLint y, GLint z, GLint w))
#define glVertexStream4iATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4ivATI, (stream, coords), (GLenum stream, const GLint *coords))
#define glVertexStream4ivATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4sATI, (stream, x, y, z, w), (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertexStream4sATI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexStream4svATI, (stream, coords), (GLenum stream, const GLshort *coords))
#define glVertexStream4svATI_defined
#endif // defined(GL_ATI_vertex_streams)
#if defined(GL_EXT_EGL_image_storage)
#ifndef glEGLImageTargetTexStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEGLImageTargetTexStorageEXT, (target, image, attrib_list), (GLenum target, GLeglImageOES image, const GLint* attrib_list))
#define glEGLImageTargetTexStorageEXT_defined
#endif
#ifndef glEGLImageTargetTextureStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEGLImageTargetTextureStorageEXT, (texture, image, attrib_list), (GLuint texture, GLeglImageOES image, const GLint* attrib_list))
#define glEGLImageTargetTextureStorageEXT_defined
#endif
#endif // defined(GL_EXT_EGL_image_storage)
#if defined(GL_EXT_bindable_uniform)
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetUniformBufferSizeEXT, (program, location), (GLuint program, GLint location))
#define glGetUniformBufferSizeEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLintptr, APIENTRY, glGetUniformOffsetEXT, (program, location), (GLuint program, GLint location))
#define glGetUniformOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformBufferEXT, (program, location, buffer), (GLuint program, GLint location, GLuint buffer))
#define glUniformBufferEXT_defined
#endif // defined(GL_EXT_bindable_uniform)
#if defined(GL_EXT_blend_color)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendColorEXT, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColorEXT_defined
#endif // defined(GL_EXT_blend_color)
#if defined(GL_EXT_blend_equation_separate)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparateEXT, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateEXT_defined
#endif // defined(GL_EXT_blend_equation_separate)
#if defined(GL_EXT_blend_func_separate)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparateEXT, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparateEXT_defined
#endif // defined(GL_EXT_blend_func_separate)
#if defined(GL_EXT_blend_minmax)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationEXT, (mode), (GLenum mode))
#define glBlendEquationEXT_defined
#endif // defined(GL_EXT_blend_minmax)
#if defined(GL_EXT_color_subtable)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorSubTableEXT, (target, start, count, format, type, data), (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data))
#define glColorSubTableEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyColorSubTableEXT, (target, start, x, y, width), (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width))
#define glCopyColorSubTableEXT_defined
#endif // defined(GL_EXT_color_subtable)
#if defined(GL_EXT_compiled_vertex_array)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLockArraysEXT, (first, count), (GLint first, GLsizei count))
#define glLockArraysEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUnlockArraysEXT, (), (void))
#define glUnlockArraysEXT_defined
#endif // defined(GL_EXT_compiled_vertex_array)
#if defined(GL_EXT_convolution)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionFilter1DEXT, (target, internalformat, width, format, type, image), (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image))
#define glConvolutionFilter1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionFilter2DEXT, (target, internalformat, width, height, format, type, image), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image))
#define glConvolutionFilter2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameterfEXT, (target, pname, params), (GLenum target, GLenum pname, GLfloat params))
#define glConvolutionParameterfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameterfvEXT, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glConvolutionParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameteriEXT, (target, pname, params), (GLenum target, GLenum pname, GLint params))
#define glConvolutionParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glConvolutionParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyConvolutionFilter1DEXT, (target, internalformat, x, y, width), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))
#define glCopyConvolutionFilter1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyConvolutionFilter2DEXT, (target, internalformat, x, y, width, height), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyConvolutionFilter2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetConvolutionFilterEXT, (target, format, type, image), (GLenum target, GLenum format, GLenum type, void *image))
#define glGetConvolutionFilterEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetConvolutionParameterfvEXT, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetConvolutionParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetConvolutionParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetConvolutionParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSeparableFilterEXT, (target, format, type, row, column, span), (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span))
#define glGetSeparableFilterEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSeparableFilter2DEXT, (target, internalformat, width, height, format, type, row, column), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column))
#define glSeparableFilter2DEXT_defined
#endif // defined(GL_EXT_convolution)
#if defined(GL_EXT_coordinate_frame)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3bEXT, (bx, by, bz), (GLbyte bx, GLbyte by, GLbyte bz))
#define glBinormal3bEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3bvEXT, (v), (const GLbyte *v))
#define glBinormal3bvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3dEXT, (bx, by, bz), (GLdouble bx, GLdouble by, GLdouble bz))
#define glBinormal3dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3dvEXT, (v), (const GLdouble *v))
#define glBinormal3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3fEXT, (bx, by, bz), (GLfloat bx, GLfloat by, GLfloat bz))
#define glBinormal3fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3fvEXT, (v), (const GLfloat *v))
#define glBinormal3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3iEXT, (bx, by, bz), (GLint bx, GLint by, GLint bz))
#define glBinormal3iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3ivEXT, (v), (const GLint *v))
#define glBinormal3ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3sEXT, (bx, by, bz), (GLshort bx, GLshort by, GLshort bz))
#define glBinormal3sEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormal3svEXT, (v), (const GLshort *v))
#define glBinormal3svEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBinormalPointerEXT, (type, stride, pointer), (GLenum type, GLsizei stride, const void *pointer))
#define glBinormalPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3bEXT, (tx, ty, tz), (GLbyte tx, GLbyte ty, GLbyte tz))
#define glTangent3bEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3bvEXT, (v), (const GLbyte *v))
#define glTangent3bvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3dEXT, (tx, ty, tz), (GLdouble tx, GLdouble ty, GLdouble tz))
#define glTangent3dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3dvEXT, (v), (const GLdouble *v))
#define glTangent3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3fEXT, (tx, ty, tz), (GLfloat tx, GLfloat ty, GLfloat tz))
#define glTangent3fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3fvEXT, (v), (const GLfloat *v))
#define glTangent3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3iEXT, (tx, ty, tz), (GLint tx, GLint ty, GLint tz))
#define glTangent3iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3ivEXT, (v), (const GLint *v))
#define glTangent3ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3sEXT, (tx, ty, tz), (GLshort tx, GLshort ty, GLshort tz))
#define glTangent3sEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangent3svEXT, (v), (const GLshort *v))
#define glTangent3svEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTangentPointerEXT, (type, stride, pointer), (GLenum type, GLsizei stride, const void *pointer))
#define glTangentPointerEXT_defined
#endif // defined(GL_EXT_coordinate_frame)
#if defined(GL_EXT_copy_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexImage1DEXT, (target, level, internalformat, x, y, width, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyTexImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexImage2DEXT, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage1DEXT, (target, level, xoffset, x, y, width), (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage2DEXT, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage3DEXT, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3DEXT_defined
#endif // defined(GL_EXT_copy_texture)
#if defined(GL_EXT_cull_vertex)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCullParameterdvEXT, (pname, params), (GLenum pname, GLdouble *params))
#define glCullParameterdvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCullParameterfvEXT, (pname, params), (GLenum pname, GLfloat *params))
#define glCullParameterfvEXT_defined
#endif // defined(GL_EXT_cull_vertex)
#if defined(GL_EXT_debug_label)
#ifndef glGetObjectLabelEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectLabelEXT, (type, object, bufSize, length, label), (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabelEXT_defined
#endif
#ifndef glLabelObjectEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLabelObjectEXT, (type, object, length, label), (GLenum type, GLuint object, GLsizei length, const GLchar *label))
#define glLabelObjectEXT_defined
#endif
#endif // defined(GL_EXT_debug_label)
#if defined(GL_EXT_debug_marker)
#ifndef glInsertEventMarkerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInsertEventMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glInsertEventMarkerEXT_defined
#endif
#ifndef glPopGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPopGroupMarkerEXT, (), (void))
#define glPopGroupMarkerEXT_defined
#endif
#ifndef glPushGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPushGroupMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glPushGroupMarkerEXT_defined
#endif
#endif // defined(GL_EXT_debug_marker)
#if defined(GL_EXT_depth_bounds_test)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthBoundsEXT, (zmin, zmax), (GLclampd zmin, GLclampd zmax))
#define glDepthBoundsEXT_defined
#endif // defined(GL_EXT_depth_bounds_test)
#if defined(GL_EXT_direct_state_access)
#ifndef glBindMultiTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindMultiTextureEXT, (texunit, target, texture), (GLenum texunit, GLenum target, GLuint texture))
#define glBindMultiTextureEXT_defined
#endif
#ifndef glCheckNamedFramebufferStatusEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckNamedFramebufferStatusEXT, (framebuffer, target), (GLuint framebuffer, GLenum target))
#define glCheckNamedFramebufferStatusEXT_defined
#endif
#ifndef glClearNamedBufferDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferDataEXT, (buffer, internalformat, format, type, data), (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferDataEXT_defined
#endif
#ifndef glClearNamedBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferSubDataEXT, (buffer, internalformat, offset, size, format, type, data), (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferSubDataEXT_defined
#endif
#ifndef glClientAttribDefaultEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClientAttribDefaultEXT, (mask), (GLbitfield mask))
#define glClientAttribDefaultEXT_defined
#endif
#ifndef glCompressedMultiTexImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexImage1DEXT, (texunit, target, level, internalformat, width, border, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexImage1DEXT_defined
#endif
#ifndef glCompressedMultiTexImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexImage2DEXT, (texunit, target, level, internalformat, width, height, border, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexImage2DEXT_defined
#endif
#ifndef glCompressedMultiTexImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexImage3DEXT, (texunit, target, level, internalformat, width, height, depth, border, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexImage3DEXT_defined
#endif
#ifndef glCompressedMultiTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexSubImage1DEXT, (texunit, target, level, xoffset, width, format, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexSubImage1DEXT_defined
#endif
#ifndef glCompressedMultiTexSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexSubImage2DEXT, (texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexSubImage2DEXT_defined
#endif
#ifndef glCompressedMultiTexSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedMultiTexSubImage3DEXT, (texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedMultiTexSubImage3DEXT_defined
#endif
#ifndef glCompressedTextureImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureImage1DEXT, (texture, target, level, internalformat, width, border, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedTextureImage1DEXT_defined
#endif
#ifndef glCompressedTextureImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureImage2DEXT, (texture, target, level, internalformat, width, height, border, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedTextureImage2DEXT_defined
#endif
#ifndef glCompressedTextureImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureImage3DEXT, (texture, target, level, internalformat, width, height, depth, border, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits))
#define glCompressedTextureImage3DEXT_defined
#endif
#ifndef glCompressedTextureSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage1DEXT, (texture, target, level, xoffset, width, format, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedTextureSubImage1DEXT_defined
#endif
#ifndef glCompressedTextureSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage2DEXT, (texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedTextureSubImage2DEXT_defined
#endif
#ifndef glCompressedTextureSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage3DEXT, (texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits))
#define glCompressedTextureSubImage3DEXT_defined
#endif
#ifndef glCopyMultiTexImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexImage1DEXT, (texunit, target, level, internalformat, x, y, width, border), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyMultiTexImage1DEXT_defined
#endif
#ifndef glCopyMultiTexImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexImage2DEXT, (texunit, target, level, internalformat, x, y, width, height, border), (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyMultiTexImage2DEXT_defined
#endif
#ifndef glCopyMultiTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexSubImage1DEXT, (texunit, target, level, xoffset, x, y, width), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyMultiTexSubImage1DEXT_defined
#endif
#ifndef glCopyMultiTexSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexSubImage2DEXT, (texunit, target, level, xoffset, yoffset, x, y, width, height), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyMultiTexSubImage2DEXT_defined
#endif
#ifndef glCopyMultiTexSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyMultiTexSubImage3DEXT, (texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyMultiTexSubImage3DEXT_defined
#endif
#ifndef glCopyTextureImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureImage1DEXT, (texture, target, level, internalformat, x, y, width, border), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyTextureImage1DEXT_defined
#endif
#ifndef glCopyTextureImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureImage2DEXT, (texture, target, level, internalformat, x, y, width, height, border), (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTextureImage2DEXT_defined
#endif
#ifndef glCopyTextureSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage1DEXT, (texture, target, level, xoffset, x, y, width), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTextureSubImage1DEXT_defined
#endif
#ifndef glCopyTextureSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage2DEXT, (texture, target, level, xoffset, yoffset, x, y, width, height), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage2DEXT_defined
#endif
#ifndef glCopyTextureSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage3DEXT, (texture, target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage3DEXT_defined
#endif
#ifndef glDisableClientStateIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableClientStateIndexedEXT, (array, index), (GLenum array, GLuint index))
#define glDisableClientStateIndexedEXT_defined
#endif
#ifndef glDisableClientStateiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableClientStateiEXT, (array, index), (GLenum array, GLuint index))
#define glDisableClientStateiEXT_defined
#endif
#ifndef glDisableIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableIndexedEXT, (target, index), (GLenum target, GLuint index))
#define glDisableIndexedEXT_defined
#endif
#ifndef glDisableVertexArrayAttribEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexArrayAttribEXT, (vaobj, index), (GLuint vaobj, GLuint index))
#define glDisableVertexArrayAttribEXT_defined
#endif
#ifndef glDisableVertexArrayEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexArrayEXT, (vaobj, array), (GLuint vaobj, GLenum array))
#define glDisableVertexArrayEXT_defined
#endif
#ifndef glEnableClientStateIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableClientStateIndexedEXT, (array, index), (GLenum array, GLuint index))
#define glEnableClientStateIndexedEXT_defined
#endif
#ifndef glEnableClientStateiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableClientStateiEXT, (array, index), (GLenum array, GLuint index))
#define glEnableClientStateiEXT_defined
#endif
#ifndef glEnableIndexedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableIndexedEXT, (target, index), (GLenum target, GLuint index))
#define glEnableIndexedEXT_defined
#endif
#ifndef glEnableVertexArrayAttribEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexArrayAttribEXT, (vaobj, index), (GLuint vaobj, GLuint index))
#define glEnableVertexArrayAttribEXT_defined
#endif
#ifndef glEnableVertexArrayEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexArrayEXT, (vaobj, array), (GLuint vaobj, GLenum array))
#define glEnableVertexArrayEXT_defined
#endif
#ifndef glFlushMappedNamedBufferRangeEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedNamedBufferRangeEXT, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizeiptr length))
#define glFlushMappedNamedBufferRangeEXT_defined
#endif
#ifndef glFramebufferDrawBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferDrawBufferEXT, (framebuffer, mode), (GLuint framebuffer, GLenum mode))
#define glFramebufferDrawBufferEXT_defined
#endif
#ifndef glFramebufferDrawBuffersEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferDrawBuffersEXT, (framebuffer, n, bufs), (GLuint framebuffer, GLsizei n, const GLenum *bufs))
#define glFramebufferDrawBuffersEXT_defined
#endif
#ifndef glFramebufferReadBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferReadBufferEXT, (framebuffer, mode), (GLuint framebuffer, GLenum mode))
#define glFramebufferReadBufferEXT_defined
#endif
#ifndef glGenerateMultiTexMipmapEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateMultiTexMipmapEXT, (texunit, target), (GLenum texunit, GLenum target))
#define glGenerateMultiTexMipmapEXT_defined
#endif
#ifndef glGenerateTextureMipmapEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateTextureMipmapEXT, (texture, target), (GLuint texture, GLenum target))
#define glGenerateTextureMipmapEXT_defined
#endif
#ifndef glGetBooleanIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBooleanIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleanIndexedvEXT_defined
#endif
#ifndef glGetCompressedMultiTexImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedMultiTexImageEXT, (texunit, target, lod, img), (GLenum texunit, GLenum target, GLint lod, void *img))
#define glGetCompressedMultiTexImageEXT_defined
#endif
#ifndef glGetCompressedTextureImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureImageEXT, (texture, target, lod, img), (GLuint texture, GLenum target, GLint lod, void *img))
#define glGetCompressedTextureImageEXT_defined
#endif
#ifndef glGetDoubleIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoubleIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLdouble *data))
#define glGetDoubleIndexedvEXT_defined
#endif
#ifndef glGetDoublei_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoublei_vEXT, (pname, index, params), (GLenum pname, GLuint index, GLdouble *params))
#define glGetDoublei_vEXT_defined
#endif
#ifndef glGetFloatIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloatIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloatIndexedvEXT_defined
#endif
#ifndef glGetFloati_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloati_vEXT, (pname, index, params), (GLenum pname, GLuint index, GLfloat *params))
#define glGetFloati_vEXT_defined
#endif
#ifndef glGetFramebufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferParameterivEXT, (framebuffer, pname, params), (GLuint framebuffer, GLenum pname, GLint *params))
#define glGetFramebufferParameterivEXT_defined
#endif
#ifndef glGetIntegerIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerIndexedvEXT, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegerIndexedvEXT_defined
#endif
#ifndef glGetMultiTexEnvfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexEnvfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLfloat *params))
#define glGetMultiTexEnvfvEXT_defined
#endif
#ifndef glGetMultiTexEnvivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexEnvivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLint *params))
#define glGetMultiTexEnvivEXT_defined
#endif
#ifndef glGetMultiTexGendvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexGendvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params))
#define glGetMultiTexGendvEXT_defined
#endif
#ifndef glGetMultiTexGenfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexGenfvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params))
#define glGetMultiTexGenfvEXT_defined
#endif
#ifndef glGetMultiTexGenivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexGenivEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, GLint *params))
#define glGetMultiTexGenivEXT_defined
#endif
#ifndef glGetMultiTexImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexImageEXT, (texunit, target, level, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels))
#define glGetMultiTexImageEXT_defined
#endif
#ifndef glGetMultiTexLevelParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexLevelParameterfvEXT, (texunit, target, level, pname, params), (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetMultiTexLevelParameterfvEXT_defined
#endif
#ifndef glGetMultiTexLevelParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexLevelParameterivEXT, (texunit, target, level, pname, params), (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetMultiTexLevelParameterivEXT_defined
#endif
#ifndef glGetMultiTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterIivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLint *params))
#define glGetMultiTexParameterIivEXT_defined
#endif
#ifndef glGetMultiTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterIuivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLuint *params))
#define glGetMultiTexParameterIuivEXT_defined
#endif
#ifndef glGetMultiTexParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLfloat *params))
#define glGetMultiTexParameterfvEXT_defined
#endif
#ifndef glGetMultiTexParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultiTexParameterivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, GLint *params))
#define glGetMultiTexParameterivEXT_defined
#endif
#ifndef glGetNamedBufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameterivEXT, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint *params))
#define glGetNamedBufferParameterivEXT_defined
#endif
#ifndef glGetNamedBufferPointervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferPointervEXT, (buffer, pname, params), (GLuint buffer, GLenum pname, void **params))
#define glGetNamedBufferPointervEXT_defined
#endif
#ifndef glGetNamedBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferSubDataEXT, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data))
#define glGetNamedBufferSubDataEXT_defined
#endif
#ifndef glGetNamedFramebufferAttachmentParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferAttachmentParameterivEXT, (framebuffer, attachment, pname, params), (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params))
#define glGetNamedFramebufferAttachmentParameterivEXT_defined
#endif
#ifndef glGetNamedFramebufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferParameterivEXT, (framebuffer, pname, params), (GLuint framebuffer, GLenum pname, GLint *params))
#define glGetNamedFramebufferParameterivEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterIivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLint *params))
#define glGetNamedProgramLocalParameterIivEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterIuivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLuint *params))
#define glGetNamedProgramLocalParameterIuivEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterdvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterdvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLdouble *params))
#define glGetNamedProgramLocalParameterdvEXT_defined
#endif
#ifndef glGetNamedProgramLocalParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramLocalParameterfvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, GLfloat *params))
#define glGetNamedProgramLocalParameterfvEXT_defined
#endif
#ifndef glGetNamedProgramStringEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramStringEXT, (program, target, pname, string), (GLuint program, GLenum target, GLenum pname, void *string))
#define glGetNamedProgramStringEXT_defined
#endif
#ifndef glGetNamedProgramivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedProgramivEXT, (program, target, pname, params), (GLuint program, GLenum target, GLenum pname, GLint *params))
#define glGetNamedProgramivEXT_defined
#endif
#ifndef glGetNamedRenderbufferParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedRenderbufferParameterivEXT, (renderbuffer, pname, params), (GLuint renderbuffer, GLenum pname, GLint *params))
#define glGetNamedRenderbufferParameterivEXT_defined
#endif
#ifndef glGetPointerIndexedvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPointerIndexedvEXT, (target, index, data), (GLenum target, GLuint index, void **data))
#define glGetPointerIndexedvEXT_defined
#endif
#ifndef glGetPointeri_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPointeri_vEXT, (pname, index, params), (GLenum pname, GLuint index, void **params))
#define glGetPointeri_vEXT_defined
#endif
#ifndef glGetTextureImageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureImageEXT, (texture, target, level, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels))
#define glGetTextureImageEXT_defined
#endif
#ifndef glGetTextureLevelParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameterfvEXT, (texture, target, level, pname, params), (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTextureLevelParameterfvEXT_defined
#endif
#ifndef glGetTextureLevelParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameterivEXT, (texture, target, level, pname, params), (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTextureLevelParameterivEXT_defined
#endif
#ifndef glGetTextureParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLint *params))
#define glGetTextureParameterIivEXT_defined
#endif
#ifndef glGetTextureParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIuivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLuint *params))
#define glGetTextureParameterIuivEXT_defined
#endif
#ifndef glGetTextureParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterfvEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLfloat *params))
#define glGetTextureParameterfvEXT_defined
#endif
#ifndef glGetTextureParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, GLint *params))
#define glGetTextureParameterivEXT_defined
#endif
#ifndef glGetVertexArrayIntegeri_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIntegeri_vEXT, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint *param))
#define glGetVertexArrayIntegeri_vEXT_defined
#endif
#ifndef glGetVertexArrayIntegervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIntegervEXT, (vaobj, pname, param), (GLuint vaobj, GLenum pname, GLint *param))
#define glGetVertexArrayIntegervEXT_defined
#endif
#ifndef glGetVertexArrayPointeri_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayPointeri_vEXT, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, void **param))
#define glGetVertexArrayPointeri_vEXT_defined
#endif
#ifndef glGetVertexArrayPointervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayPointervEXT, (vaobj, pname, param), (GLuint vaobj, GLenum pname, void **param))
#define glGetVertexArrayPointervEXT_defined
#endif
#ifndef glIsEnabledIndexedEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsEnabledIndexedEXT, (target, index), (GLenum target, GLuint index))
#define glIsEnabledIndexedEXT_defined
#endif
#ifndef glMapNamedBufferEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBufferEXT, (buffer, access), (GLuint buffer, GLenum access))
#define glMapNamedBufferEXT_defined
#endif
#ifndef glMapNamedBufferRangeEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBufferRangeEXT, (buffer, offset, length, access), (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapNamedBufferRangeEXT_defined
#endif
#ifndef glMatrixFrustumEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixFrustumEXT, (mode, left, right, bottom, top, zNear, zFar), (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glMatrixFrustumEXT_defined
#endif
#ifndef glMatrixLoadIdentityEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadIdentityEXT, (mode), (GLenum mode))
#define glMatrixLoadIdentityEXT_defined
#endif
#ifndef glMatrixLoadTransposedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadTransposedEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixLoadTransposedEXT_defined
#endif
#ifndef glMatrixLoadTransposefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadTransposefEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixLoadTransposefEXT_defined
#endif
#ifndef glMatrixLoaddEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoaddEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixLoaddEXT_defined
#endif
#ifndef glMatrixLoadfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadfEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixLoadfEXT_defined
#endif
#ifndef glMatrixMultTransposedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultTransposedEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixMultTransposedEXT_defined
#endif
#ifndef glMatrixMultTransposefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultTransposefEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixMultTransposefEXT_defined
#endif
#ifndef glMatrixMultdEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultdEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixMultdEXT_defined
#endif
#ifndef glMatrixMultfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultfEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixMultfEXT_defined
#endif
#ifndef glMatrixOrthoEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixOrthoEXT, (mode, left, right, bottom, top, zNear, zFar), (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glMatrixOrthoEXT_defined
#endif
#ifndef glMatrixPopEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixPopEXT, (mode), (GLenum mode))
#define glMatrixPopEXT_defined
#endif
#ifndef glMatrixPushEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixPushEXT, (mode), (GLenum mode))
#define glMatrixPushEXT_defined
#endif
#ifndef glMatrixRotatedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixRotatedEXT, (mode, angle, x, y, z), (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixRotatedEXT_defined
#endif
#ifndef glMatrixRotatefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixRotatefEXT, (mode, angle, x, y, z), (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixRotatefEXT_defined
#endif
#ifndef glMatrixScaledEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixScaledEXT, (mode, x, y, z), (GLenum mode, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixScaledEXT_defined
#endif
#ifndef glMatrixScalefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixScalefEXT, (mode, x, y, z), (GLenum mode, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixScalefEXT_defined
#endif
#ifndef glMatrixTranslatedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixTranslatedEXT, (mode, x, y, z), (GLenum mode, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixTranslatedEXT_defined
#endif
#ifndef glMatrixTranslatefEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixTranslatefEXT, (mode, x, y, z), (GLenum mode, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixTranslatefEXT_defined
#endif
#ifndef glMultiTexBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexBufferEXT, (texunit, target, internalformat, buffer), (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer))
#define glMultiTexBufferEXT_defined
#endif
#ifndef glMultiTexCoordPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordPointerEXT, (texunit, size, type, stride, pointer), (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glMultiTexCoordPointerEXT_defined
#endif
#ifndef glMultiTexEnvfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnvfEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLfloat param))
#define glMultiTexEnvfEXT_defined
#endif
#ifndef glMultiTexEnvfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnvfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params))
#define glMultiTexEnvfvEXT_defined
#endif
#ifndef glMultiTexEnviEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnviEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLint param))
#define glMultiTexEnviEXT_defined
#endif
#ifndef glMultiTexEnvivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexEnvivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLint *params))
#define glMultiTexEnvivEXT_defined
#endif
#ifndef glMultiTexGendEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGendEXT, (texunit, coord, pname, param), (GLenum texunit, GLenum coord, GLenum pname, GLdouble param))
#define glMultiTexGendEXT_defined
#endif
#ifndef glMultiTexGendvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGendvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params))
#define glMultiTexGendvEXT_defined
#endif
#ifndef glMultiTexGenfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGenfEXT, (texunit, coord, pname, param), (GLenum texunit, GLenum coord, GLenum pname, GLfloat param))
#define glMultiTexGenfEXT_defined
#endif
#ifndef glMultiTexGenfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGenfvEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params))
#define glMultiTexGenfvEXT_defined
#endif
#ifndef glMultiTexGeniEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGeniEXT, (texunit, coord, pname, param), (GLenum texunit, GLenum coord, GLenum pname, GLint param))
#define glMultiTexGeniEXT_defined
#endif
#ifndef glMultiTexGenivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexGenivEXT, (texunit, coord, pname, params), (GLenum texunit, GLenum coord, GLenum pname, const GLint *params))
#define glMultiTexGenivEXT_defined
#endif
#ifndef glMultiTexImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexImage1DEXT, (texunit, target, level, internalformat, width, border, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))
#define glMultiTexImage1DEXT_defined
#endif
#ifndef glMultiTexImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexImage2DEXT, (texunit, target, level, internalformat, width, height, border, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glMultiTexImage2DEXT_defined
#endif
#ifndef glMultiTexImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexImage3DEXT, (texunit, target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glMultiTexImage3DEXT_defined
#endif
#ifndef glMultiTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterIivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLint *params))
#define glMultiTexParameterIivEXT_defined
#endif
#ifndef glMultiTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterIuivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLuint *params))
#define glMultiTexParameterIuivEXT_defined
#endif
#ifndef glMultiTexParameterfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterfEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLfloat param))
#define glMultiTexParameterfEXT_defined
#endif
#ifndef glMultiTexParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterfvEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params))
#define glMultiTexParameterfvEXT_defined
#endif
#ifndef glMultiTexParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameteriEXT, (texunit, target, pname, param), (GLenum texunit, GLenum target, GLenum pname, GLint param))
#define glMultiTexParameteriEXT_defined
#endif
#ifndef glMultiTexParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexParameterivEXT, (texunit, target, pname, params), (GLenum texunit, GLenum target, GLenum pname, const GLint *params))
#define glMultiTexParameterivEXT_defined
#endif
#ifndef glMultiTexRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexRenderbufferEXT, (texunit, target, renderbuffer), (GLenum texunit, GLenum target, GLuint renderbuffer))
#define glMultiTexRenderbufferEXT_defined
#endif
#ifndef glMultiTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexSubImage1DEXT, (texunit, target, level, xoffset, width, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glMultiTexSubImage1DEXT_defined
#endif
#ifndef glMultiTexSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexSubImage2DEXT, (texunit, target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glMultiTexSubImage2DEXT_defined
#endif
#ifndef glMultiTexSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexSubImage3DEXT, (texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glMultiTexSubImage3DEXT_defined
#endif
#ifndef glNamedBufferDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferDataEXT, (buffer, size, data, usage), (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage))
#define glNamedBufferDataEXT_defined
#endif
#ifndef glNamedBufferStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferStorageEXT, (buffer, size, data, flags), (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags))
#define glNamedBufferStorageEXT_defined
#endif
#ifndef glNamedBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferSubDataEXT, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data))
#define glNamedBufferSubDataEXT_defined
#endif
#ifndef glNamedCopyBufferSubDataEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedCopyBufferSubDataEXT, (readBuffer, writeBuffer, readOffset, writeOffset, size), (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glNamedCopyBufferSubDataEXT_defined
#endif
#ifndef glNamedFramebufferParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferParameteriEXT, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint param))
#define glNamedFramebufferParameteriEXT_defined
#endif
#ifndef glNamedFramebufferRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferRenderbufferEXT, (framebuffer, attachment, renderbuffertarget, renderbuffer), (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glNamedFramebufferRenderbufferEXT_defined
#endif
#ifndef glNamedFramebufferTexture1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture1DEXT, (framebuffer, attachment, textarget, texture, level), (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glNamedFramebufferTexture1DEXT_defined
#endif
#ifndef glNamedFramebufferTexture2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture2DEXT, (framebuffer, attachment, textarget, texture, level), (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glNamedFramebufferTexture2DEXT_defined
#endif
#ifndef glNamedFramebufferTexture3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture3DEXT, (framebuffer, attachment, textarget, texture, level, zoffset), (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glNamedFramebufferTexture3DEXT_defined
#endif
#ifndef glNamedFramebufferTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureEXT, (framebuffer, attachment, texture, level), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level))
#define glNamedFramebufferTextureEXT_defined
#endif
#ifndef glNamedFramebufferTextureFaceEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureFaceEXT, (framebuffer, attachment, texture, level, face), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face))
#define glNamedFramebufferTextureFaceEXT_defined
#endif
#ifndef glNamedFramebufferTextureLayerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureLayerEXT, (framebuffer, attachment, texture, level, layer), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glNamedFramebufferTextureLayerEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4dEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glNamedProgramLocalParameter4dEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4dvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLdouble *params))
#define glNamedProgramLocalParameter4dvEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4fEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glNamedProgramLocalParameter4fEXT_defined
#endif
#ifndef glNamedProgramLocalParameter4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameter4fvEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLfloat *params))
#define glNamedProgramLocalParameter4fvEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4iEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glNamedProgramLocalParameterI4iEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4ivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLint *params))
#define glNamedProgramLocalParameterI4ivEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4uiEXT, (program, target, index, x, y, z, w), (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glNamedProgramLocalParameterI4uiEXT_defined
#endif
#ifndef glNamedProgramLocalParameterI4uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameterI4uivEXT, (program, target, index, params), (GLuint program, GLenum target, GLuint index, const GLuint *params))
#define glNamedProgramLocalParameterI4uivEXT_defined
#endif
#ifndef glNamedProgramLocalParameters4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParameters4fvEXT, (program, target, index, count, params), (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params))
#define glNamedProgramLocalParameters4fvEXT_defined
#endif
#ifndef glNamedProgramLocalParametersI4ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParametersI4ivEXT, (program, target, index, count, params), (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params))
#define glNamedProgramLocalParametersI4ivEXT_defined
#endif
#ifndef glNamedProgramLocalParametersI4uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramLocalParametersI4uivEXT, (program, target, index, count, params), (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params))
#define glNamedProgramLocalParametersI4uivEXT_defined
#endif
#ifndef glNamedProgramStringEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedProgramStringEXT, (program, target, format, len, string), (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string))
#define glNamedProgramStringEXT_defined
#endif
#ifndef glNamedRenderbufferStorageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageEXT, (renderbuffer, internalformat, width, height), (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageEXT_defined
#endif
#ifndef glNamedRenderbufferStorageMultisampleCoverageEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageMultisampleCoverageEXT, (renderbuffer, coverageSamples, colorSamples, internalformat, width, height), (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisampleCoverageEXT_defined
#endif
#ifndef glNamedRenderbufferStorageMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageMultisampleEXT, (renderbuffer, samples, internalformat, width, height), (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisampleEXT_defined
#endif
#ifndef glProgramUniform1dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1dEXT, (program, location, x), (GLuint program, GLint location, GLdouble x))
#define glProgramUniform1dEXT_defined
#endif
#ifndef glProgramUniform1dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform1dvEXT_defined
#endif
#ifndef glProgramUniform1fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1fEXT, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1fEXT_defined
#endif
#ifndef glProgramUniform1fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fvEXT_defined
#endif
#ifndef glProgramUniform1iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1iEXT, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1iEXT_defined
#endif
#ifndef glProgramUniform1ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1ivEXT_defined
#endif
#ifndef glProgramUniform1uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1uiEXT, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1uiEXT_defined
#endif
#ifndef glProgramUniform1uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uivEXT_defined
#endif
#ifndef glProgramUniform2dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2dEXT, (program, location, x, y), (GLuint program, GLint location, GLdouble x, GLdouble y))
#define glProgramUniform2dEXT_defined
#endif
#ifndef glProgramUniform2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform2dvEXT_defined
#endif
#ifndef glProgramUniform2fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2fEXT, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2fEXT_defined
#endif
#ifndef glProgramUniform2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fvEXT_defined
#endif
#ifndef glProgramUniform2iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2iEXT, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2iEXT_defined
#endif
#ifndef glProgramUniform2ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2ivEXT_defined
#endif
#ifndef glProgramUniform2uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2uiEXT, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2uiEXT_defined
#endif
#ifndef glProgramUniform2uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uivEXT_defined
#endif
#ifndef glProgramUniform3dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3dEXT, (program, location, x, y, z), (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z))
#define glProgramUniform3dEXT_defined
#endif
#ifndef glProgramUniform3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform3dvEXT_defined
#endif
#ifndef glProgramUniform3fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3fEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3fEXT_defined
#endif
#ifndef glProgramUniform3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fvEXT_defined
#endif
#ifndef glProgramUniform3iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3iEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3iEXT_defined
#endif
#ifndef glProgramUniform3ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3ivEXT_defined
#endif
#ifndef glProgramUniform3uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3uiEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3uiEXT_defined
#endif
#ifndef glProgramUniform3uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uivEXT_defined
#endif
#ifndef glProgramUniform4dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4dEXT, (program, location, x, y, z, w), (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glProgramUniform4dEXT_defined
#endif
#ifndef glProgramUniform4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4dvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform4dvEXT_defined
#endif
#ifndef glProgramUniform4fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4fEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4fEXT_defined
#endif
#ifndef glProgramUniform4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fvEXT_defined
#endif
#ifndef glProgramUniform4iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4iEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4iEXT_defined
#endif
#ifndef glProgramUniform4ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4ivEXT_defined
#endif
#ifndef glProgramUniform4uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4uiEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4uiEXT_defined
#endif
#ifndef glProgramUniform4uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uivEXT_defined
#endif
#ifndef glProgramUniformMatrix2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2dvEXT_defined
#endif
#ifndef glProgramUniformMatrix2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x3dvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x4dvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3dvEXT_defined
#endif
#ifndef glProgramUniformMatrix3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x2dvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x4dvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4dvEXT_defined
#endif
#ifndef glProgramUniformMatrix4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x2dvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x2fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3dvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x3dvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fvEXT_defined
#endif
#ifndef glPushClientAttribDefaultEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPushClientAttribDefaultEXT, (mask), (GLbitfield mask))
#define glPushClientAttribDefaultEXT_defined
#endif
#ifndef glTextureBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBufferEXT, (texture, target, internalformat, buffer), (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer))
#define glTextureBufferEXT_defined
#endif
#ifndef glTextureBufferRangeEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBufferRangeEXT, (texture, target, internalformat, buffer, offset, size), (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTextureBufferRangeEXT_defined
#endif
#ifndef glTextureImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage1DEXT, (texture, target, level, internalformat, width, border, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTextureImage1DEXT_defined
#endif
#ifndef glTextureImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage2DEXT, (texture, target, level, internalformat, width, height, border, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTextureImage2DEXT_defined
#endif
#ifndef glTextureImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage3DEXT, (texture, target, level, internalformat, width, height, depth, border, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTextureImage3DEXT_defined
#endif
#ifndef glTexturePageCommitmentEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexturePageCommitmentEXT, (texture, level, xoffset, yoffset, zoffset, width, height, depth, commit), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit))
#define glTexturePageCommitmentEXT_defined
#endif
#ifndef glTextureParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLint *params))
#define glTextureParameterIivEXT_defined
#endif
#ifndef glTextureParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIuivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLuint *params))
#define glTextureParameterIuivEXT_defined
#endif
#ifndef glTextureParameterfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterfEXT, (texture, target, pname, param), (GLuint texture, GLenum target, GLenum pname, GLfloat param))
#define glTextureParameterfEXT_defined
#endif
#ifndef glTextureParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterfvEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLfloat *params))
#define glTextureParameterfvEXT_defined
#endif
#ifndef glTextureParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteriEXT, (texture, target, pname, param), (GLuint texture, GLenum target, GLenum pname, GLint param))
#define glTextureParameteriEXT_defined
#endif
#ifndef glTextureParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterivEXT, (texture, target, pname, params), (GLuint texture, GLenum target, GLenum pname, const GLint *params))
#define glTextureParameterivEXT_defined
#endif
#ifndef glTextureRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureRenderbufferEXT, (texture, target, renderbuffer), (GLuint texture, GLenum target, GLuint renderbuffer))
#define glTextureRenderbufferEXT_defined
#endif
#ifndef glTextureStorage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage1DEXT, (texture, target, levels, internalformat, width), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTextureStorage1DEXT_defined
#endif
#ifndef glTextureStorage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2DEXT, (texture, target, levels, internalformat, width, height), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTextureStorage2DEXT_defined
#endif
#ifndef glTextureStorage2DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2DMultisampleEXT, (texture, target, samples, internalformat, width, height, fixedsamplelocations), (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTextureStorage2DMultisampleEXT_defined
#endif
#ifndef glTextureStorage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3DEXT, (texture, target, levels, internalformat, width, height, depth), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTextureStorage3DEXT_defined
#endif
#ifndef glTextureStorage3DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3DMultisampleEXT, (texture, target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTextureStorage3DMultisampleEXT_defined
#endif
#ifndef glTextureSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage1DEXT, (texture, target, level, xoffset, width, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage1DEXT_defined
#endif
#ifndef glTextureSubImage2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage2DEXT, (texture, target, level, xoffset, yoffset, width, height, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage2DEXT_defined
#endif
#ifndef glTextureSubImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage3DEXT, (texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage3DEXT_defined
#endif
#ifndef glUnmapNamedBufferEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapNamedBufferEXT, (buffer), (GLuint buffer))
#define glUnmapNamedBufferEXT_defined
#endif
#ifndef glVertexArrayBindVertexBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayBindVertexBufferEXT, (vaobj, bindingindex, buffer, offset, stride), (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glVertexArrayBindVertexBufferEXT_defined
#endif
#ifndef glVertexArrayColorOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayColorOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayColorOffsetEXT_defined
#endif
#ifndef glVertexArrayEdgeFlagOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayEdgeFlagOffsetEXT, (vaobj, buffer, stride, offset), (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset))
#define glVertexArrayEdgeFlagOffsetEXT_defined
#endif
#ifndef glVertexArrayFogCoordOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayFogCoordOffsetEXT, (vaobj, buffer, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayFogCoordOffsetEXT_defined
#endif
#ifndef glVertexArrayIndexOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayIndexOffsetEXT, (vaobj, buffer, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayIndexOffsetEXT_defined
#endif
#ifndef glVertexArrayMultiTexCoordOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayMultiTexCoordOffsetEXT, (vaobj, buffer, texunit, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayMultiTexCoordOffsetEXT_defined
#endif
#ifndef glVertexArrayNormalOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayNormalOffsetEXT, (vaobj, buffer, type, stride, offset), (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayNormalOffsetEXT_defined
#endif
#ifndef glVertexArraySecondaryColorOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArraySecondaryColorOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArraySecondaryColorOffsetEXT_defined
#endif
#ifndef glVertexArrayTexCoordOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayTexCoordOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayTexCoordOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexAttribBindingEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribBindingEXT, (vaobj, attribindex, bindingindex), (GLuint vaobj, GLuint attribindex, GLuint bindingindex))
#define glVertexArrayVertexAttribBindingEXT_defined
#endif
#ifndef glVertexArrayVertexAttribDivisorEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribDivisorEXT, (vaobj, index, divisor), (GLuint vaobj, GLuint index, GLuint divisor))
#define glVertexArrayVertexAttribDivisorEXT_defined
#endif
#ifndef glVertexArrayVertexAttribFormatEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribFormatEXT, (vaobj, attribindex, size, type, normalized, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexArrayVertexAttribFormatEXT_defined
#endif
#ifndef glVertexArrayVertexAttribIFormatEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribIFormatEXT, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayVertexAttribIFormatEXT_defined
#endif
#ifndef glVertexArrayVertexAttribIOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribIOffsetEXT, (vaobj, buffer, index, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexAttribIOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexAttribLFormatEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribLFormatEXT, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayVertexAttribLFormatEXT_defined
#endif
#ifndef glVertexArrayVertexAttribLOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribLOffsetEXT, (vaobj, buffer, index, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexAttribLOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexAttribOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexAttribOffsetEXT, (vaobj, buffer, index, size, type, normalized, stride, offset), (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexAttribOffsetEXT_defined
#endif
#ifndef glVertexArrayVertexBindingDivisorEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBindingDivisorEXT, (vaobj, bindingindex, divisor), (GLuint vaobj, GLuint bindingindex, GLuint divisor))
#define glVertexArrayVertexBindingDivisorEXT_defined
#endif
#ifndef glVertexArrayVertexOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexOffsetEXT, (vaobj, buffer, size, type, stride, offset), (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset))
#define glVertexArrayVertexOffsetEXT_defined
#endif
#endif // defined(GL_EXT_direct_state_access)
#if defined(GL_EXT_draw_buffers2)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorMaskIndexedEXT, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaskIndexedEXT_defined
#endif // defined(GL_EXT_draw_buffers2)
#if defined(GL_EXT_draw_instanced)
#ifndef glDrawArraysInstancedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstancedEXT, (mode, start, count, primcount), (GLenum mode, GLint start, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedEXT_defined
#endif
#ifndef glDrawElementsInstancedEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedEXT, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedEXT_defined
#endif
#endif // defined(GL_EXT_draw_instanced)
#if defined(GL_EXT_draw_range_elements)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElementsEXT, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElementsEXT_defined
#endif // defined(GL_EXT_draw_range_elements)
#if defined(GL_EXT_external_buffer)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferStorageExternalEXT, (target, offset, size, clientBuffer, flags), (GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags))
#define glBufferStorageExternalEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferStorageExternalEXT, (buffer, offset, size, clientBuffer, flags), (GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags))
#define glNamedBufferStorageExternalEXT_defined
#endif // defined(GL_EXT_external_buffer)
#if defined(GL_EXT_fog_coord)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordPointerEXT, (type, stride, pointer), (GLenum type, GLsizei stride, const void *pointer))
#define glFogCoordPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoorddEXT, (coord), (GLdouble coord))
#define glFogCoorddEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoorddvEXT, (coord), (const GLdouble *coord))
#define glFogCoorddvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordfEXT, (coord), (GLfloat coord))
#define glFogCoordfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordfvEXT, (coord), (const GLfloat *coord))
#define glFogCoordfvEXT_defined
#endif // defined(GL_EXT_fog_coord)
#if defined(GL_EXT_framebuffer_blit)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlitFramebufferEXT, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebufferEXT_defined
#endif // defined(GL_EXT_framebuffer_blit)
#if defined(GL_EXT_framebuffer_multisample)
#ifndef glRenderbufferStorageMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorageMultisampleEXT, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleEXT_defined
#endif
#endif // defined(GL_EXT_framebuffer_multisample)
#if defined(GL_EXT_framebuffer_object)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFramebufferEXT, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindRenderbufferEXT, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbufferEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckFramebufferStatusEXT, (target), (GLenum target))
#define glCheckFramebufferStatusEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteFramebuffersEXT, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffersEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteRenderbuffersEXT, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffersEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferRenderbufferEXT, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture1DEXT, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture2DEXT, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture3DEXT, (target, attachment, textarget, texture, level, zoffset), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glFramebufferTexture3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenFramebuffersEXT, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffersEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenRenderbuffersEXT, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffersEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateMipmapEXT, (target), (GLenum target))
#define glGenerateMipmapEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferAttachmentParameterivEXT, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetRenderbufferParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameterivEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsFramebufferEXT, (framebuffer), (GLuint framebuffer))
#define glIsFramebufferEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsRenderbufferEXT, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorageEXT, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageEXT_defined
#endif // defined(GL_EXT_framebuffer_object)
#if defined(GL_EXT_geometry_shader4)
#ifndef glProgramParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameteriEXT, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteriEXT_defined
#endif
#endif // defined(GL_EXT_geometry_shader4)
#if defined(GL_EXT_gpu_program_parameters)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameters4fvEXT, (target, index, count, params), (GLenum target, GLuint index, GLsizei count, const GLfloat *params))
#define glProgramEnvParameters4fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameters4fvEXT, (target, index, count, params), (GLenum target, GLuint index, GLsizei count, const GLfloat *params))
#define glProgramLocalParameters4fvEXT_defined
#endif // defined(GL_EXT_gpu_program_parameters)
#if defined(GL_EXT_gpu_shader4)
#ifndef glBindFragDataLocationEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragDataLocationEXT, (program, color, name), (GLuint program, GLuint color, const GLchar *name))
#define glBindFragDataLocationEXT_defined
#endif
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetFragDataLocationEXT, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocationEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformuivEXT, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1uiEXT, (location, v0), (GLint location, GLuint v0))
#define glUniform1uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1uivEXT, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2uiEXT, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2uivEXT, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3uiEXT, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3uivEXT, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4uiEXT, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4uivEXT, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uivEXT_defined
#endif // defined(GL_EXT_gpu_shader4)
#if defined(GL_EXT_histogram)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetHistogramEXT, (target, reset, format, type, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))
#define glGetHistogramEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetHistogramParameterfvEXT, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetHistogramParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetHistogramParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetHistogramParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMinmaxEXT, (target, reset, format, type, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values))
#define glGetMinmaxEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMinmaxParameterfvEXT, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetMinmaxParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMinmaxParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetMinmaxParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glHistogramEXT, (target, width, internalformat, sink), (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink))
#define glHistogramEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinmaxEXT, (target, internalformat, sink), (GLenum target, GLenum internalformat, GLboolean sink))
#define glMinmaxEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResetHistogramEXT, (target), (GLenum target))
#define glResetHistogramEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResetMinmaxEXT, (target), (GLenum target))
#define glResetMinmaxEXT_defined
#endif // defined(GL_EXT_histogram)
#if defined(GL_EXT_index_func)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexFuncEXT, (func, ref), (GLenum func, GLclampf ref))
#define glIndexFuncEXT_defined
#endif // defined(GL_EXT_index_func)
#if defined(GL_EXT_index_material)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexMaterialEXT, (face, mode), (GLenum face, GLenum mode))
#define glIndexMaterialEXT_defined
#endif // defined(GL_EXT_index_material)
#if defined(GL_EXT_light_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glApplyTextureEXT, (mode), (GLenum mode))
#define glApplyTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureLightEXT, (pname), (GLenum pname))
#define glTextureLightEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureMaterialEXT, (face, mode), (GLenum face, GLenum mode))
#define glTextureMaterialEXT_defined
#endif // defined(GL_EXT_light_texture)
#if defined(GL_EXT_memory_object)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferStorageMemEXT, (target, size, memory, offset), (GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset))
#define glBufferStorageMemEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateMemoryObjectsEXT, (n, memoryObjects), (GLsizei n, GLuint *memoryObjects))
#define glCreateMemoryObjectsEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteMemoryObjectsEXT, (n, memoryObjects), (GLsizei n, const GLuint *memoryObjects))
#define glDeleteMemoryObjectsEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMemoryObjectParameterivEXT, (memoryObject, pname, params), (GLuint memoryObject, GLenum pname, GLint *params))
#define glGetMemoryObjectParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUnsignedBytei_vEXT, (target, index, data), (GLenum target, GLuint index, GLubyte *data))
#define glGetUnsignedBytei_vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUnsignedBytevEXT, (pname, data), (GLenum pname, GLubyte *data))
#define glGetUnsignedBytevEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsMemoryObjectEXT, (memoryObject), (GLuint memoryObject))
#define glIsMemoryObjectEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryObjectParameterivEXT, (memoryObject, pname, params), (GLuint memoryObject, GLenum pname, const GLint *params))
#define glMemoryObjectParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferStorageMemEXT, (buffer, size, memory, offset), (GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset))
#define glNamedBufferStorageMemEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorageMem1DEXT, (target, levels, internalFormat, width, memory, offset), (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset))
#define glTexStorageMem1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorageMem2DEXT, (target, levels, internalFormat, width, height, memory, offset), (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset))
#define glTexStorageMem2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorageMem2DMultisampleEXT, (target, samples, internalFormat, width, height, fixedSampleLocations, memory, offset), (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTexStorageMem2DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorageMem3DEXT, (target, levels, internalFormat, width, height, depth, memory, offset), (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset))
#define glTexStorageMem3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorageMem3DMultisampleEXT, (target, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset), (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTexStorageMem3DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorageMem1DEXT, (texture, levels, internalFormat, width, memory, offset), (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset))
#define glTextureStorageMem1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorageMem2DEXT, (texture, levels, internalFormat, width, height, memory, offset), (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset))
#define glTextureStorageMem2DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorageMem2DMultisampleEXT, (texture, samples, internalFormat, width, height, fixedSampleLocations, memory, offset), (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTextureStorageMem2DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorageMem3DEXT, (texture, levels, internalFormat, width, height, depth, memory, offset), (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset))
#define glTextureStorageMem3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorageMem3DMultisampleEXT, (texture, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset), (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTextureStorageMem3DMultisampleEXT_defined
#endif // defined(GL_EXT_memory_object)
#if defined(GL_EXT_memory_object_fd)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImportMemoryFdEXT, (memory, size, handleType, fd), (GLuint memory, GLuint64 size, GLenum handleType, GLint fd))
#define glImportMemoryFdEXT_defined
#endif // defined(GL_EXT_memory_object_fd)
#if defined(GL_EXT_memory_object_win32)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImportMemoryWin32HandleEXT, (memory, size, handleType, handle), (GLuint memory, GLuint64 size, GLenum handleType, void *handle))
#define glImportMemoryWin32HandleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImportMemoryWin32NameEXT, (memory, size, handleType, name), (GLuint memory, GLuint64 size, GLenum handleType, const void *name))
#define glImportMemoryWin32NameEXT_defined
#endif // defined(GL_EXT_memory_object_win32)
#if defined(GL_EXT_multi_draw_arrays)
#ifndef glMultiDrawArraysEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysEXT, (mode, first, count, primcount), (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount))
#define glMultiDrawArraysEXT_defined
#endif
#ifndef glMultiDrawElementsEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsEXT, (mode, count, type, indices, primcount), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount))
#define glMultiDrawElementsEXT_defined
#endif
#endif // defined(GL_EXT_multi_draw_arrays)
#if defined(GL_EXT_multisample)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleMaskEXT, (value, invert), (GLclampf value, GLboolean invert))
#define glSampleMaskEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplePatternEXT, (pattern), (GLenum pattern))
#define glSamplePatternEXT_defined
#endif // defined(GL_EXT_multisample)
#if defined(GL_EXT_paletted_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorTableEXT, (target, internalFormat, width, format, type, table), (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table))
#define glColorTableEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableEXT, (target, format, type, data), (GLenum target, GLenum format, GLenum type, void *data))
#define glGetColorTableEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableParameterfvEXT, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetColorTableParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetColorTableParameterivEXT_defined
#endif // defined(GL_EXT_paletted_texture)
#if defined(GL_EXT_pixel_transform)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPixelTransformParameterfvEXT, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetPixelTransformParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPixelTransformParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetPixelTransformParameterivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTransformParameterfEXT, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glPixelTransformParameterfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTransformParameterfvEXT, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glPixelTransformParameterfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTransformParameteriEXT, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glPixelTransformParameteriEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTransformParameterivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glPixelTransformParameterivEXT_defined
#endif // defined(GL_EXT_pixel_transform)
#if defined(GL_EXT_point_parameters)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfEXT, (pname, param), (GLenum pname, GLfloat param))
#define glPointParameterfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfvEXT, (pname, params), (GLenum pname, const GLfloat *params))
#define glPointParameterfvEXT_defined
#endif // defined(GL_EXT_point_parameters)
#if defined(GL_EXT_polygon_offset)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffsetEXT, (factor, bias), (GLfloat factor, GLfloat bias))
#define glPolygonOffsetEXT_defined
#endif // defined(GL_EXT_polygon_offset)
#if defined(GL_EXT_polygon_offset_clamp)
#ifndef glPolygonOffsetClampEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffsetClampEXT, (factor, units, clamp), (GLfloat factor, GLfloat units, GLfloat clamp))
#define glPolygonOffsetClampEXT_defined
#endif
#endif // defined(GL_EXT_polygon_offset_clamp)
#if defined(GL_EXT_provoking_vertex)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProvokingVertexEXT, (mode), (GLenum mode))
#define glProvokingVertexEXT_defined
#endif // defined(GL_EXT_provoking_vertex)
#if defined(GL_EXT_raster_multisample)
#ifndef glRasterSamplesEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterSamplesEXT, (samples, fixedsamplelocations), (GLuint samples, GLboolean fixedsamplelocations))
#define glRasterSamplesEXT_defined
#endif
#endif // defined(GL_EXT_raster_multisample)
#if defined(GL_EXT_secondary_color)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3bEXT, (red, green, blue), (GLbyte red, GLbyte green, GLbyte blue))
#define glSecondaryColor3bEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3bvEXT, (v), (const GLbyte *v))
#define glSecondaryColor3bvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3dEXT, (red, green, blue), (GLdouble red, GLdouble green, GLdouble blue))
#define glSecondaryColor3dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3dvEXT, (v), (const GLdouble *v))
#define glSecondaryColor3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3fEXT, (red, green, blue), (GLfloat red, GLfloat green, GLfloat blue))
#define glSecondaryColor3fEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3fvEXT, (v), (const GLfloat *v))
#define glSecondaryColor3fvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3iEXT, (red, green, blue), (GLint red, GLint green, GLint blue))
#define glSecondaryColor3iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3ivEXT, (v), (const GLint *v))
#define glSecondaryColor3ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3sEXT, (red, green, blue), (GLshort red, GLshort green, GLshort blue))
#define glSecondaryColor3sEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3svEXT, (v), (const GLshort *v))
#define glSecondaryColor3svEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3ubEXT, (red, green, blue), (GLubyte red, GLubyte green, GLubyte blue))
#define glSecondaryColor3ubEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3ubvEXT, (v), (const GLubyte *v))
#define glSecondaryColor3ubvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3uiEXT, (red, green, blue), (GLuint red, GLuint green, GLuint blue))
#define glSecondaryColor3uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3uivEXT, (v), (const GLuint *v))
#define glSecondaryColor3uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3usEXT, (red, green, blue), (GLushort red, GLushort green, GLushort blue))
#define glSecondaryColor3usEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3usvEXT, (v), (const GLushort *v))
#define glSecondaryColor3usvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColorPointerEXT, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glSecondaryColorPointerEXT_defined
#endif // defined(GL_EXT_secondary_color)
#if defined(GL_EXT_semaphore)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteSemaphoresEXT, (n, semaphores), (GLsizei n, const GLuint *semaphores))
#define glDeleteSemaphoresEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenSemaphoresEXT, (n, semaphores), (GLsizei n, GLuint *semaphores))
#define glGenSemaphoresEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSemaphoreParameterui64vEXT, (semaphore, pname, params), (GLuint semaphore, GLenum pname, GLuint64 *params))
#define glGetSemaphoreParameterui64vEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsSemaphoreEXT, (semaphore), (GLuint semaphore))
#define glIsSemaphoreEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSemaphoreParameterui64vEXT, (semaphore, pname, params), (GLuint semaphore, GLenum pname, const GLuint64 *params))
#define glSemaphoreParameterui64vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSignalSemaphoreEXT, (semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, dstLayouts), (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts))
#define glSignalSemaphoreEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWaitSemaphoreEXT, (semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, srcLayouts), (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts))
#define glWaitSemaphoreEXT_defined
#endif // defined(GL_EXT_semaphore)
#if defined(GL_EXT_semaphore_fd)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImportSemaphoreFdEXT, (semaphore, handleType, fd), (GLuint semaphore, GLenum handleType, GLint fd))
#define glImportSemaphoreFdEXT_defined
#endif // defined(GL_EXT_semaphore_fd)
#if defined(GL_EXT_semaphore_win32)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImportSemaphoreWin32HandleEXT, (semaphore, handleType, handle), (GLuint semaphore, GLenum handleType, void *handle))
#define glImportSemaphoreWin32HandleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImportSemaphoreWin32NameEXT, (semaphore, handleType, name), (GLuint semaphore, GLenum handleType, const void *name))
#define glImportSemaphoreWin32NameEXT_defined
#endif // defined(GL_EXT_semaphore_win32)
#if defined(GL_EXT_separate_shader_objects)
#ifndef glActiveProgramEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveProgramEXT, (program), (GLuint program))
#define glActiveProgramEXT_defined
#endif
#ifndef glCreateShaderProgramEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShaderProgramEXT, (type, string), (GLenum type, const GLchar *string))
#define glCreateShaderProgramEXT_defined
#endif
#ifndef glUseShaderProgramEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseShaderProgramEXT, (type, program), (GLenum type, GLuint program))
#define glUseShaderProgramEXT_defined
#endif
#endif // defined(GL_EXT_separate_shader_objects)
#if defined(GL_EXT_shader_framebuffer_fetch_non_coherent)
#ifndef glFramebufferFetchBarrierEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferFetchBarrierEXT, (), (void))
#define glFramebufferFetchBarrierEXT_defined
#endif
#endif // defined(GL_EXT_shader_framebuffer_fetch_non_coherent)
#if defined(GL_EXT_shader_image_load_store)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindImageTextureEXT, (index, texture, level, layered, layer, access, format), (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format))
#define glBindImageTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryBarrierEXT, (barriers), (GLbitfield barriers))
#define glMemoryBarrierEXT_defined
#endif // defined(GL_EXT_shader_image_load_store)
#if defined(GL_EXT_stencil_clear_tag)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilClearTagEXT, (stencilTagBits, stencilClearTag), (GLsizei stencilTagBits, GLuint stencilClearTag))
#define glStencilClearTagEXT_defined
#endif // defined(GL_EXT_stencil_clear_tag)
#if defined(GL_EXT_stencil_two_side)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveStencilFaceEXT, (face), (GLenum face))
#define glActiveStencilFaceEXT_defined
#endif // defined(GL_EXT_stencil_two_side)
#if defined(GL_EXT_subtexture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage1DEXT, (target, level, xoffset, width, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage1DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage2DEXT, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2DEXT_defined
#endif // defined(GL_EXT_subtexture)
#if defined(GL_EXT_texture3D)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3DEXT, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3DEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage3DEXT, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3DEXT_defined
#endif // defined(GL_EXT_texture3D)
#if defined(GL_EXT_texture_array)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureLayerEXT, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayerEXT_defined
#endif // defined(GL_EXT_texture_array)
#if defined(GL_EXT_texture_buffer_object)
#ifndef glTexBufferEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBufferEXT, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBufferEXT_defined
#endif
#endif // defined(GL_EXT_texture_buffer_object)
#if defined(GL_EXT_texture_integer)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearColorIiEXT, (red, green, blue, alpha), (GLint red, GLint green, GLint blue, GLint alpha))
#define glClearColorIiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearColorIuiEXT, (red, green, blue, alpha), (GLuint red, GLuint green, GLuint blue, GLuint alpha))
#define glClearColorIuiEXT_defined
#ifndef glGetTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIivEXT_defined
#endif
#ifndef glGetTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIuivEXT, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuivEXT_defined
#endif
#ifndef glTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIivEXT_defined
#endif
#ifndef glTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIuivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuivEXT_defined
#endif
#endif // defined(GL_EXT_texture_integer)
#if defined(GL_EXT_texture_object)
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glAreTexturesResidentEXT, (n, textures, residences), (GLsizei n, const GLuint *textures, GLboolean *residences))
#define glAreTexturesResidentEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTextureEXT, (target, texture), (GLenum target, GLuint texture))
#define glBindTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteTexturesEXT, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTexturesEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenTexturesEXT, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTexturesEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTextureEXT, (texture), (GLuint texture))
#define glIsTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrioritizeTexturesEXT, (n, textures, priorities), (GLsizei n, const GLuint *textures, const GLclampf *priorities))
#define glPrioritizeTexturesEXT_defined
#endif // defined(GL_EXT_texture_object)
#if defined(GL_EXT_texture_perturb_normal)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureNormalEXT, (mode), (GLenum mode))
#define glTextureNormalEXT_defined
#endif // defined(GL_EXT_texture_perturb_normal)
#if defined(GL_EXT_timer_query)
#ifndef glGetQueryObjecti64vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjecti64vEXT, (id, pname, params), (GLuint id, GLenum pname, GLint64 *params))
#define glGetQueryObjecti64vEXT_defined
#endif
#ifndef glGetQueryObjectui64vEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectui64vEXT, (id, pname, params), (GLuint id, GLenum pname, GLuint64 *params))
#define glGetQueryObjectui64vEXT_defined
#endif
#endif // defined(GL_EXT_timer_query)
#if defined(GL_EXT_transform_feedback)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginTransformFeedbackEXT, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedbackEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferBaseEXT, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBaseEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferOffsetEXT, (target, index, buffer, offset), (GLenum target, GLuint index, GLuint buffer, GLintptr offset))
#define glBindBufferOffsetEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferRangeEXT, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRangeEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndTransformFeedbackEXT, (), (void))
#define glEndTransformFeedbackEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackVaryingEXT, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVaryingEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackVaryingsEXT, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryingsEXT_defined
#endif // defined(GL_EXT_transform_feedback)
#if defined(GL_EXT_vertex_array)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glArrayElementEXT, (i), (GLint i))
#define glArrayElementEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorPointerEXT, (size, type, stride, count, pointer), (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer))
#define glColorPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysEXT, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArraysEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEdgeFlagPointerEXT, (stride, count, pointer), (GLsizei stride, GLsizei count, const GLboolean *pointer))
#define glEdgeFlagPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPointervEXT, (pname, params), (GLenum pname, void **params))
#define glGetPointervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexPointerEXT, (type, stride, count, pointer), (GLenum type, GLsizei stride, GLsizei count, const void *pointer))
#define glIndexPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalPointerEXT, (type, stride, count, pointer), (GLenum type, GLsizei stride, GLsizei count, const void *pointer))
#define glNormalPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordPointerEXT, (size, type, stride, count, pointer), (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer))
#define glTexCoordPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexPointerEXT, (size, type, stride, count, pointer), (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer))
#define glVertexPointerEXT_defined
#endif // defined(GL_EXT_vertex_array)
#if defined(GL_EXT_vertex_attrib_64bit)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLdvEXT, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribLdvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1dEXT, (index, x), (GLuint index, GLdouble x))
#define glVertexAttribL1dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1dvEXT, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL1dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2dEXT, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttribL2dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2dvEXT, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL2dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3dEXT, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttribL3dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3dvEXT, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL3dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4dEXT, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttribL4dEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4dvEXT, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL4dvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLPointerEXT, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribLPointerEXT_defined
#endif // defined(GL_EXT_vertex_attrib_64bit)
#if defined(GL_EXT_vertex_shader)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginVertexShaderEXT, (), (void))
#define glBeginVertexShaderEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glBindLightParameterEXT, (light, value), (GLenum light, GLenum value))
#define glBindLightParameterEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glBindMaterialParameterEXT, (face, value), (GLenum face, GLenum value))
#define glBindMaterialParameterEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glBindParameterEXT, (value), (GLenum value))
#define glBindParameterEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glBindTexGenParameterEXT, (unit, coord, value), (GLenum unit, GLenum coord, GLenum value))
#define glBindTexGenParameterEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glBindTextureUnitParameterEXT, (unit, value), (GLenum unit, GLenum value))
#define glBindTextureUnitParameterEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexShaderEXT, (id), (GLuint id))
#define glBindVertexShaderEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteVertexShaderEXT, (id), (GLuint id))
#define glDeleteVertexShaderEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVariantClientStateEXT, (id), (GLuint id))
#define glDisableVariantClientStateEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVariantClientStateEXT, (id), (GLuint id))
#define glEnableVariantClientStateEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndVertexShaderEXT, (), (void))
#define glEndVertexShaderEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glExtractComponentEXT, (res, src, num), (GLuint res, GLuint src, GLuint num))
#define glExtractComponentEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGenSymbolsEXT, (datatype, storagetype, range, components), (GLenum datatype, GLenum storagetype, GLenum range, GLuint components))
#define glGenSymbolsEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGenVertexShadersEXT, (range), (GLuint range))
#define glGenVertexShadersEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInvariantBooleanvEXT, (id, value, data), (GLuint id, GLenum value, GLboolean *data))
#define glGetInvariantBooleanvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInvariantFloatvEXT, (id, value, data), (GLuint id, GLenum value, GLfloat *data))
#define glGetInvariantFloatvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInvariantIntegervEXT, (id, value, data), (GLuint id, GLenum value, GLint *data))
#define glGetInvariantIntegervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetLocalConstantBooleanvEXT, (id, value, data), (GLuint id, GLenum value, GLboolean *data))
#define glGetLocalConstantBooleanvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetLocalConstantFloatvEXT, (id, value, data), (GLuint id, GLenum value, GLfloat *data))
#define glGetLocalConstantFloatvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetLocalConstantIntegervEXT, (id, value, data), (GLuint id, GLenum value, GLint *data))
#define glGetLocalConstantIntegervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVariantBooleanvEXT, (id, value, data), (GLuint id, GLenum value, GLboolean *data))
#define glGetVariantBooleanvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVariantFloatvEXT, (id, value, data), (GLuint id, GLenum value, GLfloat *data))
#define glGetVariantFloatvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVariantIntegervEXT, (id, value, data), (GLuint id, GLenum value, GLint *data))
#define glGetVariantIntegervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVariantPointervEXT, (id, value, data), (GLuint id, GLenum value, void **data))
#define glGetVariantPointervEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInsertComponentEXT, (res, src, num), (GLuint res, GLuint src, GLuint num))
#define glInsertComponentEXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsVariantEnabledEXT, (id, cap), (GLuint id, GLenum cap))
#define glIsVariantEnabledEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSetInvariantEXT, (id, type, addr), (GLuint id, GLenum type, const void *addr))
#define glSetInvariantEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSetLocalConstantEXT, (id, type, addr), (GLuint id, GLenum type, const void *addr))
#define glSetLocalConstantEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderOp1EXT, (op, res, arg1), (GLenum op, GLuint res, GLuint arg1))
#define glShaderOp1EXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderOp2EXT, (op, res, arg1, arg2), (GLenum op, GLuint res, GLuint arg1, GLuint arg2))
#define glShaderOp2EXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderOp3EXT, (op, res, arg1, arg2, arg3), (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3))
#define glShaderOp3EXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSwizzleEXT, (res, in, outX, outY, outZ, outW), (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW))
#define glSwizzleEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantPointerEXT, (id, type, stride, addr), (GLuint id, GLenum type, GLuint stride, const void *addr))
#define glVariantPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantbvEXT, (id, addr), (GLuint id, const GLbyte *addr))
#define glVariantbvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantdvEXT, (id, addr), (GLuint id, const GLdouble *addr))
#define glVariantdvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantfvEXT, (id, addr), (GLuint id, const GLfloat *addr))
#define glVariantfvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantivEXT, (id, addr), (GLuint id, const GLint *addr))
#define glVariantivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantsvEXT, (id, addr), (GLuint id, const GLshort *addr))
#define glVariantsvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantubvEXT, (id, addr), (GLuint id, const GLubyte *addr))
#define glVariantubvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantuivEXT, (id, addr), (GLuint id, const GLuint *addr))
#define glVariantuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVariantusvEXT, (id, addr), (GLuint id, const GLushort *addr))
#define glVariantusvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWriteMaskEXT, (res, in, outX, outY, outZ, outW), (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW))
#define glWriteMaskEXT_defined
#endif // defined(GL_EXT_vertex_shader)
#if defined(GL_EXT_vertex_weighting)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexWeightPointerEXT, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexWeightPointerEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexWeightfEXT, (weight), (GLfloat weight))
#define glVertexWeightfEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexWeightfvEXT, (weight), (const GLfloat *weight))
#define glVertexWeightfvEXT_defined
#endif // defined(GL_EXT_vertex_weighting)
#if defined(GL_EXT_win32_keyed_mutex)
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glAcquireKeyedMutexWin32EXT, (memory, key, timeout), (GLuint memory, GLuint64 key, GLuint timeout))
#define glAcquireKeyedMutexWin32EXT_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glReleaseKeyedMutexWin32EXT, (memory, key), (GLuint memory, GLuint64 key))
#define glReleaseKeyedMutexWin32EXT_defined
#endif // defined(GL_EXT_win32_keyed_mutex)
#if defined(GL_EXT_window_rectangles)
#ifndef glWindowRectanglesEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowRectanglesEXT, (mode, count, box), (GLenum mode, GLsizei count, const GLint *box))
#define glWindowRectanglesEXT_defined
#endif
#endif // defined(GL_EXT_window_rectangles)
#if defined(GL_EXT_x11_sync_object)
GLATTER_FBLOCK(return, GL, GLAPI, GLsync, APIENTRY, glImportSyncEXT, (external_sync_type, external_sync, flags), (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags))
#define glImportSyncEXT_defined
#endif // defined(GL_EXT_x11_sync_object)
#if defined(GL_GREMEDY_frame_terminator)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFrameTerminatorGREMEDY, (), (void))
#define glFrameTerminatorGREMEDY_defined
#endif // defined(GL_GREMEDY_frame_terminator)
#if defined(GL_GREMEDY_string_marker)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStringMarkerGREMEDY, (len, string), (GLsizei len, const void *string))
#define glStringMarkerGREMEDY_defined
#endif // defined(GL_GREMEDY_string_marker)
#if defined(GL_HP_image_transform)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetImageTransformParameterfvHP, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetImageTransformParameterfvHP_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetImageTransformParameterivHP, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetImageTransformParameterivHP_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImageTransformParameterfHP, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glImageTransformParameterfHP_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImageTransformParameterfvHP, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glImageTransformParameterfvHP_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImageTransformParameteriHP, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glImageTransformParameteriHP_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glImageTransformParameterivHP, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glImageTransformParameterivHP_defined
#endif // defined(GL_HP_image_transform)
#if defined(GL_IBM_multimode_draw_arrays)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiModeDrawArraysIBM, (mode, first, count, primcount, modestride), (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride))
#define glMultiModeDrawArraysIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiModeDrawElementsIBM, (mode, count, type, indices, primcount, modestride), (const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride))
#define glMultiModeDrawElementsIBM_defined
#endif // defined(GL_IBM_multimode_draw_arrays)
#if defined(GL_IBM_static_data)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushStaticDataIBM, (target), (GLenum target))
#define glFlushStaticDataIBM_defined
#endif // defined(GL_IBM_static_data)
#if defined(GL_IBM_vertex_array_lists)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorPointerListIBM, (size, type, stride, pointer, ptrstride), (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))
#define glColorPointerListIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEdgeFlagPointerListIBM, (stride, pointer, ptrstride), (GLint stride, const GLboolean **pointer, GLint ptrstride))
#define glEdgeFlagPointerListIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordPointerListIBM, (type, stride, pointer, ptrstride), (GLenum type, GLint stride, const void **pointer, GLint ptrstride))
#define glFogCoordPointerListIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexPointerListIBM, (type, stride, pointer, ptrstride), (GLenum type, GLint stride, const void **pointer, GLint ptrstride))
#define glIndexPointerListIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalPointerListIBM, (type, stride, pointer, ptrstride), (GLenum type, GLint stride, const void **pointer, GLint ptrstride))
#define glNormalPointerListIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColorPointerListIBM, (size, type, stride, pointer, ptrstride), (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))
#define glSecondaryColorPointerListIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordPointerListIBM, (size, type, stride, pointer, ptrstride), (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))
#define glTexCoordPointerListIBM_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexPointerListIBM, (size, type, stride, pointer, ptrstride), (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride))
#define glVertexPointerListIBM_defined
#endif // defined(GL_IBM_vertex_array_lists)
#if defined(GL_INGR_blend_func_separate)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparateINGR, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparateINGR_defined
#endif // defined(GL_INGR_blend_func_separate)
#if defined(GL_INTEL_framebuffer_CMAA)
#ifndef glApplyFramebufferAttachmentCMAAINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glApplyFramebufferAttachmentCMAAINTEL, (), (void))
#define glApplyFramebufferAttachmentCMAAINTEL_defined
#endif
#endif // defined(GL_INTEL_framebuffer_CMAA)
#if defined(GL_INTEL_map_texture)
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapTexture2DINTEL, (texture, level, access, stride, layout), (GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout))
#define glMapTexture2DINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSyncTextureINTEL, (texture), (GLuint texture))
#define glSyncTextureINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUnmapTexture2DINTEL, (texture, level), (GLuint texture, GLint level))
#define glUnmapTexture2DINTEL_defined
#endif // defined(GL_INTEL_map_texture)
#if defined(GL_INTEL_parallel_arrays)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorPointervINTEL, (size, type, pointer), (GLint size, GLenum type, const void **pointer))
#define glColorPointervINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalPointervINTEL, (type, pointer), (GLenum type, const void **pointer))
#define glNormalPointervINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordPointervINTEL, (size, type, pointer), (GLint size, GLenum type, const void **pointer))
#define glTexCoordPointervINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexPointervINTEL, (size, type, pointer), (GLint size, GLenum type, const void **pointer))
#define glVertexPointervINTEL_defined
#endif // defined(GL_INTEL_parallel_arrays)
#if defined(GL_INTEL_performance_query)
#ifndef glBeginPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glBeginPerfQueryINTEL_defined
#endif
#ifndef glCreatePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreatePerfQueryINTEL, (queryId, queryHandle), (GLuint queryId, GLuint *queryHandle))
#define glCreatePerfQueryINTEL_defined
#endif
#ifndef glDeletePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeletePerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glDeletePerfQueryINTEL_defined
#endif
#ifndef glEndPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glEndPerfQueryINTEL_defined
#endif
#ifndef glGetFirstPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFirstPerfQueryIdINTEL, (queryId), (GLuint *queryId))
#define glGetFirstPerfQueryIdINTEL_defined
#endif
#ifndef glGetNextPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNextPerfQueryIdINTEL, (queryId, nextQueryId), (GLuint queryId, GLuint *nextQueryId))
#define glGetNextPerfQueryIdINTEL_defined
#endif
#ifndef glGetPerfCounterInfoINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfCounterInfoINTEL, (queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue), (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue))
#define glGetPerfCounterInfoINTEL_defined
#endif
#ifndef glGetPerfQueryDataINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfQueryDataINTEL, (queryHandle, flags, dataSize, data, bytesWritten), (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten))
#define glGetPerfQueryDataINTEL_defined
#endif
#ifndef glGetPerfQueryIdByNameINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfQueryIdByNameINTEL, (queryName, queryId), (GLchar *queryName, GLuint *queryId))
#define glGetPerfQueryIdByNameINTEL_defined
#endif
#ifndef glGetPerfQueryInfoINTEL_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPerfQueryInfoINTEL, (queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask), (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask))
#define glGetPerfQueryInfoINTEL_defined
#endif
#endif // defined(GL_INTEL_performance_query)
#if defined(GL_KHR_blend_equation_advanced)
#ifndef glBlendBarrierKHR_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendBarrierKHR, (), (void))
#define glBlendBarrierKHR_defined
#endif
#endif // defined(GL_KHR_blend_equation_advanced)
#if defined(GL_KHR_parallel_shader_compile)
#ifndef glMaxShaderCompilerThreadsKHR_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMaxShaderCompilerThreadsKHR, (count), (GLuint count))
#define glMaxShaderCompilerThreadsKHR_defined
#endif
#endif // defined(GL_KHR_parallel_shader_compile)
#if defined(GL_MESA_resize_buffers)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResizeBuffersMESA, (), (void))
#define glResizeBuffersMESA_defined
#endif // defined(GL_MESA_resize_buffers)
#if defined(GL_MESA_window_pos)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2dMESA, (x, y), (GLdouble x, GLdouble y))
#define glWindowPos2dMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2dvMESA, (v), (const GLdouble *v))
#define glWindowPos2dvMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2fMESA, (x, y), (GLfloat x, GLfloat y))
#define glWindowPos2fMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2fvMESA, (v), (const GLfloat *v))
#define glWindowPos2fvMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2iMESA, (x, y), (GLint x, GLint y))
#define glWindowPos2iMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2ivMESA, (v), (const GLint *v))
#define glWindowPos2ivMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2sMESA, (x, y), (GLshort x, GLshort y))
#define glWindowPos2sMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2svMESA, (v), (const GLshort *v))
#define glWindowPos2svMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3dMESA, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glWindowPos3dMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3dvMESA, (v), (const GLdouble *v))
#define glWindowPos3dvMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3fMESA, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glWindowPos3fMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3fvMESA, (v), (const GLfloat *v))
#define glWindowPos3fvMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3iMESA, (x, y, z), (GLint x, GLint y, GLint z))
#define glWindowPos3iMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3ivMESA, (v), (const GLint *v))
#define glWindowPos3ivMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3sMESA, (x, y, z), (GLshort x, GLshort y, GLshort z))
#define glWindowPos3sMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3svMESA, (v), (const GLshort *v))
#define glWindowPos3svMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4dMESA, (x, y, z, w), (GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glWindowPos4dMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4dvMESA, (v), (const GLdouble *v))
#define glWindowPos4dvMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4fMESA, (x, y, z, w), (GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glWindowPos4fMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4fvMESA, (v), (const GLfloat *v))
#define glWindowPos4fvMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4iMESA, (x, y, z, w), (GLint x, GLint y, GLint z, GLint w))
#define glWindowPos4iMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4ivMESA, (v), (const GLint *v))
#define glWindowPos4ivMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4sMESA, (x, y, z, w), (GLshort x, GLshort y, GLshort z, GLshort w))
#define glWindowPos4sMESA_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos4svMESA, (v), (const GLshort *v))
#define glWindowPos4svMESA_defined
#endif // defined(GL_MESA_window_pos)
#if defined(GL_NVX_conditional_render)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginConditionalRenderNVX, (id), (GLuint id))
#define glBeginConditionalRenderNVX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndConditionalRenderNVX, (), (void))
#define glEndConditionalRenderNVX_defined
#endif // defined(GL_NVX_conditional_render)
#if defined(GL_NVX_linked_gpu_multicast)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLGPUCopyImageSubDataNVX, (sourceGpu, destinationGpuMask, srcName, srcTarget, srcLevel, srcX, srxY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth), (GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth))
#define glLGPUCopyImageSubDataNVX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLGPUInterlockNVX, (), (void))
#define glLGPUInterlockNVX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLGPUNamedBufferSubDataNVX, (gpuMask, buffer, offset, size, data), (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data))
#define glLGPUNamedBufferSubDataNVX_defined
#endif // defined(GL_NVX_linked_gpu_multicast)
#if defined(GL_NV_alpha_to_coverage_dither_control)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAlphaToCoverageDitherControlNV, (mode), (GLenum mode))
#define glAlphaToCoverageDitherControlNV_defined
#endif // defined(GL_NV_alpha_to_coverage_dither_control)
#if defined(GL_NV_bindless_multi_draw_indirect)
#ifndef glMultiDrawArraysIndirectBindlessNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectBindlessNV, (mode, indirect, drawCount, stride, vertexBufferCount), (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawArraysIndirectBindlessNV_defined
#endif
#ifndef glMultiDrawElementsIndirectBindlessNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectBindlessNV, (mode, type, indirect, drawCount, stride, vertexBufferCount), (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawElementsIndirectBindlessNV_defined
#endif
#endif // defined(GL_NV_bindless_multi_draw_indirect)
#if defined(GL_NV_bindless_multi_draw_indirect_count)
#ifndef glMultiDrawArraysIndirectBindlessCountNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectBindlessCountNV, (mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount), (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawArraysIndirectBindlessCountNV_defined
#endif
#ifndef glMultiDrawElementsIndirectBindlessCountNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectBindlessCountNV, (mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount), (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount))
#define glMultiDrawElementsIndirectBindlessCountNV_defined
#endif
#endif // defined(GL_NV_bindless_multi_draw_indirect_count)
#if defined(GL_NV_bindless_texture)
#ifndef glGetImageHandleNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetImageHandleNV, (texture, level, layered, layer, format), (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))
#define glGetImageHandleNV_defined
#endif
#ifndef glGetTextureHandleNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureHandleNV, (texture), (GLuint texture))
#define glGetTextureHandleNV_defined
#endif
#ifndef glGetTextureSamplerHandleNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureSamplerHandleNV, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleNV_defined
#endif
#ifndef glIsImageHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsImageHandleResidentNV, (handle), (GLuint64 handle))
#define glIsImageHandleResidentNV_defined
#endif
#ifndef glIsTextureHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glIsTextureHandleResidentNV_defined
#endif
#ifndef glMakeImageHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeImageHandleNonResidentNV_defined
#endif
#ifndef glMakeImageHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleResidentNV, (handle, access), (GLuint64 handle, GLenum access))
#define glMakeImageHandleResidentNV_defined
#endif
#ifndef glMakeTextureHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleNonResidentNV_defined
#endif
#ifndef glMakeTextureHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleResidentNV_defined
#endif
#ifndef glProgramUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64NV, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64NV_defined
#endif
#ifndef glProgramUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64vNV, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vNV_defined
#endif
#ifndef glUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64NV, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64NV_defined
#endif
#ifndef glUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vNV_defined
#endif
#endif // defined(GL_NV_bindless_texture)
#if defined(GL_NV_blend_equation_advanced)
#ifndef glBlendBarrierNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendBarrierNV, (), (void))
#define glBlendBarrierNV_defined
#endif
#ifndef glBlendParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendParameteriNV, (pname, value), (GLenum pname, GLint value))
#define glBlendParameteriNV_defined
#endif
#endif // defined(GL_NV_blend_equation_advanced)
#if defined(GL_NV_clip_space_w_scaling)
#ifndef glViewportPositionWScaleNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportPositionWScaleNV, (index, xcoeff, ycoeff), (GLuint index, GLfloat xcoeff, GLfloat ycoeff))
#define glViewportPositionWScaleNV_defined
#endif
#endif // defined(GL_NV_clip_space_w_scaling)
#if defined(GL_NV_command_list)
#ifndef glCallCommandListNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCallCommandListNV, (list), (GLuint list))
#define glCallCommandListNV_defined
#endif
#ifndef glCommandListSegmentsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCommandListSegmentsNV, (list, segments), (GLuint list, GLuint segments))
#define glCommandListSegmentsNV_defined
#endif
#ifndef glCompileCommandListNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileCommandListNV, (list), (GLuint list))
#define glCompileCommandListNV_defined
#endif
#ifndef glCreateCommandListsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateCommandListsNV, (n, lists), (GLsizei n, GLuint *lists))
#define glCreateCommandListsNV_defined
#endif
#ifndef glCreateStatesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateStatesNV, (n, states), (GLsizei n, GLuint *states))
#define glCreateStatesNV_defined
#endif
#ifndef glDeleteCommandListsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteCommandListsNV, (n, lists), (GLsizei n, const GLuint *lists))
#define glDeleteCommandListsNV_defined
#endif
#ifndef glDeleteStatesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteStatesNV, (n, states), (GLsizei n, const GLuint *states))
#define glDeleteStatesNV_defined
#endif
#ifndef glDrawCommandsAddressNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsAddressNV, (primitiveMode, indirects, sizes, count), (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count))
#define glDrawCommandsAddressNV_defined
#endif
#ifndef glDrawCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsNV, (primitiveMode, buffer, indirects, sizes, count), (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count))
#define glDrawCommandsNV_defined
#endif
#ifndef glDrawCommandsStatesAddressNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsStatesAddressNV, (indirects, sizes, states, fbos, count), (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count))
#define glDrawCommandsStatesAddressNV_defined
#endif
#ifndef glDrawCommandsStatesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawCommandsStatesNV, (buffer, indirects, sizes, states, fbos, count), (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count))
#define glDrawCommandsStatesNV_defined
#endif
#ifndef glGetCommandHeaderNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetCommandHeaderNV, (tokenID, size), (GLenum tokenID, GLuint size))
#define glGetCommandHeaderNV_defined
#endif
#ifndef glGetStageIndexNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLushort, APIENTRY, glGetStageIndexNV, (shadertype), (GLenum shadertype))
#define glGetStageIndexNV_defined
#endif
#ifndef glIsCommandListNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsCommandListNV, (list), (GLuint list))
#define glIsCommandListNV_defined
#endif
#ifndef glIsStateNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsStateNV, (state), (GLuint state))
#define glIsStateNV_defined
#endif
#ifndef glListDrawCommandsStatesClientNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glListDrawCommandsStatesClientNV, (list, segment, indirects, sizes, states, fbos, count), (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count))
#define glListDrawCommandsStatesClientNV_defined
#endif
#ifndef glStateCaptureNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStateCaptureNV, (state, mode), (GLuint state, GLenum mode))
#define glStateCaptureNV_defined
#endif
#endif // defined(GL_NV_command_list)
#if defined(GL_NV_conditional_render)
#ifndef glBeginConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginConditionalRenderNV, (id, mode), (GLuint id, GLenum mode))
#define glBeginConditionalRenderNV_defined
#endif
#ifndef glEndConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndConditionalRenderNV, (), (void))
#define glEndConditionalRenderNV_defined
#endif
#endif // defined(GL_NV_conditional_render)
#if defined(GL_NV_conservative_raster)
#ifndef glSubpixelPrecisionBiasNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSubpixelPrecisionBiasNV, (xbits, ybits), (GLuint xbits, GLuint ybits))
#define glSubpixelPrecisionBiasNV_defined
#endif
#endif // defined(GL_NV_conservative_raster)
#if defined(GL_NV_conservative_raster_dilate)
#ifndef glConservativeRasterParameterfNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConservativeRasterParameterfNV, (pname, value), (GLenum pname, GLfloat value))
#define glConservativeRasterParameterfNV_defined
#endif
#endif // defined(GL_NV_conservative_raster_dilate)
#if defined(GL_NV_conservative_raster_pre_snap_triangles)
#ifndef glConservativeRasterParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConservativeRasterParameteriNV, (pname, param), (GLenum pname, GLint param))
#define glConservativeRasterParameteriNV_defined
#endif
#endif // defined(GL_NV_conservative_raster_pre_snap_triangles)
#if defined(GL_NV_copy_image)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyImageSubDataNV, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth))
#define glCopyImageSubDataNV_defined
#endif // defined(GL_NV_copy_image)
#if defined(GL_NV_depth_buffer_float)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepthdNV, (depth), (GLdouble depth))
#define glClearDepthdNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthBoundsdNV, (zmin, zmax), (GLdouble zmin, GLdouble zmax))
#define glDepthBoundsdNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangedNV, (zNear, zFar), (GLdouble zNear, GLdouble zFar))
#define glDepthRangedNV_defined
#endif // defined(GL_NV_depth_buffer_float)
#if defined(GL_NV_draw_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTextureNV, (texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1), (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1))
#define glDrawTextureNV_defined
#endif // defined(GL_NV_draw_texture)
#if defined(GL_NV_draw_vulkan_image)
#ifndef glDrawVkImageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawVkImageNV, (vkImage, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1), (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1))
#define glDrawVkImageNV_defined
#endif
#ifndef glGetVkProcAddrNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLVULKANPROCNV, APIENTRY, glGetVkProcAddrNV, (name), (const GLchar *name))
#define glGetVkProcAddrNV_defined
#endif
#ifndef glSignalVkFenceNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSignalVkFenceNV, (vkFence), (GLuint64 vkFence))
#define glSignalVkFenceNV_defined
#endif
#ifndef glSignalVkSemaphoreNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSignalVkSemaphoreNV, (vkSemaphore), (GLuint64 vkSemaphore))
#define glSignalVkSemaphoreNV_defined
#endif
#ifndef glWaitVkSemaphoreNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWaitVkSemaphoreNV, (vkSemaphore), (GLuint64 vkSemaphore))
#define glWaitVkSemaphoreNV_defined
#endif
#endif // defined(GL_NV_draw_vulkan_image)
#if defined(GL_NV_evaluators)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEvalMapsNV, (target, mode), (GLenum target, GLenum mode))
#define glEvalMapsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMapAttribParameterfvNV, (target, index, pname, params), (GLenum target, GLuint index, GLenum pname, GLfloat *params))
#define glGetMapAttribParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMapAttribParameterivNV, (target, index, pname, params), (GLenum target, GLuint index, GLenum pname, GLint *params))
#define glGetMapAttribParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMapControlPointsNV, (target, index, type, ustride, vstride, packed, points), (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points))
#define glGetMapControlPointsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMapParameterfvNV, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetMapParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMapParameterivNV, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetMapParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapControlPointsNV, (target, index, type, ustride, vstride, uorder, vorder, packed, points), (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points))
#define glMapControlPointsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapParameterfvNV, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glMapParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapParameterivNV, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glMapParameterivNV_defined
#endif // defined(GL_NV_evaluators)
#if defined(GL_NV_explicit_multisample)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultisamplefvNV, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleMaskIndexedNV, (index, mask), (GLuint index, GLbitfield mask))
#define glSampleMaskIndexedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexRenderbufferNV, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glTexRenderbufferNV_defined
#endif // defined(GL_NV_explicit_multisample)
#if defined(GL_NV_fence)
#ifndef glDeleteFencesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteFencesNV, (n, fences), (GLsizei n, const GLuint *fences))
#define glDeleteFencesNV_defined
#endif
#ifndef glFinishFenceNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFinishFenceNV, (fence), (GLuint fence))
#define glFinishFenceNV_defined
#endif
#ifndef glGenFencesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenFencesNV, (n, fences), (GLsizei n, GLuint *fences))
#define glGenFencesNV_defined
#endif
#ifndef glGetFenceivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFenceivNV, (fence, pname, params), (GLuint fence, GLenum pname, GLint *params))
#define glGetFenceivNV_defined
#endif
#ifndef glIsFenceNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsFenceNV, (fence), (GLuint fence))
#define glIsFenceNV_defined
#endif
#ifndef glSetFenceNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSetFenceNV, (fence, condition), (GLuint fence, GLenum condition))
#define glSetFenceNV_defined
#endif
#ifndef glTestFenceNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glTestFenceNV, (fence), (GLuint fence))
#define glTestFenceNV_defined
#endif
#endif // defined(GL_NV_fence)
#if defined(GL_NV_fragment_coverage_to_color)
#ifndef glFragmentCoverageColorNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentCoverageColorNV, (color), (GLuint color))
#define glFragmentCoverageColorNV_defined
#endif
#endif // defined(GL_NV_fragment_coverage_to_color)
#if defined(GL_NV_fragment_program)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramNamedParameterdvNV, (id, len, name, params), (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params))
#define glGetProgramNamedParameterdvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramNamedParameterfvNV, (id, len, name, params), (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params))
#define glGetProgramNamedParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramNamedParameter4dNV, (id, len, name, x, y, z, w), (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glProgramNamedParameter4dNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramNamedParameter4dvNV, (id, len, name, v), (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v))
#define glProgramNamedParameter4dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramNamedParameter4fNV, (id, len, name, x, y, z, w), (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glProgramNamedParameter4fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramNamedParameter4fvNV, (id, len, name, v), (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v))
#define glProgramNamedParameter4fvNV_defined
#endif // defined(GL_NV_fragment_program)
#if defined(GL_NV_framebuffer_mixed_samples)
#ifndef glCoverageModulationNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverageModulationNV, (components), (GLenum components))
#define glCoverageModulationNV_defined
#endif
#ifndef glCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverageModulationTableNV, (n, v), (GLsizei n, const GLfloat *v))
#define glCoverageModulationTableNV_defined
#endif
#ifndef glGetCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCoverageModulationTableNV, (bufsize, v), (GLsizei bufsize, GLfloat *v))
#define glGetCoverageModulationTableNV_defined
#endif
#endif // defined(GL_NV_framebuffer_mixed_samples)
#if defined(GL_NV_framebuffer_multisample_coverage)
#ifndef glRenderbufferStorageMultisampleCoverageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorageMultisampleCoverageNV, (target, coverageSamples, colorSamples, internalformat, width, height), (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleCoverageNV_defined
#endif
#endif // defined(GL_NV_framebuffer_multisample_coverage)
#if defined(GL_NV_geometry_program4)
#ifndef glFramebufferTextureEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureEXT, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTextureEXT_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureFaceEXT, (target, attachment, texture, level, face), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face))
#define glFramebufferTextureFaceEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramVertexLimitNV, (target, limit), (GLenum target, GLint limit))
#define glProgramVertexLimitNV_defined
#endif // defined(GL_NV_geometry_program4)
#if defined(GL_NV_gpu_multicast)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastBarrierNV, (), (void))
#define glMulticastBarrierNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastBlitFramebufferNV, (srcGpu, dstGpu, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glMulticastBlitFramebufferNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastBufferSubDataNV, (gpuMask, buffer, offset, size, data), (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data))
#define glMulticastBufferSubDataNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastCopyBufferSubDataNV, (readGpu, writeGpuMask, readBuffer, writeBuffer, readOffset, writeOffset, size), (GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glMulticastCopyBufferSubDataNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastCopyImageSubDataNV, (srcGpu, dstGpuMask, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glMulticastCopyImageSubDataNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastFramebufferSampleLocationsfvNV, (gpu, framebuffer, start, count, v), (GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))
#define glMulticastFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastGetQueryObjecti64vNV, (gpu, id, pname, params), (GLuint gpu, GLuint id, GLenum pname, GLint64 *params))
#define glMulticastGetQueryObjecti64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastGetQueryObjectivNV, (gpu, id, pname, params), (GLuint gpu, GLuint id, GLenum pname, GLint *params))
#define glMulticastGetQueryObjectivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastGetQueryObjectui64vNV, (gpu, id, pname, params), (GLuint gpu, GLuint id, GLenum pname, GLuint64 *params))
#define glMulticastGetQueryObjectui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastGetQueryObjectuivNV, (gpu, id, pname, params), (GLuint gpu, GLuint id, GLenum pname, GLuint *params))
#define glMulticastGetQueryObjectuivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMulticastWaitSyncNV, (signalGpu, waitGpuMask), (GLuint signalGpu, GLbitfield waitGpuMask))
#define glMulticastWaitSyncNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderGpuMaskNV, (mask), (GLbitfield mask))
#define glRenderGpuMaskNV_defined
#endif // defined(GL_NV_gpu_multicast)
#if defined(GL_NV_gpu_program4)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramEnvParameterIivNV, (target, index, params), (GLenum target, GLuint index, GLint *params))
#define glGetProgramEnvParameterIivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramEnvParameterIuivNV, (target, index, params), (GLenum target, GLuint index, GLuint *params))
#define glGetProgramEnvParameterIuivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramLocalParameterIivNV, (target, index, params), (GLenum target, GLuint index, GLint *params))
#define glGetProgramLocalParameterIivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramLocalParameterIuivNV, (target, index, params), (GLenum target, GLuint index, GLuint *params))
#define glGetProgramLocalParameterIuivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameterI4iNV, (target, index, x, y, z, w), (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glProgramEnvParameterI4iNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameterI4ivNV, (target, index, params), (GLenum target, GLuint index, const GLint *params))
#define glProgramEnvParameterI4ivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameterI4uiNV, (target, index, x, y, z, w), (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glProgramEnvParameterI4uiNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParameterI4uivNV, (target, index, params), (GLenum target, GLuint index, const GLuint *params))
#define glProgramEnvParameterI4uivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParametersI4ivNV, (target, index, count, params), (GLenum target, GLuint index, GLsizei count, const GLint *params))
#define glProgramEnvParametersI4ivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramEnvParametersI4uivNV, (target, index, count, params), (GLenum target, GLuint index, GLsizei count, const GLuint *params))
#define glProgramEnvParametersI4uivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameterI4iNV, (target, index, x, y, z, w), (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glProgramLocalParameterI4iNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameterI4ivNV, (target, index, params), (GLenum target, GLuint index, const GLint *params))
#define glProgramLocalParameterI4ivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameterI4uiNV, (target, index, x, y, z, w), (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glProgramLocalParameterI4uiNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParameterI4uivNV, (target, index, params), (GLenum target, GLuint index, const GLuint *params))
#define glProgramLocalParameterI4uivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParametersI4ivNV, (target, index, count, params), (GLenum target, GLuint index, GLsizei count, const GLint *params))
#define glProgramLocalParametersI4ivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramLocalParametersI4uivNV, (target, index, count, params), (GLenum target, GLuint index, GLsizei count, const GLuint *params))
#define glProgramLocalParametersI4uivNV_defined
#endif // defined(GL_NV_gpu_program4)
#if defined(GL_NV_gpu_program5)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramSubroutineParameteruivNV, (target, index, param), (GLenum target, GLuint index, GLuint *param))
#define glGetProgramSubroutineParameteruivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramSubroutineParametersuivNV, (target, count, params), (GLenum target, GLsizei count, const GLuint *params))
#define glProgramSubroutineParametersuivNV_defined
#endif // defined(GL_NV_gpu_program5)
#if defined(GL_NV_half_float)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor3hNV, (red, green, blue), (GLhalfNV red, GLhalfNV green, GLhalfNV blue))
#define glColor3hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor3hvNV, (v), (const GLhalfNV *v))
#define glColor3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4hNV, (red, green, blue, alpha), (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha))
#define glColor4hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4hvNV, (v), (const GLhalfNV *v))
#define glColor4hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordhNV, (fog), (GLhalfNV fog))
#define glFogCoordhNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordhvNV, (fog), (const GLhalfNV *fog))
#define glFogCoordhvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1hNV, (target, s), (GLenum target, GLhalfNV s))
#define glMultiTexCoord1hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1hvNV, (target, v), (GLenum target, const GLhalfNV *v))
#define glMultiTexCoord1hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2hNV, (target, s, t), (GLenum target, GLhalfNV s, GLhalfNV t))
#define glMultiTexCoord2hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2hvNV, (target, v), (GLenum target, const GLhalfNV *v))
#define glMultiTexCoord2hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3hNV, (target, s, t, r), (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r))
#define glMultiTexCoord3hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3hvNV, (target, v), (GLenum target, const GLhalfNV *v))
#define glMultiTexCoord3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4hNV, (target, s, t, r, q), (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q))
#define glMultiTexCoord4hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4hvNV, (target, v), (GLenum target, const GLhalfNV *v))
#define glMultiTexCoord4hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormal3hNV, (nx, ny, nz), (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz))
#define glNormal3hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormal3hvNV, (v), (const GLhalfNV *v))
#define glNormal3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3hNV, (red, green, blue), (GLhalfNV red, GLhalfNV green, GLhalfNV blue))
#define glSecondaryColor3hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3hvNV, (v), (const GLhalfNV *v))
#define glSecondaryColor3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord1hNV, (s), (GLhalfNV s))
#define glTexCoord1hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord1hvNV, (v), (const GLhalfNV *v))
#define glTexCoord1hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2hNV, (s, t), (GLhalfNV s, GLhalfNV t))
#define glTexCoord2hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2hvNV, (v), (const GLhalfNV *v))
#define glTexCoord2hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord3hNV, (s, t, r), (GLhalfNV s, GLhalfNV t, GLhalfNV r))
#define glTexCoord3hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord3hvNV, (v), (const GLhalfNV *v))
#define glTexCoord3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4hNV, (s, t, r, q), (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q))
#define glTexCoord4hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4hvNV, (v), (const GLhalfNV *v))
#define glTexCoord4hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex2hNV, (x, y), (GLhalfNV x, GLhalfNV y))
#define glVertex2hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex2hvNV, (v), (const GLhalfNV *v))
#define glVertex2hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex3hNV, (x, y, z), (GLhalfNV x, GLhalfNV y, GLhalfNV z))
#define glVertex3hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex3hvNV, (v), (const GLhalfNV *v))
#define glVertex3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex4hNV, (x, y, z, w), (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w))
#define glVertex4hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex4hvNV, (v), (const GLhalfNV *v))
#define glVertex4hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1hNV, (index, x), (GLuint index, GLhalfNV x))
#define glVertexAttrib1hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1hvNV, (index, v), (GLuint index, const GLhalfNV *v))
#define glVertexAttrib1hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2hNV, (index, x, y), (GLuint index, GLhalfNV x, GLhalfNV y))
#define glVertexAttrib2hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2hvNV, (index, v), (GLuint index, const GLhalfNV *v))
#define glVertexAttrib2hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3hNV, (index, x, y, z), (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z))
#define glVertexAttrib3hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3hvNV, (index, v), (GLuint index, const GLhalfNV *v))
#define glVertexAttrib3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4hNV, (index, x, y, z, w), (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w))
#define glVertexAttrib4hNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4hvNV, (index, v), (GLuint index, const GLhalfNV *v))
#define glVertexAttrib4hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs1hvNV, (index, n, v), (GLuint index, GLsizei n, const GLhalfNV *v))
#define glVertexAttribs1hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs2hvNV, (index, n, v), (GLuint index, GLsizei n, const GLhalfNV *v))
#define glVertexAttribs2hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs3hvNV, (index, n, v), (GLuint index, GLsizei n, const GLhalfNV *v))
#define glVertexAttribs3hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs4hvNV, (index, n, v), (GLuint index, GLsizei n, const GLhalfNV *v))
#define glVertexAttribs4hvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexWeighthNV, (weight), (GLhalfNV weight))
#define glVertexWeighthNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexWeighthvNV, (weight), (const GLhalfNV *weight))
#define glVertexWeighthvNV_defined
#endif // defined(GL_NV_half_float)
#if defined(GL_NV_internalformat_sample_query)
#ifndef glGetInternalformatSampleivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformatSampleivNV, (target, internalformat, samples, pname, bufSize, params), (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformatSampleivNV_defined
#endif
#endif // defined(GL_NV_internalformat_sample_query)
#if defined(GL_NV_occlusion_query)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginOcclusionQueryNV, (id), (GLuint id))
#define glBeginOcclusionQueryNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteOcclusionQueriesNV, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteOcclusionQueriesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndOcclusionQueryNV, (), (void))
#define glEndOcclusionQueryNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenOcclusionQueriesNV, (n, ids), (GLsizei n, GLuint *ids))
#define glGenOcclusionQueriesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetOcclusionQueryivNV, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetOcclusionQueryivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetOcclusionQueryuivNV, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetOcclusionQueryuivNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsOcclusionQueryNV, (id), (GLuint id))
#define glIsOcclusionQueryNV_defined
#endif // defined(GL_NV_occlusion_query)
#if defined(GL_NV_parameter_buffer_object)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramBufferParametersIivNV, (target, bindingIndex, wordIndex, count, params), (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params))
#define glProgramBufferParametersIivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramBufferParametersIuivNV, (target, bindingIndex, wordIndex, count, params), (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params))
#define glProgramBufferParametersIuivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramBufferParametersfvNV, (target, bindingIndex, wordIndex, count, params), (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params))
#define glProgramBufferParametersfvNV_defined
#endif // defined(GL_NV_parameter_buffer_object)
#if defined(GL_NV_path_rendering)
#ifndef glCopyPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyPathNV, (resultPath, srcPath), (GLuint resultPath, GLuint srcPath))
#define glCopyPathNV_defined
#endif
#ifndef glCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverFillPathInstancedNV_defined
#endif
#ifndef glCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverFillPathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverFillPathNV_defined
#endif
#ifndef glCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverStrokePathInstancedNV_defined
#endif
#ifndef glCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCoverStrokePathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverStrokePathNV_defined
#endif
#ifndef glDeletePathsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeletePathsNV, (path, range), (GLuint path, GLsizei range))
#define glDeletePathsNV_defined
#endif
#ifndef glGenPathsNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGenPathsNV, (range), (GLsizei range))
#define glGenPathsNV_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathColorGenfvNV, (color, pname, value), (GLenum color, GLenum pname, GLfloat *value))
#define glGetPathColorGenfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathColorGenivNV, (color, pname, value), (GLenum color, GLenum pname, GLint *value))
#define glGetPathColorGenivNV_defined
#ifndef glGetPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathCommandsNV, (path, commands), (GLuint path, GLubyte *commands))
#define glGetPathCommandsNV_defined
#endif
#ifndef glGetPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathCoordsNV, (path, coords), (GLuint path, GLfloat *coords))
#define glGetPathCoordsNV_defined
#endif
#ifndef glGetPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathDashArrayNV, (path, dashArray), (GLuint path, GLfloat *dashArray))
#define glGetPathDashArrayNV_defined
#endif
#ifndef glGetPathLengthNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLfloat, APIENTRY, glGetPathLengthNV, (path, startSegment, numSegments), (GLuint path, GLsizei startSegment, GLsizei numSegments))
#define glGetPathLengthNV_defined
#endif
#ifndef glGetPathMetricRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathMetricRangeNV, (metricQueryMask, firstPathName, numPaths, stride, metrics), (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricRangeNV_defined
#endif
#ifndef glGetPathMetricsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathMetricsNV, (metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics), (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricsNV_defined
#endif
#ifndef glGetPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat *value))
#define glGetPathParameterfvNV_defined
#endif
#ifndef glGetPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, GLint *value))
#define glGetPathParameterivNV_defined
#endif
#ifndef glGetPathSpacingNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathSpacingNV, (pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing), (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing))
#define glGetPathSpacingNV_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathTexGenfvNV, (texCoordSet, pname, value), (GLenum texCoordSet, GLenum pname, GLfloat *value))
#define glGetPathTexGenfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPathTexGenivNV, (texCoordSet, pname, value), (GLenum texCoordSet, GLenum pname, GLint *value))
#define glGetPathTexGenivNV_defined
#ifndef glGetProgramResourcefvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourcefvNV, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params))
#define glGetProgramResourcefvNV_defined
#endif
#ifndef glInterpolatePathsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInterpolatePathsNV, (resultPath, pathA, pathB, weight), (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight))
#define glInterpolatePathsNV_defined
#endif
#ifndef glIsPathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsPathNV, (path), (GLuint path))
#define glIsPathNV_defined
#endif
#ifndef glIsPointInFillPathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsPointInFillPathNV, (path, mask, x, y), (GLuint path, GLuint mask, GLfloat x, GLfloat y))
#define glIsPointInFillPathNV_defined
#endif
#ifndef glIsPointInStrokePathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsPointInStrokePathNV, (path, x, y), (GLuint path, GLfloat x, GLfloat y))
#define glIsPointInStrokePathNV_defined
#endif
#ifndef glMatrixLoad3x2fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoad3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x2fNV_defined
#endif
#ifndef glMatrixLoad3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoad3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x3fNV_defined
#endif
#ifndef glMatrixLoadTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixLoadTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoadTranspose3x3fNV_defined
#endif
#ifndef glMatrixMult3x2fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMult3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x2fNV_defined
#endif
#ifndef glMatrixMult3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMult3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x3fNV_defined
#endif
#ifndef glMatrixMultTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMatrixMultTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMultTranspose3x3fNV_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathColorGenNV, (color, genMode, colorFormat, coeffs), (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs))
#define glPathColorGenNV_defined
#ifndef glPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathCommandsNV, (path, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCommandsNV_defined
#endif
#ifndef glPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathCoordsNV, (path, numCoords, coordType, coords), (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCoordsNV_defined
#endif
#ifndef glPathCoverDepthFuncNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathCoverDepthFuncNV, (func), (GLenum func))
#define glPathCoverDepthFuncNV_defined
#endif
#ifndef glPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathDashArrayNV, (path, dashCount, dashArray), (GLuint path, GLsizei dashCount, const GLfloat *dashArray))
#define glPathDashArrayNV_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathFogGenNV, (genMode), (GLenum genMode))
#define glPathFogGenNV_defined
#ifndef glPathGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glPathGlyphIndexArrayNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphIndexArrayNV_defined
#endif
#ifndef glPathGlyphIndexRangeNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glPathGlyphIndexRangeNV, (fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount), (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]))
#define glPathGlyphIndexRangeNV_defined
#endif
#ifndef glPathGlyphRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathGlyphRangeNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphRangeNV_defined
#endif
#ifndef glPathGlyphsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathGlyphsNV, (firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphsNV_defined
#endif
#ifndef glPathMemoryGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glPathMemoryGlyphIndexArrayNV, (firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathMemoryGlyphIndexArrayNV_defined
#endif
#ifndef glPathParameterfNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameterfNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat value))
#define glPathParameterfNV_defined
#endif
#ifndef glPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, const GLfloat *value))
#define glPathParameterfvNV_defined
#endif
#ifndef glPathParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameteriNV, (path, pname, value), (GLuint path, GLenum pname, GLint value))
#define glPathParameteriNV_defined
#endif
#ifndef glPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, const GLint *value))
#define glPathParameterivNV_defined
#endif
#ifndef glPathStencilDepthOffsetNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathStencilDepthOffsetNV, (factor, units), (GLfloat factor, GLfloat units))
#define glPathStencilDepthOffsetNV_defined
#endif
#ifndef glPathStencilFuncNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathStencilFuncNV, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glPathStencilFuncNV_defined
#endif
#ifndef glPathStringNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathStringNV, (path, format, length, pathString), (GLuint path, GLenum format, GLsizei length, const void *pathString))
#define glPathStringNV_defined
#endif
#ifndef glPathSubCommandsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathSubCommandsNV, (path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCommandsNV_defined
#endif
#ifndef glPathSubCoordsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathSubCoordsNV, (path, coordStart, numCoords, coordType, coords), (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCoordsNV_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPathTexGenNV, (texCoordSet, genMode, components, coeffs), (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs))
#define glPathTexGenNV_defined
#ifndef glPointAlongPathNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glPointAlongPathNV, (path, startSegment, numSegments, distance, x, y, tangentX, tangentY), (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY))
#define glPointAlongPathNV_defined
#endif
#ifndef glProgramPathFragmentInputGenNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramPathFragmentInputGenNV, (program, location, genMode, components, coeffs), (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs))
#define glProgramPathFragmentInputGenNV_defined
#endif
#ifndef glStencilFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilFillPathInstancedNV_defined
#endif
#ifndef glStencilFillPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFillPathNV, (path, fillMode, mask), (GLuint path, GLenum fillMode, GLuint mask))
#define glStencilFillPathNV_defined
#endif
#ifndef glStencilStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilStrokePathInstancedNV_defined
#endif
#ifndef glStencilStrokePathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilStrokePathNV, (path, reference, mask), (GLuint path, GLint reference, GLuint mask))
#define glStencilStrokePathNV_defined
#endif
#ifndef glStencilThenCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverFillPathInstancedNV_defined
#endif
#ifndef glStencilThenCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverFillPathNV, (path, fillMode, mask, coverMode), (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode))
#define glStencilThenCoverFillPathNV_defined
#endif
#ifndef glStencilThenCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverStrokePathInstancedNV_defined
#endif
#ifndef glStencilThenCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilThenCoverStrokePathNV, (path, reference, mask, coverMode), (GLuint path, GLint reference, GLuint mask, GLenum coverMode))
#define glStencilThenCoverStrokePathNV_defined
#endif
#ifndef glTransformPathNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformPathNV, (resultPath, srcPath, transformType, transformValues), (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues))
#define glTransformPathNV_defined
#endif
#ifndef glWeightPathsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWeightPathsNV, (resultPath, numPaths, paths, weights), (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights))
#define glWeightPathsNV_defined
#endif
#endif // defined(GL_NV_path_rendering)
#if defined(GL_NV_pixel_data_range)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushPixelDataRangeNV, (target), (GLenum target))
#define glFlushPixelDataRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelDataRangeNV, (target, length, pointer), (GLenum target, GLsizei length, const void *pointer))
#define glPixelDataRangeNV_defined
#endif // defined(GL_NV_pixel_data_range)
#if defined(GL_NV_point_sprite)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameteriNV, (pname, param), (GLenum pname, GLint param))
#define glPointParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterivNV, (pname, params), (GLenum pname, const GLint *params))
#define glPointParameterivNV_defined
#endif // defined(GL_NV_point_sprite)
#if defined(GL_NV_present_video)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideoi64vNV, (video_slot, pname, params), (GLuint video_slot, GLenum pname, GLint64EXT *params))
#define glGetVideoi64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideoivNV, (video_slot, pname, params), (GLuint video_slot, GLenum pname, GLint *params))
#define glGetVideoivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideoui64vNV, (video_slot, pname, params), (GLuint video_slot, GLenum pname, GLuint64EXT *params))
#define glGetVideoui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideouivNV, (video_slot, pname, params), (GLuint video_slot, GLenum pname, GLuint *params))
#define glGetVideouivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPresentFrameDualFillNV, (video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3), (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3))
#define glPresentFrameDualFillNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPresentFrameKeyedNV, (video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1), (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1))
#define glPresentFrameKeyedNV_defined
#endif // defined(GL_NV_present_video)
#if defined(GL_NV_primitive_restart)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrimitiveRestartIndexNV, (index), (GLuint index))
#define glPrimitiveRestartIndexNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrimitiveRestartNV, (), (void))
#define glPrimitiveRestartNV_defined
#endif // defined(GL_NV_primitive_restart)
#if defined(GL_NV_query_resource)
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glQueryResourceNV, (queryType, tagId, bufSize, buffer), (GLenum queryType, GLint tagId, GLuint bufSize, GLint *buffer))
#define glQueryResourceNV_defined
#endif // defined(GL_NV_query_resource)
#if defined(GL_NV_query_resource_tag)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteQueryResourceTagNV, (n, tagIds), (GLsizei n, const GLint *tagIds))
#define glDeleteQueryResourceTagNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenQueryResourceTagNV, (n, tagIds), (GLsizei n, GLint *tagIds))
#define glGenQueryResourceTagNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glQueryResourceTagNV, (tagId, tagString), (GLint tagId, const GLchar *tagString))
#define glQueryResourceTagNV_defined
#endif // defined(GL_NV_query_resource_tag)
#if defined(GL_NV_register_combiners)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCombinerInputNV, (stage, portion, variable, input, mapping, componentUsage), (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage))
#define glCombinerInputNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCombinerOutputNV, (stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum), (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum))
#define glCombinerOutputNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCombinerParameterfNV, (pname, param), (GLenum pname, GLfloat param))
#define glCombinerParameterfNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCombinerParameterfvNV, (pname, params), (GLenum pname, const GLfloat *params))
#define glCombinerParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCombinerParameteriNV, (pname, param), (GLenum pname, GLint param))
#define glCombinerParameteriNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCombinerParameterivNV, (pname, params), (GLenum pname, const GLint *params))
#define glCombinerParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFinalCombinerInputNV, (variable, input, mapping, componentUsage), (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage))
#define glFinalCombinerInputNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCombinerInputParameterfvNV, (stage, portion, variable, pname, params), (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params))
#define glGetCombinerInputParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCombinerInputParameterivNV, (stage, portion, variable, pname, params), (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params))
#define glGetCombinerInputParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCombinerOutputParameterfvNV, (stage, portion, pname, params), (GLenum stage, GLenum portion, GLenum pname, GLfloat *params))
#define glGetCombinerOutputParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCombinerOutputParameterivNV, (stage, portion, pname, params), (GLenum stage, GLenum portion, GLenum pname, GLint *params))
#define glGetCombinerOutputParameterivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFinalCombinerInputParameterfvNV, (variable, pname, params), (GLenum variable, GLenum pname, GLfloat *params))
#define glGetFinalCombinerInputParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFinalCombinerInputParameterivNV, (variable, pname, params), (GLenum variable, GLenum pname, GLint *params))
#define glGetFinalCombinerInputParameterivNV_defined
#endif // defined(GL_NV_register_combiners)
#if defined(GL_NV_register_combiners2)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCombinerStageParameterfvNV, (stage, pname, params), (GLenum stage, GLenum pname, const GLfloat *params))
#define glCombinerStageParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCombinerStageParameterfvNV, (stage, pname, params), (GLenum stage, GLenum pname, GLfloat *params))
#define glGetCombinerStageParameterfvNV_defined
#endif // defined(GL_NV_register_combiners2)
#if defined(GL_NV_sample_locations)
#ifndef glFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferSampleLocationsfvNV, (target, start, count, v), (GLenum target, GLuint start, GLsizei count, const GLfloat *v))
#define glFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glNamedFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferSampleLocationsfvNV, (framebuffer, start, count, v), (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))
#define glNamedFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glResolveDepthValuesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResolveDepthValuesNV, (), (void))
#define glResolveDepthValuesNV_defined
#endif
#endif // defined(GL_NV_sample_locations)
#if defined(GL_NV_shader_buffer_load)
#ifndef glGetBufferParameterui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameterui64vNV, (target, pname, params), (GLenum target, GLenum pname, GLuint64EXT *params))
#define glGetBufferParameterui64vNV_defined
#endif
#ifndef glGetIntegerui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerui64vNV, (value, result), (GLenum value, GLuint64EXT *result))
#define glGetIntegerui64vNV_defined
#endif
#ifndef glGetNamedBufferParameterui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameterui64vNV, (buffer, pname, params), (GLuint buffer, GLenum pname, GLuint64EXT *params))
#define glGetNamedBufferParameterui64vNV_defined
#endif
#ifndef glIsBufferResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsBufferResidentNV, (target), (GLenum target))
#define glIsBufferResidentNV_defined
#endif
#ifndef glIsNamedBufferResidentNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsNamedBufferResidentNV, (buffer), (GLuint buffer))
#define glIsNamedBufferResidentNV_defined
#endif
#ifndef glMakeBufferNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeBufferNonResidentNV, (target), (GLenum target))
#define glMakeBufferNonResidentNV_defined
#endif
#ifndef glMakeBufferResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeBufferResidentNV, (target, access), (GLenum target, GLenum access))
#define glMakeBufferResidentNV_defined
#endif
#ifndef glMakeNamedBufferNonResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeNamedBufferNonResidentNV, (buffer), (GLuint buffer))
#define glMakeNamedBufferNonResidentNV_defined
#endif
#ifndef glMakeNamedBufferResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeNamedBufferResidentNV, (buffer, access), (GLuint buffer, GLenum access))
#define glMakeNamedBufferResidentNV_defined
#endif
#ifndef glProgramUniformui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformui64NV, (program, location, value), (GLuint program, GLint location, GLuint64EXT value))
#define glProgramUniformui64NV_defined
#endif
#ifndef glProgramUniformui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniformui64vNV_defined
#endif
#ifndef glUniformui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformui64NV, (location, value), (GLint location, GLuint64EXT value))
#define glUniformui64NV_defined
#endif
#ifndef glUniformui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniformui64vNV_defined
#endif
#endif // defined(GL_NV_shader_buffer_load)
#if defined(GL_NV_texture_barrier)
#ifndef glTextureBarrierNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBarrierNV, (), (void))
#define glTextureBarrierNV_defined
#endif
#endif // defined(GL_NV_texture_barrier)
#if defined(GL_NV_texture_multisample)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage2DMultisampleCoverageNV, (target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations), (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations))
#define glTexImage2DMultisampleCoverageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3DMultisampleCoverageNV, (target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations), (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations))
#define glTexImage3DMultisampleCoverageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage2DMultisampleCoverageNV, (texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations), (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations))
#define glTextureImage2DMultisampleCoverageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage2DMultisampleNV, (texture, target, samples, internalFormat, width, height, fixedSampleLocations), (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations))
#define glTextureImage2DMultisampleNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage3DMultisampleCoverageNV, (texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations), (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations))
#define glTextureImage3DMultisampleCoverageNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureImage3DMultisampleNV, (texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations), (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations))
#define glTextureImage3DMultisampleNV_defined
#endif // defined(GL_NV_texture_multisample)
#if defined(GL_NV_transform_feedback)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveVaryingNV, (program, name), (GLuint program, const GLchar *name))
#define glActiveVaryingNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginTransformFeedbackNV, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedbackNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferBaseNV, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBaseNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferOffsetNV, (target, index, buffer, offset), (GLenum target, GLuint index, GLuint buffer, GLintptr offset))
#define glBindBufferOffsetNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferRangeNV, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndTransformFeedbackNV, (), (void))
#define glEndTransformFeedbackNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveVaryingNV, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetActiveVaryingNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackVaryingNV, (program, index, location), (GLuint program, GLuint index, GLint *location))
#define glGetTransformFeedbackVaryingNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetVaryingLocationNV, (program, name), (GLuint program, const GLchar *name))
#define glGetVaryingLocationNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackAttribsNV, (count, attribs, bufferMode), (GLsizei count, const GLint *attribs, GLenum bufferMode))
#define glTransformFeedbackAttribsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackStreamAttribsNV, (count, attribs, nbuffers, bufstreams, bufferMode), (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode))
#define glTransformFeedbackStreamAttribsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackVaryingsNV, (program, count, locations, bufferMode), (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode))
#define glTransformFeedbackVaryingsNV_defined
#endif // defined(GL_NV_transform_feedback)
#if defined(GL_NV_transform_feedback2)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTransformFeedbackNV, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedbackNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteTransformFeedbacksNV, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacksNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackNV, (mode, id), (GLenum mode, GLuint id))
#define glDrawTransformFeedbackNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenTransformFeedbacksNV, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacksNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTransformFeedbackNV, (id), (GLuint id))
#define glIsTransformFeedbackNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPauseTransformFeedbackNV, (), (void))
#define glPauseTransformFeedbackNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResumeTransformFeedbackNV, (), (void))
#define glResumeTransformFeedbackNV_defined
#endif // defined(GL_NV_transform_feedback2)
#if defined(GL_NV_vdpau_interop)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVDPAUFiniNV, (), (void))
#define glVDPAUFiniNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVDPAUGetSurfaceivNV, (surface, pname, bufSize, length, values), (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glVDPAUGetSurfaceivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVDPAUInitNV, (vdpDevice, getProcAddress), (const void *vdpDevice, const void *getProcAddress))
#define glVDPAUInitNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glVDPAUIsSurfaceNV, (surface), (GLvdpauSurfaceNV surface))
#define glVDPAUIsSurfaceNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVDPAUMapSurfacesNV, (numSurfaces, surfaces), (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces))
#define glVDPAUMapSurfacesNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLvdpauSurfaceNV, APIENTRY, glVDPAURegisterOutputSurfaceNV, (vdpSurface, target, numTextureNames, textureNames), (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames))
#define glVDPAURegisterOutputSurfaceNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLvdpauSurfaceNV, APIENTRY, glVDPAURegisterVideoSurfaceNV, (vdpSurface, target, numTextureNames, textureNames), (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames))
#define glVDPAURegisterVideoSurfaceNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVDPAUSurfaceAccessNV, (surface, access), (GLvdpauSurfaceNV surface, GLenum access))
#define glVDPAUSurfaceAccessNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVDPAUUnmapSurfacesNV, (numSurface, surfaces), (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces))
#define glVDPAUUnmapSurfacesNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVDPAUUnregisterSurfaceNV, (surface), (GLvdpauSurfaceNV surface))
#define glVDPAUUnregisterSurfaceNV_defined
#endif // defined(GL_NV_vdpau_interop)
#if defined(GL_NV_vertex_array_range)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushVertexArrayRangeNV, (), (void))
#define glFlushVertexArrayRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayRangeNV, (length, pointer), (GLsizei length, const void *pointer))
#define glVertexArrayRangeNV_defined
#endif // defined(GL_NV_vertex_array_range)
#if defined(GL_NV_vertex_attrib_integer_64bit)
#ifndef glGetVertexAttribLi64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLi64vNV, (index, pname, params), (GLuint index, GLenum pname, GLint64EXT *params))
#define glGetVertexAttribLi64vNV_defined
#endif
#ifndef glGetVertexAttribLui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLui64vNV, (index, pname, params), (GLuint index, GLenum pname, GLuint64EXT *params))
#define glGetVertexAttribLui64vNV_defined
#endif
#ifndef glVertexAttribL1i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1i64NV, (index, x), (GLuint index, GLint64EXT x))
#define glVertexAttribL1i64NV_defined
#endif
#ifndef glVertexAttribL1i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL1i64vNV_defined
#endif
#ifndef glVertexAttribL1ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64NV, (index, x), (GLuint index, GLuint64EXT x))
#define glVertexAttribL1ui64NV_defined
#endif
#ifndef glVertexAttribL1ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL1ui64vNV_defined
#endif
#ifndef glVertexAttribL2i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2i64NV, (index, x, y), (GLuint index, GLint64EXT x, GLint64EXT y))
#define glVertexAttribL2i64NV_defined
#endif
#ifndef glVertexAttribL2i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL2i64vNV_defined
#endif
#ifndef glVertexAttribL2ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2ui64NV, (index, x, y), (GLuint index, GLuint64EXT x, GLuint64EXT y))
#define glVertexAttribL2ui64NV_defined
#endif
#ifndef glVertexAttribL2ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL2ui64vNV_defined
#endif
#ifndef glVertexAttribL3i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3i64NV, (index, x, y, z), (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glVertexAttribL3i64NV_defined
#endif
#ifndef glVertexAttribL3i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL3i64vNV_defined
#endif
#ifndef glVertexAttribL3ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3ui64NV, (index, x, y, z), (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glVertexAttribL3ui64NV_defined
#endif
#ifndef glVertexAttribL3ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL3ui64vNV_defined
#endif
#ifndef glVertexAttribL4i64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4i64NV, (index, x, y, z, w), (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glVertexAttribL4i64NV_defined
#endif
#ifndef glVertexAttribL4i64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4i64vNV, (index, v), (GLuint index, const GLint64EXT *v))
#define glVertexAttribL4i64vNV_defined
#endif
#ifndef glVertexAttribL4ui64NV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4ui64NV, (index, x, y, z, w), (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glVertexAttribL4ui64NV_defined
#endif
#ifndef glVertexAttribL4ui64vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4ui64vNV, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL4ui64vNV_defined
#endif
#ifndef glVertexAttribLFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLFormatNV, (index, size, type, stride), (GLuint index, GLint size, GLenum type, GLsizei stride))
#define glVertexAttribLFormatNV_defined
#endif
#endif // defined(GL_NV_vertex_attrib_integer_64bit)
#if defined(GL_NV_vertex_buffer_unified_memory)
#ifndef glBufferAddressRangeNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferAddressRangeNV, (pname, index, address, length), (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length))
#define glBufferAddressRangeNV_defined
#endif
#ifndef glColorFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glColorFormatNV_defined
#endif
#ifndef glEdgeFlagFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEdgeFlagFormatNV, (stride), (GLsizei stride))
#define glEdgeFlagFormatNV_defined
#endif
#ifndef glFogCoordFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordFormatNV, (type, stride), (GLenum type, GLsizei stride))
#define glFogCoordFormatNV_defined
#endif
#ifndef glGetIntegerui64i_vNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerui64i_vNV, (value, index, result), (GLenum value, GLuint index, GLuint64EXT *result))
#define glGetIntegerui64i_vNV_defined
#endif
#ifndef glIndexFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexFormatNV, (type, stride), (GLenum type, GLsizei stride))
#define glIndexFormatNV_defined
#endif
#ifndef glNormalFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalFormatNV, (type, stride), (GLenum type, GLsizei stride))
#define glNormalFormatNV_defined
#endif
#ifndef glSecondaryColorFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColorFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glSecondaryColorFormatNV_defined
#endif
#ifndef glTexCoordFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glTexCoordFormatNV_defined
#endif
#ifndef glVertexAttribFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribFormatNV, (index, size, type, normalized, stride), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride))
#define glVertexAttribFormatNV_defined
#endif
#ifndef glVertexAttribIFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIFormatNV, (index, size, type, stride), (GLuint index, GLint size, GLenum type, GLsizei stride))
#define glVertexAttribIFormatNV_defined
#endif
#ifndef glVertexFormatNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexFormatNV, (size, type, stride), (GLint size, GLenum type, GLsizei stride))
#define glVertexFormatNV_defined
#endif
#endif // defined(GL_NV_vertex_buffer_unified_memory)
#if defined(GL_NV_vertex_program)
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glAreProgramsResidentNV, (n, programs, residences), (GLsizei n, const GLuint *programs, GLboolean *residences))
#define glAreProgramsResidentNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindProgramNV, (target, id), (GLenum target, GLuint id))
#define glBindProgramNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgramsNV, (n, programs), (GLsizei n, const GLuint *programs))
#define glDeleteProgramsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glExecuteProgramNV, (target, id, params), (GLenum target, GLuint id, const GLfloat *params))
#define glExecuteProgramNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenProgramsNV, (n, programs), (GLsizei n, GLuint *programs))
#define glGenProgramsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramParameterdvNV, (target, index, pname, params), (GLenum target, GLuint index, GLenum pname, GLdouble *params))
#define glGetProgramParameterdvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramParameterfvNV, (target, index, pname, params), (GLenum target, GLuint index, GLenum pname, GLfloat *params))
#define glGetProgramParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramStringNV, (id, pname, program), (GLuint id, GLenum pname, GLubyte *program))
#define glGetProgramStringNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramivNV, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetProgramivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTrackMatrixivNV, (target, address, pname, params), (GLenum target, GLuint address, GLenum pname, GLint *params))
#define glGetTrackMatrixivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribPointervNV, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointervNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribdvNV, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribdvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribfvNV, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribivNV, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribivNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgramNV, (id), (GLuint id))
#define glIsProgramNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadProgramNV, (target, id, len, program), (GLenum target, GLuint id, GLsizei len, const GLubyte *program))
#define glLoadProgramNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameter4dNV, (target, index, x, y, z, w), (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glProgramParameter4dNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameter4dvNV, (target, index, v), (GLenum target, GLuint index, const GLdouble *v))
#define glProgramParameter4dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameter4fNV, (target, index, x, y, z, w), (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glProgramParameter4fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameter4fvNV, (target, index, v), (GLenum target, GLuint index, const GLfloat *v))
#define glProgramParameter4fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameters4dvNV, (target, index, count, v), (GLenum target, GLuint index, GLsizei count, const GLdouble *v))
#define glProgramParameters4dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameters4fvNV, (target, index, count, v), (GLenum target, GLuint index, GLsizei count, const GLfloat *v))
#define glProgramParameters4fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRequestResidentProgramsNV, (n, programs), (GLsizei n, const GLuint *programs))
#define glRequestResidentProgramsNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTrackMatrixNV, (target, address, matrix, transform), (GLenum target, GLuint address, GLenum matrix, GLenum transform))
#define glTrackMatrixNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1dNV, (index, x), (GLuint index, GLdouble x))
#define glVertexAttrib1dNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1dvNV, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib1dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1fNV, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1fvNV, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1sNV, (index, x), (GLuint index, GLshort x))
#define glVertexAttrib1sNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1svNV, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib1svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2dNV, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttrib2dNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2dvNV, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib2dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2fNV, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2fvNV, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2sNV, (index, x, y), (GLuint index, GLshort x, GLshort y))
#define glVertexAttrib2sNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2svNV, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib2svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3dNV, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttrib3dNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3dvNV, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib3dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3fNV, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3fvNV, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3sNV, (index, x, y, z), (GLuint index, GLshort x, GLshort y, GLshort z))
#define glVertexAttrib3sNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3svNV, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib3svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4dNV, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttrib4dNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4dvNV, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib4dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4fNV, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4fNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4fvNV, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4sNV, (index, x, y, z, w), (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertexAttrib4sNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4svNV, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4ubNV, (index, x, y, z, w), (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))
#define glVertexAttrib4ubNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4ubvNV, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4ubvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribPointerNV, (index, fsize, type, stride, pointer), (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribPointerNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs1dvNV, (index, count, v), (GLuint index, GLsizei count, const GLdouble *v))
#define glVertexAttribs1dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs1fvNV, (index, count, v), (GLuint index, GLsizei count, const GLfloat *v))
#define glVertexAttribs1fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs1svNV, (index, count, v), (GLuint index, GLsizei count, const GLshort *v))
#define glVertexAttribs1svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs2dvNV, (index, count, v), (GLuint index, GLsizei count, const GLdouble *v))
#define glVertexAttribs2dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs2fvNV, (index, count, v), (GLuint index, GLsizei count, const GLfloat *v))
#define glVertexAttribs2fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs2svNV, (index, count, v), (GLuint index, GLsizei count, const GLshort *v))
#define glVertexAttribs2svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs3dvNV, (index, count, v), (GLuint index, GLsizei count, const GLdouble *v))
#define glVertexAttribs3dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs3fvNV, (index, count, v), (GLuint index, GLsizei count, const GLfloat *v))
#define glVertexAttribs3fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs3svNV, (index, count, v), (GLuint index, GLsizei count, const GLshort *v))
#define glVertexAttribs3svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs4dvNV, (index, count, v), (GLuint index, GLsizei count, const GLdouble *v))
#define glVertexAttribs4dvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs4fvNV, (index, count, v), (GLuint index, GLsizei count, const GLfloat *v))
#define glVertexAttribs4fvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs4svNV, (index, count, v), (GLuint index, GLsizei count, const GLshort *v))
#define glVertexAttribs4svNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribs4ubvNV, (index, count, v), (GLuint index, GLsizei count, const GLubyte *v))
#define glVertexAttribs4ubvNV_defined
#endif // defined(GL_NV_vertex_program)
#if defined(GL_NV_vertex_program4)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIivEXT, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIuivEXT, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1iEXT, (index, x), (GLuint index, GLint x))
#define glVertexAttribI1iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1ivEXT, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI1ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1uiEXT, (index, x), (GLuint index, GLuint x))
#define glVertexAttribI1uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1uivEXT, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI1uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2iEXT, (index, x, y), (GLuint index, GLint x, GLint y))
#define glVertexAttribI2iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2ivEXT, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI2ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2uiEXT, (index, x, y), (GLuint index, GLuint x, GLuint y))
#define glVertexAttribI2uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2uivEXT, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI2uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3iEXT, (index, x, y, z), (GLuint index, GLint x, GLint y, GLint z))
#define glVertexAttribI3iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3ivEXT, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI3ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3uiEXT, (index, x, y, z), (GLuint index, GLuint x, GLuint y, GLuint z))
#define glVertexAttribI3uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3uivEXT, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI3uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4bvEXT, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttribI4bvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4iEXT, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4iEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ivEXT, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4ivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4svEXT, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttribI4svEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ubvEXT, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttribI4ubvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4uiEXT, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4uiEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4uivEXT, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uivEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4usvEXT, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttribI4usvEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIPointerEXT, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointerEXT_defined
#endif // defined(GL_NV_vertex_program4)
#if defined(GL_NV_video_capture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginVideoCaptureNV, (video_capture_slot), (GLuint video_capture_slot))
#define glBeginVideoCaptureNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVideoCaptureStreamBufferNV, (video_capture_slot, stream, frame_region, offset), (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset))
#define glBindVideoCaptureStreamBufferNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVideoCaptureStreamTextureNV, (video_capture_slot, stream, frame_region, target, texture), (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture))
#define glBindVideoCaptureStreamTextureNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndVideoCaptureNV, (video_capture_slot), (GLuint video_capture_slot))
#define glEndVideoCaptureNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideoCaptureStreamdvNV, (video_capture_slot, stream, pname, params), (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params))
#define glGetVideoCaptureStreamdvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideoCaptureStreamfvNV, (video_capture_slot, stream, pname, params), (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params))
#define glGetVideoCaptureStreamfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideoCaptureStreamivNV, (video_capture_slot, stream, pname, params), (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params))
#define glGetVideoCaptureStreamivNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVideoCaptureivNV, (video_capture_slot, pname, params), (GLuint video_capture_slot, GLenum pname, GLint *params))
#define glGetVideoCaptureivNV_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glVideoCaptureNV, (video_capture_slot, sequence_num, capture_time), (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time))
#define glVideoCaptureNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVideoCaptureStreamParameterdvNV, (video_capture_slot, stream, pname, params), (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params))
#define glVideoCaptureStreamParameterdvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVideoCaptureStreamParameterfvNV, (video_capture_slot, stream, pname, params), (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params))
#define glVideoCaptureStreamParameterfvNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVideoCaptureStreamParameterivNV, (video_capture_slot, stream, pname, params), (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params))
#define glVideoCaptureStreamParameterivNV_defined
#endif // defined(GL_NV_video_capture)
#if defined(GL_NV_viewport_swizzle)
#ifndef glViewportSwizzleNV_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportSwizzleNV, (index, swizzlex, swizzley, swizzlez, swizzlew), (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew))
#define glViewportSwizzleNV_defined
#endif
#endif // defined(GL_NV_viewport_swizzle)
#if defined(GL_OES_byte_coordinates)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1bOES, (texture, s), (GLenum texture, GLbyte s))
#define glMultiTexCoord1bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1bvOES, (texture, coords), (GLenum texture, const GLbyte *coords))
#define glMultiTexCoord1bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2bOES, (texture, s, t), (GLenum texture, GLbyte s, GLbyte t))
#define glMultiTexCoord2bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2bvOES, (texture, coords), (GLenum texture, const GLbyte *coords))
#define glMultiTexCoord2bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3bOES, (texture, s, t, r), (GLenum texture, GLbyte s, GLbyte t, GLbyte r))
#define glMultiTexCoord3bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3bvOES, (texture, coords), (GLenum texture, const GLbyte *coords))
#define glMultiTexCoord3bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4bOES, (texture, s, t, r, q), (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q))
#define glMultiTexCoord4bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4bvOES, (texture, coords), (GLenum texture, const GLbyte *coords))
#define glMultiTexCoord4bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord1bOES, (s), (GLbyte s))
#define glTexCoord1bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord1bvOES, (coords), (const GLbyte *coords))
#define glTexCoord1bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2bOES, (s, t), (GLbyte s, GLbyte t))
#define glTexCoord2bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2bvOES, (coords), (const GLbyte *coords))
#define glTexCoord2bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord3bOES, (s, t, r), (GLbyte s, GLbyte t, GLbyte r))
#define glTexCoord3bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord3bvOES, (coords), (const GLbyte *coords))
#define glTexCoord3bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4bOES, (s, t, r, q), (GLbyte s, GLbyte t, GLbyte r, GLbyte q))
#define glTexCoord4bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4bvOES, (coords), (const GLbyte *coords))
#define glTexCoord4bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex2bOES, (x, y), (GLbyte x, GLbyte y))
#define glVertex2bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex2bvOES, (coords), (const GLbyte *coords))
#define glVertex2bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex3bOES, (x, y, z), (GLbyte x, GLbyte y, GLbyte z))
#define glVertex3bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex3bvOES, (coords), (const GLbyte *coords))
#define glVertex3bvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex4bOES, (x, y, z, w), (GLbyte x, GLbyte y, GLbyte z, GLbyte w))
#define glVertex4bOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex4bvOES, (coords), (const GLbyte *coords))
#define glVertex4bvOES_defined
#endif // defined(GL_OES_byte_coordinates)
#if defined(GL_OES_fixed_point)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAccumxOES, (op, value), (GLenum op, GLfixed value))
#define glAccumxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAlphaFuncxOES, (func, ref), (GLenum func, GLfixed ref))
#define glAlphaFuncxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBitmapxOES, (width, height, xorig, yorig, xmove, ymove, bitmap), (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap))
#define glBitmapxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendColorxOES, (red, green, blue, alpha), (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))
#define glBlendColorxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearAccumxOES, (red, green, blue, alpha), (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))
#define glClearAccumxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearColorxOES, (red, green, blue, alpha), (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))
#define glClearColorxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepthxOES, (depth), (GLfixed depth))
#define glClearDepthxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClipPlanexOES, (plane, equation), (GLenum plane, const GLfixed *equation))
#define glClipPlanexOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor3xOES, (red, green, blue), (GLfixed red, GLfixed green, GLfixed blue))
#define glColor3xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor3xvOES, (components), (const GLfixed *components))
#define glColor3xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4xOES, (red, green, blue, alpha), (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha))
#define glColor4xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4xvOES, (components), (const GLfixed *components))
#define glColor4xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameterxOES, (target, pname, param), (GLenum target, GLenum pname, GLfixed param))
#define glConvolutionParameterxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glConvolutionParameterxvOES, (target, pname, params), (GLenum target, GLenum pname, const GLfixed *params))
#define glConvolutionParameterxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangexOES, (n, f), (GLfixed n, GLfixed f))
#define glDepthRangexOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEvalCoord1xOES, (u), (GLfixed u))
#define glEvalCoord1xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEvalCoord1xvOES, (coords), (const GLfixed *coords))
#define glEvalCoord1xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEvalCoord2xOES, (u, v), (GLfixed u, GLfixed v))
#define glEvalCoord2xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEvalCoord2xvOES, (coords), (const GLfixed *coords))
#define glEvalCoord2xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFeedbackBufferxOES, (n, type, buffer), (GLsizei n, GLenum type, const GLfixed *buffer))
#define glFeedbackBufferxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogxOES, (pname, param), (GLenum pname, GLfixed param))
#define glFogxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogxvOES, (pname, param), (GLenum pname, const GLfixed *param))
#define glFogxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFrustumxOES, (l, r, b, t, n, f), (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f))
#define glFrustumxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetClipPlanexOES, (plane, equation), (GLenum plane, GLfixed *equation))
#define glGetClipPlanexOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetConvolutionParameterxvOES, (target, pname, params), (GLenum target, GLenum pname, GLfixed *params))
#define glGetConvolutionParameterxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFixedvOES, (pname, params), (GLenum pname, GLfixed *params))
#define glGetFixedvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetHistogramParameterxvOES, (target, pname, params), (GLenum target, GLenum pname, GLfixed *params))
#define glGetHistogramParameterxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetLightxOES, (light, pname, params), (GLenum light, GLenum pname, GLfixed *params))
#define glGetLightxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMapxvOES, (target, query, v), (GLenum target, GLenum query, GLfixed *v))
#define glGetMapxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMaterialxOES, (face, pname, param), (GLenum face, GLenum pname, GLfixed param))
#define glGetMaterialxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPixelMapxv, (map, size, values), (GLenum map, GLint size, GLfixed *values))
#define glGetPixelMapxv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexEnvxvOES, (target, pname, params), (GLenum target, GLenum pname, GLfixed *params))
#define glGetTexEnvxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexGenxvOES, (coord, pname, params), (GLenum coord, GLenum pname, GLfixed *params))
#define glGetTexGenxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexLevelParameterxvOES, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfixed *params))
#define glGetTexLevelParameterxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterxvOES, (target, pname, params), (GLenum target, GLenum pname, GLfixed *params))
#define glGetTexParameterxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexxOES, (component), (GLfixed component))
#define glIndexxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIndexxvOES, (component), (const GLfixed *component))
#define glIndexxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLightModelxOES, (pname, param), (GLenum pname, GLfixed param))
#define glLightModelxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLightModelxvOES, (pname, param), (GLenum pname, const GLfixed *param))
#define glLightModelxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLightxOES, (light, pname, param), (GLenum light, GLenum pname, GLfixed param))
#define glLightxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLightxvOES, (light, pname, params), (GLenum light, GLenum pname, const GLfixed *params))
#define glLightxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLineWidthxOES, (width), (GLfixed width))
#define glLineWidthxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadMatrixxOES, (m), (const GLfixed *m))
#define glLoadMatrixxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadTransposeMatrixxOES, (m), (const GLfixed *m))
#define glLoadTransposeMatrixxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMap1xOES, (target, u1, u2, stride, order, points), (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points))
#define glMap1xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMap2xOES, (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points), (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points))
#define glMap2xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapGrid1xOES, (n, u1, u2), (GLint n, GLfixed u1, GLfixed u2))
#define glMapGrid1xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMapGrid2xOES, (n, u1, u2, v1, v2), (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2))
#define glMapGrid2xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMaterialxOES, (face, pname, param), (GLenum face, GLenum pname, GLfixed param))
#define glMaterialxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMaterialxvOES, (face, pname, param), (GLenum face, GLenum pname, const GLfixed *param))
#define glMaterialxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultMatrixxOES, (m), (const GLfixed *m))
#define glMultMatrixxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultTransposeMatrixxOES, (m), (const GLfixed *m))
#define glMultTransposeMatrixxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1xOES, (texture, s), (GLenum texture, GLfixed s))
#define glMultiTexCoord1xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1xvOES, (texture, coords), (GLenum texture, const GLfixed *coords))
#define glMultiTexCoord1xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2xOES, (texture, s, t), (GLenum texture, GLfixed s, GLfixed t))
#define glMultiTexCoord2xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2xvOES, (texture, coords), (GLenum texture, const GLfixed *coords))
#define glMultiTexCoord2xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3xOES, (texture, s, t, r), (GLenum texture, GLfixed s, GLfixed t, GLfixed r))
#define glMultiTexCoord3xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3xvOES, (texture, coords), (GLenum texture, const GLfixed *coords))
#define glMultiTexCoord3xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4xOES, (texture, s, t, r, q), (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q))
#define glMultiTexCoord4xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4xvOES, (texture, coords), (GLenum texture, const GLfixed *coords))
#define glMultiTexCoord4xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormal3xOES, (nx, ny, nz), (GLfixed nx, GLfixed ny, GLfixed nz))
#define glNormal3xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormal3xvOES, (coords), (const GLfixed *coords))
#define glNormal3xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glOrthoxOES, (l, r, b, t, n, f), (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f))
#define glOrthoxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPassThroughxOES, (token), (GLfixed token))
#define glPassThroughxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelMapx, (map, size, values), (GLenum map, GLint size, const GLfixed *values))
#define glPixelMapx_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelStorex, (pname, param), (GLenum pname, GLfixed param))
#define glPixelStorex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTransferxOES, (pname, param), (GLenum pname, GLfixed param))
#define glPixelTransferxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelZoomxOES, (xfactor, yfactor), (GLfixed xfactor, GLfixed yfactor))
#define glPixelZoomxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterxvOES, (pname, params), (GLenum pname, const GLfixed *params))
#define glPointParameterxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointSizexOES, (size), (GLfixed size))
#define glPointSizexOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffsetxOES, (factor, units), (GLfixed factor, GLfixed units))
#define glPolygonOffsetxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrioritizeTexturesxOES, (n, textures, priorities), (GLsizei n, const GLuint *textures, const GLfixed *priorities))
#define glPrioritizeTexturesxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterPos2xOES, (x, y), (GLfixed x, GLfixed y))
#define glRasterPos2xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterPos2xvOES, (coords), (const GLfixed *coords))
#define glRasterPos2xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterPos3xOES, (x, y, z), (GLfixed x, GLfixed y, GLfixed z))
#define glRasterPos3xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterPos3xvOES, (coords), (const GLfixed *coords))
#define glRasterPos3xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterPos4xOES, (x, y, z, w), (GLfixed x, GLfixed y, GLfixed z, GLfixed w))
#define glRasterPos4xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRasterPos4xvOES, (coords), (const GLfixed *coords))
#define glRasterPos4xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRectxOES, (x1, y1, x2, y2), (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2))
#define glRectxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRectxvOES, (v1, v2), (const GLfixed *v1, const GLfixed *v2))
#define glRectxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRotatexOES, (angle, x, y, z), (GLfixed angle, GLfixed x, GLfixed y, GLfixed z))
#define glRotatexOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScalexOES, (x, y, z), (GLfixed x, GLfixed y, GLfixed z))
#define glScalexOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord1xOES, (s), (GLfixed s))
#define glTexCoord1xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord1xvOES, (coords), (const GLfixed *coords))
#define glTexCoord1xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2xOES, (s, t), (GLfixed s, GLfixed t))
#define glTexCoord2xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2xvOES, (coords), (const GLfixed *coords))
#define glTexCoord2xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord3xOES, (s, t, r), (GLfixed s, GLfixed t, GLfixed r))
#define glTexCoord3xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord3xvOES, (coords), (const GLfixed *coords))
#define glTexCoord3xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4xOES, (s, t, r, q), (GLfixed s, GLfixed t, GLfixed r, GLfixed q))
#define glTexCoord4xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4xvOES, (coords), (const GLfixed *coords))
#define glTexCoord4xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexEnvxOES, (target, pname, param), (GLenum target, GLenum pname, GLfixed param))
#define glTexEnvxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexEnvxvOES, (target, pname, params), (GLenum target, GLenum pname, const GLfixed *params))
#define glTexEnvxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexGenxOES, (coord, pname, param), (GLenum coord, GLenum pname, GLfixed param))
#define glTexGenxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexGenxvOES, (coord, pname, params), (GLenum coord, GLenum pname, const GLfixed *params))
#define glTexGenxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterxOES, (target, pname, param), (GLenum target, GLenum pname, GLfixed param))
#define glTexParameterxOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterxvOES, (target, pname, params), (GLenum target, GLenum pname, const GLfixed *params))
#define glTexParameterxvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTranslatexOES, (x, y, z), (GLfixed x, GLfixed y, GLfixed z))
#define glTranslatexOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex2xOES, (x), (GLfixed x))
#define glVertex2xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex2xvOES, (coords), (const GLfixed *coords))
#define glVertex2xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex3xOES, (x, y), (GLfixed x, GLfixed y))
#define glVertex3xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex3xvOES, (coords), (const GLfixed *coords))
#define glVertex3xvOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex4xOES, (x, y, z), (GLfixed x, GLfixed y, GLfixed z))
#define glVertex4xOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertex4xvOES, (coords), (const GLfixed *coords))
#define glVertex4xvOES_defined
#endif // defined(GL_OES_fixed_point)
#if defined(GL_OES_query_matrix)
GLATTER_FBLOCK(return, GL, GLAPI, GLbitfield, APIENTRY, glQueryMatrixxOES, (mantissa, exponent), (GLfixed *mantissa, GLint *exponent))
#define glQueryMatrixxOES_defined
#endif // defined(GL_OES_query_matrix)
#if defined(GL_OES_single_precision)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepthfOES, (depth), (GLclampf depth))
#define glClearDepthfOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClipPlanefOES, (plane, equation), (GLenum plane, const GLfloat *equation))
#define glClipPlanefOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangefOES, (n, f), (GLclampf n, GLclampf f))
#define glDepthRangefOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFrustumfOES, (l, r, b, t, n, f), (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f))
#define glFrustumfOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetClipPlanefOES, (plane, equation), (GLenum plane, GLfloat *equation))
#define glGetClipPlanefOES_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glOrthofOES, (l, r, b, t, n, f), (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f))
#define glOrthofOES_defined
#endif // defined(GL_OES_single_precision)
#if defined(GL_OVR_multiview)
#ifndef glFramebufferTextureMultiviewOVR_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureMultiviewOVR, (target, attachment, texture, level, baseViewIndex, numViews), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews))
#define glFramebufferTextureMultiviewOVR_defined
#endif
#endif // defined(GL_OVR_multiview)
#if defined(GL_PGI_misc_hints)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glHintPGI, (target, mode), (GLenum target, GLint mode))
#define glHintPGI_defined
#endif // defined(GL_PGI_misc_hints)
#if defined(GL_SGIS_detail_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDetailTexFuncSGIS, (target, n, points), (GLenum target, GLsizei n, const GLfloat *points))
#define glDetailTexFuncSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDetailTexFuncSGIS, (target, points), (GLenum target, GLfloat *points))
#define glGetDetailTexFuncSGIS_defined
#endif // defined(GL_SGIS_detail_texture)
#if defined(GL_SGIS_fog_function)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogFuncSGIS, (n, points), (GLsizei n, const GLfloat *points))
#define glFogFuncSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFogFuncSGIS, (points), (GLfloat *points))
#define glGetFogFuncSGIS_defined
#endif // defined(GL_SGIS_fog_function)
#if defined(GL_SGIS_multisample)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleMaskSGIS, (value, invert), (GLclampf value, GLboolean invert))
#define glSampleMaskSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplePatternSGIS, (pattern), (GLenum pattern))
#define glSamplePatternSGIS_defined
#endif // defined(GL_SGIS_multisample)
#if defined(GL_SGIS_pixel_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPixelTexGenParameterfvSGIS, (pname, params), (GLenum pname, GLfloat *params))
#define glGetPixelTexGenParameterfvSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPixelTexGenParameterivSGIS, (pname, params), (GLenum pname, GLint *params))
#define glGetPixelTexGenParameterivSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTexGenParameterfSGIS, (pname, param), (GLenum pname, GLfloat param))
#define glPixelTexGenParameterfSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTexGenParameterfvSGIS, (pname, params), (GLenum pname, const GLfloat *params))
#define glPixelTexGenParameterfvSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTexGenParameteriSGIS, (pname, param), (GLenum pname, GLint param))
#define glPixelTexGenParameteriSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTexGenParameterivSGIS, (pname, params), (GLenum pname, const GLint *params))
#define glPixelTexGenParameterivSGIS_defined
#endif // defined(GL_SGIS_pixel_texture)
#if defined(GL_SGIS_point_parameters)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfSGIS, (pname, param), (GLenum pname, GLfloat param))
#define glPointParameterfSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfvSGIS, (pname, params), (GLenum pname, const GLfloat *params))
#define glPointParameterfvSGIS_defined
#endif // defined(GL_SGIS_point_parameters)
#if defined(GL_SGIS_sharpen_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSharpenTexFuncSGIS, (target, points), (GLenum target, GLfloat *points))
#define glGetSharpenTexFuncSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSharpenTexFuncSGIS, (target, n, points), (GLenum target, GLsizei n, const GLfloat *points))
#define glSharpenTexFuncSGIS_defined
#endif // defined(GL_SGIS_sharpen_texture)
#if defined(GL_SGIS_texture4D)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage4DSGIS, (target, level, internalformat, width, height, depth, size4d, border, format, type, pixels), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage4DSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage4DSGIS, (target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage4DSGIS_defined
#endif // defined(GL_SGIS_texture4D)
#if defined(GL_SGIS_texture_color_mask)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureColorMaskSGIS, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glTextureColorMaskSGIS_defined
#endif // defined(GL_SGIS_texture_color_mask)
#if defined(GL_SGIS_texture_filter4)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexFilterFuncSGIS, (target, filter, weights), (GLenum target, GLenum filter, GLfloat *weights))
#define glGetTexFilterFuncSGIS_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexFilterFuncSGIS, (target, filter, n, weights), (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights))
#define glTexFilterFuncSGIS_defined
#endif // defined(GL_SGIS_texture_filter4)
#if defined(GL_SGIX_async)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAsyncMarkerSGIX, (marker), (GLuint marker))
#define glAsyncMarkerSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteAsyncMarkersSGIX, (marker, range), (GLuint marker, GLsizei range))
#define glDeleteAsyncMarkersSGIX_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glFinishAsyncSGIX, (markerp), (GLuint *markerp))
#define glFinishAsyncSGIX_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGenAsyncMarkersSGIX, (range), (GLsizei range))
#define glGenAsyncMarkersSGIX_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsAsyncMarkerSGIX, (marker), (GLuint marker))
#define glIsAsyncMarkerSGIX_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glPollAsyncSGIX, (markerp), (GLuint *markerp))
#define glPollAsyncSGIX_defined
#endif // defined(GL_SGIX_async)
#if defined(GL_SGIX_flush_raster)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushRasterSGIX, (), (void))
#define glFlushRasterSGIX_defined
#endif // defined(GL_SGIX_flush_raster)
#if defined(GL_SGIX_fragment_lighting)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentColorMaterialSGIX, (face, mode), (GLenum face, GLenum mode))
#define glFragmentColorMaterialSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightModelfSGIX, (pname, param), (GLenum pname, GLfloat param))
#define glFragmentLightModelfSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightModelfvSGIX, (pname, params), (GLenum pname, const GLfloat *params))
#define glFragmentLightModelfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightModeliSGIX, (pname, param), (GLenum pname, GLint param))
#define glFragmentLightModeliSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightModelivSGIX, (pname, params), (GLenum pname, const GLint *params))
#define glFragmentLightModelivSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightfSGIX, (light, pname, param), (GLenum light, GLenum pname, GLfloat param))
#define glFragmentLightfSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightfvSGIX, (light, pname, params), (GLenum light, GLenum pname, const GLfloat *params))
#define glFragmentLightfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightiSGIX, (light, pname, param), (GLenum light, GLenum pname, GLint param))
#define glFragmentLightiSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentLightivSGIX, (light, pname, params), (GLenum light, GLenum pname, const GLint *params))
#define glFragmentLightivSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentMaterialfSGIX, (face, pname, param), (GLenum face, GLenum pname, GLfloat param))
#define glFragmentMaterialfSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentMaterialfvSGIX, (face, pname, params), (GLenum face, GLenum pname, const GLfloat *params))
#define glFragmentMaterialfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentMaterialiSGIX, (face, pname, param), (GLenum face, GLenum pname, GLint param))
#define glFragmentMaterialiSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFragmentMaterialivSGIX, (face, pname, params), (GLenum face, GLenum pname, const GLint *params))
#define glFragmentMaterialivSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFragmentLightfvSGIX, (light, pname, params), (GLenum light, GLenum pname, GLfloat *params))
#define glGetFragmentLightfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFragmentLightivSGIX, (light, pname, params), (GLenum light, GLenum pname, GLint *params))
#define glGetFragmentLightivSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFragmentMaterialfvSGIX, (face, pname, params), (GLenum face, GLenum pname, GLfloat *params))
#define glGetFragmentMaterialfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFragmentMaterialivSGIX, (face, pname, params), (GLenum face, GLenum pname, GLint *params))
#define glGetFragmentMaterialivSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLightEnviSGIX, (pname, param), (GLenum pname, GLint param))
#define glLightEnviSGIX_defined
#endif // defined(GL_SGIX_fragment_lighting)
#if defined(GL_SGIX_framezoom)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFrameZoomSGIX, (factor), (GLint factor))
#define glFrameZoomSGIX_defined
#endif // defined(GL_SGIX_framezoom)
#if defined(GL_SGIX_igloo_interface)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glIglooInterfaceSGIX, (pname, params), (GLenum pname, const void *params))
#define glIglooInterfaceSGIX_defined
#endif // defined(GL_SGIX_igloo_interface)
#if defined(GL_SGIX_instruments)
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetInstrumentsSGIX, (), (void))
#define glGetInstrumentsSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInstrumentsBufferSGIX, (size, buffer), (GLsizei size, GLint *buffer))
#define glInstrumentsBufferSGIX_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glPollInstrumentsSGIX, (marker_p), (GLint *marker_p))
#define glPollInstrumentsSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadInstrumentsSGIX, (marker), (GLint marker))
#define glReadInstrumentsSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStartInstrumentsSGIX, (), (void))
#define glStartInstrumentsSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStopInstrumentsSGIX, (marker), (GLint marker))
#define glStopInstrumentsSGIX_defined
#endif // defined(GL_SGIX_instruments)
#if defined(GL_SGIX_list_priority)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetListParameterfvSGIX, (list, pname, params), (GLuint list, GLenum pname, GLfloat *params))
#define glGetListParameterfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetListParameterivSGIX, (list, pname, params), (GLuint list, GLenum pname, GLint *params))
#define glGetListParameterivSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glListParameterfSGIX, (list, pname, param), (GLuint list, GLenum pname, GLfloat param))
#define glListParameterfSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glListParameterfvSGIX, (list, pname, params), (GLuint list, GLenum pname, const GLfloat *params))
#define glListParameterfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glListParameteriSGIX, (list, pname, param), (GLuint list, GLenum pname, GLint param))
#define glListParameteriSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glListParameterivSGIX, (list, pname, params), (GLuint list, GLenum pname, const GLint *params))
#define glListParameterivSGIX_defined
#endif // defined(GL_SGIX_list_priority)
#if defined(GL_SGIX_pixel_texture)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelTexGenSGIX, (mode), (GLenum mode))
#define glPixelTexGenSGIX_defined
#endif // defined(GL_SGIX_pixel_texture)
#if defined(GL_SGIX_polynomial_ffd)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeformSGIX, (mask), (GLbitfield mask))
#define glDeformSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeformationMap3dSGIX, (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points), (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points))
#define glDeformationMap3dSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeformationMap3fSGIX, (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points), (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points))
#define glDeformationMap3fSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadIdentityDeformationMapSGIX, (mask), (GLbitfield mask))
#define glLoadIdentityDeformationMapSGIX_defined
#endif // defined(GL_SGIX_polynomial_ffd)
#if defined(GL_SGIX_reference_plane)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReferencePlaneSGIX, (equation), (const GLdouble *equation))
#define glReferencePlaneSGIX_defined
#endif // defined(GL_SGIX_reference_plane)
#if defined(GL_SGIX_sprite)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpriteParameterfSGIX, (pname, param), (GLenum pname, GLfloat param))
#define glSpriteParameterfSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpriteParameterfvSGIX, (pname, params), (GLenum pname, const GLfloat *params))
#define glSpriteParameterfvSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpriteParameteriSGIX, (pname, param), (GLenum pname, GLint param))
#define glSpriteParameteriSGIX_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpriteParameterivSGIX, (pname, params), (GLenum pname, const GLint *params))
#define glSpriteParameterivSGIX_defined
#endif // defined(GL_SGIX_sprite)
#if defined(GL_SGIX_tag_sample_buffer)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTagSampleBufferSGIX, (), (void))
#define glTagSampleBufferSGIX_defined
#endif // defined(GL_SGIX_tag_sample_buffer)
#if defined(GL_SGI_color_table)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorTableParameterfvSGI, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glColorTableParameterfvSGI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorTableParameterivSGI, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glColorTableParameterivSGI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorTableSGI, (target, internalformat, width, format, type, table), (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table))
#define glColorTableSGI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyColorTableSGI, (target, internalformat, x, y, width), (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width))
#define glCopyColorTableSGI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableParameterfvSGI, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetColorTableParameterfvSGI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableParameterivSGI, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetColorTableParameterivSGI_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetColorTableSGI, (target, format, type, table), (GLenum target, GLenum format, GLenum type, void *table))
#define glGetColorTableSGI_defined
#endif // defined(GL_SGI_color_table)
#if defined(GL_SUNX_constant_data)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFinishTextureSUNX, (), (void))
#define glFinishTextureSUNX_defined
#endif // defined(GL_SUNX_constant_data)
#if defined(GL_SUN_global_alpha)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactorbSUN, (factor), (GLbyte factor))
#define glGlobalAlphaFactorbSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactordSUN, (factor), (GLdouble factor))
#define glGlobalAlphaFactordSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactorfSUN, (factor), (GLfloat factor))
#define glGlobalAlphaFactorfSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactoriSUN, (factor), (GLint factor))
#define glGlobalAlphaFactoriSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactorsSUN, (factor), (GLshort factor))
#define glGlobalAlphaFactorsSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactorubSUN, (factor), (GLubyte factor))
#define glGlobalAlphaFactorubSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactoruiSUN, (factor), (GLuint factor))
#define glGlobalAlphaFactoruiSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGlobalAlphaFactorusSUN, (factor), (GLushort factor))
#define glGlobalAlphaFactorusSUN_defined
#endif // defined(GL_SUN_global_alpha)
#if defined(GL_SUN_mesh_array)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawMeshArraysSUN, (mode, first, count, width), (GLenum mode, GLint first, GLsizei count, GLsizei width))
#define glDrawMeshArraysSUN_defined
#endif // defined(GL_SUN_mesh_array)
#if defined(GL_SUN_triangle_list)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodePointerSUN, (type, stride, pointer), (GLenum type, GLsizei stride, const void **pointer))
#define glReplacementCodePointerSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeubSUN, (code), (GLubyte code))
#define glReplacementCodeubSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeubvSUN, (code), (const GLubyte *code))
#define glReplacementCodeubvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiSUN, (code), (GLuint code))
#define glReplacementCodeuiSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuivSUN, (code), (const GLuint *code))
#define glReplacementCodeuivSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeusSUN, (code), (GLushort code))
#define glReplacementCodeusSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeusvSUN, (code), (const GLushort *code))
#define glReplacementCodeusvSUN_defined
#endif // defined(GL_SUN_triangle_list)
#if defined(GL_SUN_vertex)
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor3fVertex3fSUN, (r, g, b, x, y, z), (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z))
#define glColor3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor3fVertex3fvSUN, (c, v), (const GLfloat *c, const GLfloat *v))
#define glColor3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4fNormal3fVertex3fSUN, (r, g, b, a, nx, ny, nz, x, y, z), (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glColor4fNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4fNormal3fVertex3fvSUN, (c, n, v), (const GLfloat *c, const GLfloat *n, const GLfloat *v))
#define glColor4fNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4ubVertex2fSUN, (r, g, b, a, x, y), (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y))
#define glColor4ubVertex2fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4ubVertex2fvSUN, (c, v), (const GLubyte *c, const GLfloat *v))
#define glColor4ubVertex2fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4ubVertex3fSUN, (r, g, b, a, x, y, z), (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z))
#define glColor4ubVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColor4ubVertex3fvSUN, (c, v), (const GLubyte *c, const GLfloat *v))
#define glColor4ubVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormal3fVertex3fSUN, (nx, ny, nz, x, y, z), (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormal3fVertex3fvSUN, (n, v), (const GLfloat *n, const GLfloat *v))
#define glNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiColor3fVertex3fSUN, (rc, r, g, b, x, y, z), (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiColor3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiColor3fVertex3fvSUN, (rc, c, v), (const GLuint *rc, const GLfloat *c, const GLfloat *v))
#define glReplacementCodeuiColor3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiColor4fNormal3fVertex3fSUN, (rc, r, g, b, a, nx, ny, nz, x, y, z), (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiColor4fNormal3fVertex3fvSUN, (rc, c, n, v), (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v))
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiColor4ubVertex3fSUN, (rc, r, g, b, a, x, y, z), (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiColor4ubVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiColor4ubVertex3fvSUN, (rc, c, v), (const GLuint *rc, const GLubyte *c, const GLfloat *v))
#define glReplacementCodeuiColor4ubVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiNormal3fVertex3fSUN, (rc, nx, ny, nz, x, y, z), (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiNormal3fVertex3fvSUN, (rc, n, v), (const GLuint *rc, const GLfloat *n, const GLfloat *v))
#define glReplacementCodeuiNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN, (rc, s, t, r, g, b, a, nx, ny, nz, x, y, z), (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN, (rc, tc, c, n, v), (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v))
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN, (rc, s, t, nx, ny, nz, x, y, z), (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN, (rc, tc, n, v), (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v))
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiTexCoord2fVertex3fSUN, (rc, s, t, x, y, z), (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiTexCoord2fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiTexCoord2fVertex3fvSUN, (rc, tc, v), (const GLuint *rc, const GLfloat *tc, const GLfloat *v))
#define glReplacementCodeuiTexCoord2fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiVertex3fSUN, (rc, x, y, z), (GLuint rc, GLfloat x, GLfloat y, GLfloat z))
#define glReplacementCodeuiVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReplacementCodeuiVertex3fvSUN, (rc, v), (const GLuint *rc, const GLfloat *v))
#define glReplacementCodeuiVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fColor3fVertex3fSUN, (s, t, r, g, b, x, y, z), (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z))
#define glTexCoord2fColor3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fColor3fVertex3fvSUN, (tc, c, v), (const GLfloat *tc, const GLfloat *c, const GLfloat *v))
#define glTexCoord2fColor3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fColor4fNormal3fVertex3fSUN, (s, t, r, g, b, a, nx, ny, nz, x, y, z), (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glTexCoord2fColor4fNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fColor4fNormal3fVertex3fvSUN, (tc, c, n, v), (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v))
#define glTexCoord2fColor4fNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fColor4ubVertex3fSUN, (s, t, r, g, b, a, x, y, z), (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z))
#define glTexCoord2fColor4ubVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fColor4ubVertex3fvSUN, (tc, c, v), (const GLfloat *tc, const GLubyte *c, const GLfloat *v))
#define glTexCoord2fColor4ubVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fNormal3fVertex3fSUN, (s, t, nx, ny, nz, x, y, z), (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z))
#define glTexCoord2fNormal3fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fNormal3fVertex3fvSUN, (tc, n, v), (const GLfloat *tc, const GLfloat *n, const GLfloat *v))
#define glTexCoord2fNormal3fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fVertex3fSUN, (s, t, x, y, z), (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z))
#define glTexCoord2fVertex3fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord2fVertex3fvSUN, (tc, v), (const GLfloat *tc, const GLfloat *v))
#define glTexCoord2fVertex3fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4fColor4fNormal3fVertex4fSUN, (s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w), (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glTexCoord4fColor4fNormal3fVertex4fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4fColor4fNormal3fVertex4fvSUN, (tc, c, n, v), (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v))
#define glTexCoord4fColor4fNormal3fVertex4fvSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4fVertex4fSUN, (s, t, p, q, x, y, z, w), (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glTexCoord4fVertex4fSUN_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoord4fVertex4fvSUN, (tc, v), (const GLfloat *tc, const GLfloat *v))
#define glTexCoord4fVertex4fvSUN_defined
#endif // defined(GL_SUN_vertex)
#if defined(GL_VERSION_1_2)
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#endif // defined(GL_VERSION_1_2)
#if defined(GL_VERSION_1_3)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glClientActiveTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClientActiveTexture, (texture), (GLenum texture))
#define glClientActiveTexture_defined
#endif
#ifndef glCompressedTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage1D, (target, level, internalformat, width, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage1D_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage1D, (target, level, xoffset, width, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage1D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glGetCompressedTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTexImage, (target, level, img), (GLenum target, GLint level, void *img))
#define glGetCompressedTexImage_defined
#endif
#ifndef glLoadTransposeMatrixd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadTransposeMatrixd, (m), (const GLdouble *m))
#define glLoadTransposeMatrixd_defined
#endif
#ifndef glLoadTransposeMatrixf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLoadTransposeMatrixf, (m), (const GLfloat *m))
#define glLoadTransposeMatrixf_defined
#endif
#ifndef glMultTransposeMatrixd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultTransposeMatrixd, (m), (const GLdouble *m))
#define glMultTransposeMatrixd_defined
#endif
#ifndef glMultTransposeMatrixf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultTransposeMatrixf, (m), (const GLfloat *m))
#define glMultTransposeMatrixf_defined
#endif
#ifndef glMultiTexCoord1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1d, (target, s), (GLenum target, GLdouble s))
#define glMultiTexCoord1d_defined
#endif
#ifndef glMultiTexCoord1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord1dv_defined
#endif
#ifndef glMultiTexCoord1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1f, (target, s), (GLenum target, GLfloat s))
#define glMultiTexCoord1f_defined
#endif
#ifndef glMultiTexCoord1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord1fv_defined
#endif
#ifndef glMultiTexCoord1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1i, (target, s), (GLenum target, GLint s))
#define glMultiTexCoord1i_defined
#endif
#ifndef glMultiTexCoord1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord1iv_defined
#endif
#ifndef glMultiTexCoord1s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1s, (target, s), (GLenum target, GLshort s))
#define glMultiTexCoord1s_defined
#endif
#ifndef glMultiTexCoord1sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord1sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord1sv_defined
#endif
#ifndef glMultiTexCoord2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2d, (target, s, t), (GLenum target, GLdouble s, GLdouble t))
#define glMultiTexCoord2d_defined
#endif
#ifndef glMultiTexCoord2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord2dv_defined
#endif
#ifndef glMultiTexCoord2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2f, (target, s, t), (GLenum target, GLfloat s, GLfloat t))
#define glMultiTexCoord2f_defined
#endif
#ifndef glMultiTexCoord2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord2fv_defined
#endif
#ifndef glMultiTexCoord2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2i, (target, s, t), (GLenum target, GLint s, GLint t))
#define glMultiTexCoord2i_defined
#endif
#ifndef glMultiTexCoord2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord2iv_defined
#endif
#ifndef glMultiTexCoord2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2s, (target, s, t), (GLenum target, GLshort s, GLshort t))
#define glMultiTexCoord2s_defined
#endif
#ifndef glMultiTexCoord2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord2sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord2sv_defined
#endif
#ifndef glMultiTexCoord3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3d, (target, s, t, r), (GLenum target, GLdouble s, GLdouble t, GLdouble r))
#define glMultiTexCoord3d_defined
#endif
#ifndef glMultiTexCoord3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord3dv_defined
#endif
#ifndef glMultiTexCoord3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3f, (target, s, t, r), (GLenum target, GLfloat s, GLfloat t, GLfloat r))
#define glMultiTexCoord3f_defined
#endif
#ifndef glMultiTexCoord3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord3fv_defined
#endif
#ifndef glMultiTexCoord3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3i, (target, s, t, r), (GLenum target, GLint s, GLint t, GLint r))
#define glMultiTexCoord3i_defined
#endif
#ifndef glMultiTexCoord3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord3iv_defined
#endif
#ifndef glMultiTexCoord3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3s, (target, s, t, r), (GLenum target, GLshort s, GLshort t, GLshort r))
#define glMultiTexCoord3s_defined
#endif
#ifndef glMultiTexCoord3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord3sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord3sv_defined
#endif
#ifndef glMultiTexCoord4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4d, (target, s, t, r, q), (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q))
#define glMultiTexCoord4d_defined
#endif
#ifndef glMultiTexCoord4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4dv, (target, v), (GLenum target, const GLdouble *v))
#define glMultiTexCoord4dv_defined
#endif
#ifndef glMultiTexCoord4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4f, (target, s, t, r, q), (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q))
#define glMultiTexCoord4f_defined
#endif
#ifndef glMultiTexCoord4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4fv, (target, v), (GLenum target, const GLfloat *v))
#define glMultiTexCoord4fv_defined
#endif
#ifndef glMultiTexCoord4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4i, (target, s, t, r, q), (GLenum target, GLint s, GLint t, GLint r, GLint q))
#define glMultiTexCoord4i_defined
#endif
#ifndef glMultiTexCoord4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4iv, (target, v), (GLenum target, const GLint *v))
#define glMultiTexCoord4iv_defined
#endif
#ifndef glMultiTexCoord4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4s, (target, s, t, r, q), (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q))
#define glMultiTexCoord4s_defined
#endif
#ifndef glMultiTexCoord4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoord4sv, (target, v), (GLenum target, const GLshort *v))
#define glMultiTexCoord4sv_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#endif // defined(GL_VERSION_1_3)
#if defined(GL_VERSION_1_4)
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordPointer, (type, stride, pointer), (GLenum type, GLsizei stride, const void *pointer))
#define glFogCoordPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordd, (coord), (GLdouble coord))
#define glFogCoordd_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoorddv, (coord), (const GLdouble *coord))
#define glFogCoorddv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordf, (coord), (GLfloat coord))
#define glFogCoordf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFogCoordfv, (coord), (const GLfloat *coord))
#define glFogCoordfv_defined
#ifndef glMultiDrawArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArrays, (mode, first, count, drawcount), (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount))
#define glMultiDrawArrays_defined
#endif
#ifndef glMultiDrawElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElements, (mode, count, type, indices, drawcount), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount))
#define glMultiDrawElements_defined
#endif
#ifndef glPointParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterf, (pname, param), (GLenum pname, GLfloat param))
#define glPointParameterf_defined
#endif
#ifndef glPointParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glPointParameterfv_defined
#endif
#ifndef glPointParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameteri, (pname, param), (GLenum pname, GLint param))
#define glPointParameteri_defined
#endif
#ifndef glPointParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameteriv, (pname, params), (GLenum pname, const GLint *params))
#define glPointParameteriv_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3b, (red, green, blue), (GLbyte red, GLbyte green, GLbyte blue))
#define glSecondaryColor3b_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3bv, (v), (const GLbyte *v))
#define glSecondaryColor3bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3d, (red, green, blue), (GLdouble red, GLdouble green, GLdouble blue))
#define glSecondaryColor3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3dv, (v), (const GLdouble *v))
#define glSecondaryColor3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3f, (red, green, blue), (GLfloat red, GLfloat green, GLfloat blue))
#define glSecondaryColor3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3fv, (v), (const GLfloat *v))
#define glSecondaryColor3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3i, (red, green, blue), (GLint red, GLint green, GLint blue))
#define glSecondaryColor3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3iv, (v), (const GLint *v))
#define glSecondaryColor3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3s, (red, green, blue), (GLshort red, GLshort green, GLshort blue))
#define glSecondaryColor3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3sv, (v), (const GLshort *v))
#define glSecondaryColor3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3ub, (red, green, blue), (GLubyte red, GLubyte green, GLubyte blue))
#define glSecondaryColor3ub_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3ubv, (v), (const GLubyte *v))
#define glSecondaryColor3ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3ui, (red, green, blue), (GLuint red, GLuint green, GLuint blue))
#define glSecondaryColor3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3uiv, (v), (const GLuint *v))
#define glSecondaryColor3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3us, (red, green, blue), (GLushort red, GLushort green, GLushort blue))
#define glSecondaryColor3us_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColor3usv, (v), (const GLushort *v))
#define glSecondaryColor3usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColorPointer, (size, type, stride, pointer), (GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glSecondaryColorPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2d, (x, y), (GLdouble x, GLdouble y))
#define glWindowPos2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2dv, (v), (const GLdouble *v))
#define glWindowPos2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2f, (x, y), (GLfloat x, GLfloat y))
#define glWindowPos2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2fv, (v), (const GLfloat *v))
#define glWindowPos2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2i, (x, y), (GLint x, GLint y))
#define glWindowPos2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2iv, (v), (const GLint *v))
#define glWindowPos2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2s, (x, y), (GLshort x, GLshort y))
#define glWindowPos2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos2sv, (v), (const GLshort *v))
#define glWindowPos2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3d, (x, y, z), (GLdouble x, GLdouble y, GLdouble z))
#define glWindowPos3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3dv, (v), (const GLdouble *v))
#define glWindowPos3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3f, (x, y, z), (GLfloat x, GLfloat y, GLfloat z))
#define glWindowPos3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3fv, (v), (const GLfloat *v))
#define glWindowPos3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3i, (x, y, z), (GLint x, GLint y, GLint z))
#define glWindowPos3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3iv, (v), (const GLint *v))
#define glWindowPos3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3s, (x, y, z), (GLshort x, GLshort y, GLshort z))
#define glWindowPos3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWindowPos3sv, (v), (const GLshort *v))
#define glWindowPos3sv_defined
#endif // defined(GL_VERSION_1_4)
#if defined(GL_VERSION_1_5)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, void *data))
#define glGetBufferSubData_defined
#endif
#ifndef glGetQueryObjectiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectiv, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetQueryObjectiv_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glMapBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapBuffer, (target, access), (GLenum target, GLenum access))
#define glMapBuffer_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#endif // defined(GL_VERSION_1_5)
#if defined(GL_VERSION_2_0)
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribdv, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribdv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1d, (index, x), (GLuint index, GLdouble x))
#define glVertexAttrib1d_defined
#endif
#ifndef glVertexAttrib1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib1dv_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib1s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1s, (index, x), (GLuint index, GLshort x))
#define glVertexAttrib1s_defined
#endif
#ifndef glVertexAttrib1sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib1sv_defined
#endif
#ifndef glVertexAttrib2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2d, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttrib2d_defined
#endif
#ifndef glVertexAttrib2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib2dv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2s, (index, x, y), (GLuint index, GLshort x, GLshort y))
#define glVertexAttrib2s_defined
#endif
#ifndef glVertexAttrib2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib2sv_defined
#endif
#ifndef glVertexAttrib3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3d, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttrib3d_defined
#endif
#ifndef glVertexAttrib3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib3dv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3s, (index, x, y, z), (GLuint index, GLshort x, GLshort y, GLshort z))
#define glVertexAttrib3s_defined
#endif
#ifndef glVertexAttrib3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib3sv_defined
#endif
#ifndef glVertexAttrib4Nbv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nbv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4Nbv_defined
#endif
#ifndef glVertexAttrib4Niv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Niv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4Niv_defined
#endif
#ifndef glVertexAttrib4Nsv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nsv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4Nsv_defined
#endif
#ifndef glVertexAttrib4Nub_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nub, (index, x, y, z, w), (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))
#define glVertexAttrib4Nub_defined
#endif
#ifndef glVertexAttrib4Nubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4Nubv_defined
#endif
#ifndef glVertexAttrib4Nuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nuiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4Nuiv_defined
#endif
#ifndef glVertexAttrib4Nusv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nusv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4Nusv_defined
#endif
#ifndef glVertexAttrib4bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4bv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4bv_defined
#endif
#ifndef glVertexAttrib4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4d, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttrib4d_defined
#endif
#ifndef glVertexAttrib4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib4dv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttrib4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4iv_defined
#endif
#ifndef glVertexAttrib4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4s, (index, x, y, z, w), (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertexAttrib4s_defined
#endif
#ifndef glVertexAttrib4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4sv_defined
#endif
#ifndef glVertexAttrib4ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4ubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4ubv_defined
#endif
#ifndef glVertexAttrib4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4uiv_defined
#endif
#ifndef glVertexAttrib4usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4usv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4usv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#endif // defined(GL_VERSION_2_0)
#if defined(GL_VERSION_2_1)
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#endif // defined(GL_VERSION_2_1)
#if defined(GL_VERSION_3_0)
#ifndef glBeginConditionalRender_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginConditionalRender, (id, mode), (GLuint id, GLenum mode))
#define glBeginConditionalRender_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindFragDataLocation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragDataLocation, (program, color, name), (GLuint program, GLuint color, const GLchar *name))
#define glBindFragDataLocation_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClampColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClampColor, (target, clamp), (GLenum target, GLenum clamp))
#define glClampColor_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glColorMaski_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorMaski, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaski_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDisablei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisablei, (target, index), (GLenum target, GLuint index))
#define glDisablei_defined
#endif
#ifndef glEnablei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnablei, (target, index), (GLenum target, GLuint index))
#define glEnablei_defined
#endif
#ifndef glEndConditionalRender_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndConditionalRender, (), (void))
#define glEndConditionalRender_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture1D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture1D_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFramebufferTexture3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture3D, (target, attachment, textarget, texture, level, zoffset), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glFramebufferTexture3D_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetBooleani_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBooleani_v, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleani_v_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GLAPI, const GLubyte *, APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIiv_defined
#endif
#ifndef glGetTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuiv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glIsEnabledi_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsEnabledi, (target, index), (GLenum target, GLuint index))
#define glIsEnabledi_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIiv_defined
#endif
#ifndef glTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuiv_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glVertexAttribI1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1i, (index, x), (GLuint index, GLint x))
#define glVertexAttribI1i_defined
#endif
#ifndef glVertexAttribI1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI1iv_defined
#endif
#ifndef glVertexAttribI1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1ui, (index, x), (GLuint index, GLuint x))
#define glVertexAttribI1ui_defined
#endif
#ifndef glVertexAttribI1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI1uiv_defined
#endif
#ifndef glVertexAttribI2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2i, (index, x, y), (GLuint index, GLint x, GLint y))
#define glVertexAttribI2i_defined
#endif
#ifndef glVertexAttribI2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI2iv_defined
#endif
#ifndef glVertexAttribI2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2ui, (index, x, y), (GLuint index, GLuint x, GLuint y))
#define glVertexAttribI2ui_defined
#endif
#ifndef glVertexAttribI2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI2uiv_defined
#endif
#ifndef glVertexAttribI3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3i, (index, x, y, z), (GLuint index, GLint x, GLint y, GLint z))
#define glVertexAttribI3i_defined
#endif
#ifndef glVertexAttribI3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI3iv_defined
#endif
#ifndef glVertexAttribI3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3ui, (index, x, y, z), (GLuint index, GLuint x, GLuint y, GLuint z))
#define glVertexAttribI3ui_defined
#endif
#ifndef glVertexAttribI3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI3uiv_defined
#endif
#ifndef glVertexAttribI4bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4bv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttribI4bv_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttribI4sv_defined
#endif
#ifndef glVertexAttribI4ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttribI4ubv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribI4usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4usv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttribI4usv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#endif // defined(GL_VERSION_3_0)
#if defined(GL_VERSION_3_1)
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformName, (program, uniformIndex, bufSize, length, uniformName), (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName))
#define glGetActiveUniformName_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glPrimitiveRestartIndex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrimitiveRestartIndex, (index), (GLuint index))
#define glPrimitiveRestartIndex_defined
#endif
#ifndef glTexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBuffer, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBuffer_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#endif // defined(GL_VERSION_3_1)
#if defined(GL_VERSION_3_2)
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsBaseVertex, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertex_defined
#endif
#ifndef glDrawElementsInstancedBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseVertex, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertex_defined
#endif
#ifndef glDrawRangeElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElementsBaseVertex, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertex_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLsync, APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTexture_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetMultisamplefv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultisamplefv, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefv_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glMultiDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsBaseVertex, (mode, count, type, indices, drawcount, basevertex), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex))
#define glMultiDrawElementsBaseVertex_defined
#endif
#ifndef glProvokingVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProvokingVertex, (mode), (GLenum mode))
#define glProvokingVertex_defined
#endif
#ifndef glSampleMaski_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleMaski, (maskNumber, mask), (GLuint maskNumber, GLbitfield mask))
#define glSampleMaski_defined
#endif
#ifndef glTexImage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexImage2DMultisample_defined
#endif
#ifndef glTexImage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexImage3DMultisample_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_VERSION_3_2)
#if defined(GL_VERSION_3_3)
#ifndef glBindFragDataLocationIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragDataLocationIndexed, (program, colorNumber, index, name), (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name))
#define glBindFragDataLocationIndexed_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorP3ui, (type, color), (GLenum type, GLuint color))
#define glColorP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorP3uiv, (type, color), (GLenum type, const GLuint *color))
#define glColorP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorP4ui, (type, color), (GLenum type, GLuint color))
#define glColorP4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorP4uiv, (type, color), (GLenum type, const GLuint *color))
#define glColorP4uiv_defined
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGetFragDataIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetFragDataIndex, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataIndex_defined
#endif
#ifndef glGetQueryObjecti64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjecti64v, (id, pname, params), (GLuint id, GLenum pname, GLint64 *params))
#define glGetQueryObjecti64v_defined
#endif
#ifndef glGetQueryObjectui64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectui64v, (id, pname, params), (GLuint id, GLenum pname, GLuint64 *params))
#define glGetQueryObjectui64v_defined
#endif
#ifndef glGetSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterIiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIiv_defined
#endif
#ifndef glGetSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterIuiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP1ui, (texture, type, coords), (GLenum texture, GLenum type, GLuint coords))
#define glMultiTexCoordP1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP1uiv, (texture, type, coords), (GLenum texture, GLenum type, const GLuint *coords))
#define glMultiTexCoordP1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP2ui, (texture, type, coords), (GLenum texture, GLenum type, GLuint coords))
#define glMultiTexCoordP2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP2uiv, (texture, type, coords), (GLenum texture, GLenum type, const GLuint *coords))
#define glMultiTexCoordP2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP3ui, (texture, type, coords), (GLenum texture, GLenum type, GLuint coords))
#define glMultiTexCoordP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP3uiv, (texture, type, coords), (GLenum texture, GLenum type, const GLuint *coords))
#define glMultiTexCoordP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP4ui, (texture, type, coords), (GLenum texture, GLenum type, GLuint coords))
#define glMultiTexCoordP4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiTexCoordP4uiv, (texture, type, coords), (GLenum texture, GLenum type, const GLuint *coords))
#define glMultiTexCoordP4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalP3ui, (type, coords), (GLenum type, GLuint coords))
#define glNormalP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNormalP3uiv, (type, coords), (GLenum type, const GLuint *coords))
#define glNormalP3uiv_defined
#ifndef glQueryCounter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glQueryCounter, (id, target), (GLuint id, GLenum target))
#define glQueryCounter_defined
#endif
#ifndef glSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterIiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIiv_defined
#endif
#ifndef glSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterIuiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuiv_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColorP3ui, (type, color), (GLenum type, GLuint color))
#define glSecondaryColorP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSecondaryColorP3uiv, (type, color), (GLenum type, const GLuint *color))
#define glSecondaryColorP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP1ui, (type, coords), (GLenum type, GLuint coords))
#define glTexCoordP1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP1uiv, (type, coords), (GLenum type, const GLuint *coords))
#define glTexCoordP1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP2ui, (type, coords), (GLenum type, GLuint coords))
#define glTexCoordP2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP2uiv, (type, coords), (GLenum type, const GLuint *coords))
#define glTexCoordP2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP3ui, (type, coords), (GLenum type, GLuint coords))
#define glTexCoordP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP3uiv, (type, coords), (GLenum type, const GLuint *coords))
#define glTexCoordP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP4ui, (type, coords), (GLenum type, GLuint coords))
#define glTexCoordP4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexCoordP4uiv, (type, coords), (GLenum type, const GLuint *coords))
#define glTexCoordP4uiv_defined
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribP1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP1ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP1ui_defined
#endif
#ifndef glVertexAttribP1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP1uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP1uiv_defined
#endif
#ifndef glVertexAttribP2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP2ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP2ui_defined
#endif
#ifndef glVertexAttribP2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP2uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP2uiv_defined
#endif
#ifndef glVertexAttribP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP3ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP3ui_defined
#endif
#ifndef glVertexAttribP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP3uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP3uiv_defined
#endif
#ifndef glVertexAttribP4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP4ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP4ui_defined
#endif
#ifndef glVertexAttribP4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP4uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP4uiv_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexP2ui, (type, value), (GLenum type, GLuint value))
#define glVertexP2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexP2uiv, (type, value), (GLenum type, const GLuint *value))
#define glVertexP2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexP3ui, (type, value), (GLenum type, GLuint value))
#define glVertexP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexP3uiv, (type, value), (GLenum type, const GLuint *value))
#define glVertexP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexP4ui, (type, value), (GLenum type, GLuint value))
#define glVertexP4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexP4uiv, (type, value), (GLenum type, const GLuint *value))
#define glVertexP4uiv_defined
#endif // defined(GL_VERSION_3_3)
#if defined(GL_VERSION_4_0)
#ifndef glBeginQueryIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginQueryIndexed, (target, index, id), (GLenum target, GLuint index, GLuint id))
#define glBeginQueryIndexed_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBlendEquationSeparatei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparatei, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparatei_defined
#endif
#ifndef glBlendEquationi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationi, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationi_defined
#endif
#ifndef glBlendFuncSeparatei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparatei, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparatei_defined
#endif
#ifndef glBlendFunci_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunci, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunci_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysIndirect, (mode, indirect), (GLenum mode, const void *indirect))
#define glDrawArraysIndirect_defined
#endif
#ifndef glDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsIndirect, (mode, type, indirect), (GLenum mode, GLenum type, const void *indirect))
#define glDrawElementsIndirect_defined
#endif
#ifndef glDrawTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedback, (mode, id), (GLenum mode, GLuint id))
#define glDrawTransformFeedback_defined
#endif
#ifndef glDrawTransformFeedbackStream_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackStream, (mode, id, stream), (GLenum mode, GLuint id, GLuint stream))
#define glDrawTransformFeedbackStream_defined
#endif
#ifndef glEndQueryIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndQueryIndexed, (target, index), (GLenum target, GLuint index))
#define glEndQueryIndexed_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGetActiveSubroutineName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineName, (program, shadertype, index, bufsize, length, name), (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))
#define glGetActiveSubroutineName_defined
#endif
#ifndef glGetActiveSubroutineUniformName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineUniformName, (program, shadertype, index, bufsize, length, name), (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))
#define glGetActiveSubroutineUniformName_defined
#endif
#ifndef glGetActiveSubroutineUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineUniformiv, (program, shadertype, index, pname, values), (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values))
#define glGetActiveSubroutineUniformiv_defined
#endif
#ifndef glGetProgramStageiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramStageiv, (program, shadertype, pname, values), (GLuint program, GLenum shadertype, GLenum pname, GLint *values))
#define glGetProgramStageiv_defined
#endif
#ifndef glGetQueryIndexediv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryIndexediv, (target, index, pname, params), (GLenum target, GLuint index, GLenum pname, GLint *params))
#define glGetQueryIndexediv_defined
#endif
#ifndef glGetSubroutineIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetSubroutineIndex, (program, shadertype, name), (GLuint program, GLenum shadertype, const GLchar *name))
#define glGetSubroutineIndex_defined
#endif
#ifndef glGetSubroutineUniformLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetSubroutineUniformLocation, (program, shadertype, name), (GLuint program, GLenum shadertype, const GLchar *name))
#define glGetSubroutineUniformLocation_defined
#endif
#ifndef glGetUniformSubroutineuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformSubroutineuiv, (shadertype, location, params), (GLenum shadertype, GLint location, GLuint *params))
#define glGetUniformSubroutineuiv_defined
#endif
#ifndef glGetUniformdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformdv, (program, location, params), (GLuint program, GLint location, GLdouble *params))
#define glGetUniformdv_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glMinSampleShading_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinSampleShading, (value), (GLfloat value))
#define glMinSampleShading_defined
#endif
#ifndef glPatchParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPatchParameterfv, (pname, values), (GLenum pname, const GLfloat *values))
#define glPatchParameterfv_defined
#endif
#ifndef glPatchParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPatchParameteri, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteri_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glUniform1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1d, (location, x), (GLint location, GLdouble x))
#define glUniform1d_defined
#endif
#ifndef glUniform1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform1dv_defined
#endif
#ifndef glUniform2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2d, (location, x, y), (GLint location, GLdouble x, GLdouble y))
#define glUniform2d_defined
#endif
#ifndef glUniform2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform2dv_defined
#endif
#ifndef glUniform3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3d, (location, x, y, z), (GLint location, GLdouble x, GLdouble y, GLdouble z))
#define glUniform3d_defined
#endif
#ifndef glUniform3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform3dv_defined
#endif
#ifndef glUniform4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4d, (location, x, y, z, w), (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glUniform4d_defined
#endif
#ifndef glUniform4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform4dv_defined
#endif
#ifndef glUniformMatrix2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2dv_defined
#endif
#ifndef glUniformMatrix2x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2x3dv_defined
#endif
#ifndef glUniformMatrix2x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2x4dv_defined
#endif
#ifndef glUniformMatrix3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3dv_defined
#endif
#ifndef glUniformMatrix3x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3x2dv_defined
#endif
#ifndef glUniformMatrix3x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3x4dv_defined
#endif
#ifndef glUniformMatrix4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4dv_defined
#endif
#ifndef glUniformMatrix4x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4x2dv_defined
#endif
#ifndef glUniformMatrix4x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4x3dv_defined
#endif
#ifndef glUniformSubroutinesuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformSubroutinesuiv, (shadertype, count, indices), (GLenum shadertype, GLsizei count, const GLuint *indices))
#define glUniformSubroutinesuiv_defined
#endif
#endif // defined(GL_VERSION_4_0)
#if defined(GL_VERSION_4_1)
#ifndef glActiveShaderProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveShaderProgram, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgram_defined
#endif
#ifndef glBindProgramPipeline_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindProgramPipeline, (pipeline), (GLuint pipeline))
#define glBindProgramPipeline_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glCreateShaderProgramv_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShaderProgramv, (type, count, strings), (GLenum type, GLsizei count, const GLchar *const*strings))
#define glCreateShaderProgramv_defined
#endif
#ifndef glDeleteProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgramPipelines, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelines_defined
#endif
#ifndef glDepthRangeArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangeArrayv, (first, count, v), (GLuint first, GLsizei count, const GLdouble *v))
#define glDepthRangeArrayv_defined
#endif
#ifndef glDepthRangeIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangeIndexed, (index, n, f), (GLuint index, GLdouble n, GLdouble f))
#define glDepthRangeIndexed_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glGenProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelines_defined
#endif
#ifndef glGetDoublei_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoublei_v, (target, index, data), (GLenum target, GLuint index, GLdouble *data))
#define glGetDoublei_v_defined
#endif
#ifndef glGetFloati_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloati_v, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloati_v_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetProgramPipelineInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramPipelineInfoLog, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLog_defined
#endif
#ifndef glGetProgramPipelineiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramPipelineiv, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineiv_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetVertexAttribLdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLdv, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribLdv_defined
#endif
#ifndef glIsProgramPipeline_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgramPipeline, (pipeline), (GLuint pipeline))
#define glIsProgramPipeline_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glProgramUniform1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1d, (program, location, v0), (GLuint program, GLint location, GLdouble v0))
#define glProgramUniform1d_defined
#endif
#ifndef glProgramUniform1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform1dv_defined
#endif
#ifndef glProgramUniform1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1f, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1f_defined
#endif
#ifndef glProgramUniform1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fv_defined
#endif
#ifndef glProgramUniform1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1i_defined
#endif
#ifndef glProgramUniform1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1iv_defined
#endif
#ifndef glProgramUniform1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1ui_defined
#endif
#ifndef glProgramUniform1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uiv_defined
#endif
#ifndef glProgramUniform2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2d, (program, location, v0, v1), (GLuint program, GLint location, GLdouble v0, GLdouble v1))
#define glProgramUniform2d_defined
#endif
#ifndef glProgramUniform2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform2dv_defined
#endif
#ifndef glProgramUniform2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2f, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2f_defined
#endif
#ifndef glProgramUniform2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fv_defined
#endif
#ifndef glProgramUniform2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2i_defined
#endif
#ifndef glProgramUniform2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2iv_defined
#endif
#ifndef glProgramUniform2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2ui_defined
#endif
#ifndef glProgramUniform2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uiv_defined
#endif
#ifndef glProgramUniform3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3d, (program, location, v0, v1, v2), (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2))
#define glProgramUniform3d_defined
#endif
#ifndef glProgramUniform3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform3dv_defined
#endif
#ifndef glProgramUniform3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3f, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3f_defined
#endif
#ifndef glProgramUniform3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fv_defined
#endif
#ifndef glProgramUniform3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3i_defined
#endif
#ifndef glProgramUniform3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3iv_defined
#endif
#ifndef glProgramUniform3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3ui_defined
#endif
#ifndef glProgramUniform3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uiv_defined
#endif
#ifndef glProgramUniform4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4d, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3))
#define glProgramUniform4d_defined
#endif
#ifndef glProgramUniform4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform4dv_defined
#endif
#ifndef glProgramUniform4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4f, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4f_defined
#endif
#ifndef glProgramUniform4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fv_defined
#endif
#ifndef glProgramUniform4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4i_defined
#endif
#ifndef glProgramUniform4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4iv_defined
#endif
#ifndef glProgramUniform4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4ui_defined
#endif
#ifndef glProgramUniform4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uiv_defined
#endif
#ifndef glProgramUniformMatrix2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2dv_defined
#endif
#ifndef glProgramUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fv_defined
#endif
#ifndef glProgramUniformMatrix2x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x3dv_defined
#endif
#ifndef glProgramUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fv_defined
#endif
#ifndef glProgramUniformMatrix2x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x4dv_defined
#endif
#ifndef glProgramUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fv_defined
#endif
#ifndef glProgramUniformMatrix3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3dv_defined
#endif
#ifndef glProgramUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fv_defined
#endif
#ifndef glProgramUniformMatrix3x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x2dv_defined
#endif
#ifndef glProgramUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fv_defined
#endif
#ifndef glProgramUniformMatrix3x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x4dv_defined
#endif
#ifndef glProgramUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fv_defined
#endif
#ifndef glProgramUniformMatrix4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4dv_defined
#endif
#ifndef glProgramUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fv_defined
#endif
#ifndef glProgramUniformMatrix4x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x2dv_defined
#endif
#ifndef glProgramUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fv_defined
#endif
#ifndef glProgramUniformMatrix4x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x3dv_defined
#endif
#ifndef glProgramUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fv_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glScissorArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorArrayv, (first, count, v), (GLuint first, GLsizei count, const GLint *v))
#define glScissorArrayv_defined
#endif
#ifndef glScissorIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorIndexed, (index, left, bottom, width, height), (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))
#define glScissorIndexed_defined
#endif
#ifndef glScissorIndexedv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorIndexedv, (index, v), (GLuint index, const GLint *v))
#define glScissorIndexedv_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glUseProgramStages_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseProgramStages, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStages_defined
#endif
#ifndef glValidateProgramPipeline_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glValidateProgramPipeline, (pipeline), (GLuint pipeline))
#define glValidateProgramPipeline_defined
#endif
#ifndef glVertexAttribL1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1d, (index, x), (GLuint index, GLdouble x))
#define glVertexAttribL1d_defined
#endif
#ifndef glVertexAttribL1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL1dv_defined
#endif
#ifndef glVertexAttribL2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2d, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttribL2d_defined
#endif
#ifndef glVertexAttribL2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL2dv_defined
#endif
#ifndef glVertexAttribL3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3d, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttribL3d_defined
#endif
#ifndef glVertexAttribL3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL3dv_defined
#endif
#ifndef glVertexAttribL4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4d, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttribL4d_defined
#endif
#ifndef glVertexAttribL4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL4dv_defined
#endif
#ifndef glVertexAttribLPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribLPointer_defined
#endif
#ifndef glViewportArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportArrayv, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glViewportArrayv_defined
#endif
#ifndef glViewportIndexedf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportIndexedf, (index, x, y, w, h), (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))
#define glViewportIndexedf_defined
#endif
#ifndef glViewportIndexedfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportIndexedfv, (index, v), (GLuint index, const GLfloat *v))
#define glViewportIndexedfv_defined
#endif
#endif // defined(GL_VERSION_4_1)
#if defined(GL_VERSION_4_2)
#ifndef glBindImageTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindImageTexture, (unit, texture, level, layered, layer, access, format), (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))
#define glBindImageTexture_defined
#endif
#ifndef glDrawArraysInstancedBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstancedBaseInstance, (mode, first, count, instancecount, baseinstance), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance))
#define glDrawArraysInstancedBaseInstance_defined
#endif
#ifndef glDrawElementsInstancedBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseInstance, (mode, count, type, indices, instancecount, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance))
#define glDrawElementsInstancedBaseInstance_defined
#endif
#ifndef glDrawElementsInstancedBaseVertexBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseVertexBaseInstance, (mode, count, type, indices, instancecount, basevertex, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance))
#define glDrawElementsInstancedBaseVertexBaseInstance_defined
#endif
#ifndef glDrawTransformFeedbackInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackInstanced, (mode, id, instancecount), (GLenum mode, GLuint id, GLsizei instancecount))
#define glDrawTransformFeedbackInstanced_defined
#endif
#ifndef glDrawTransformFeedbackStreamInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackStreamInstanced, (mode, id, stream, instancecount), (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount))
#define glDrawTransformFeedbackStreamInstanced_defined
#endif
#ifndef glGetActiveAtomicCounterBufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveAtomicCounterBufferiv, (program, bufferIndex, pname, params), (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params))
#define glGetActiveAtomicCounterBufferiv_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glMemoryBarrier_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryBarrier, (barriers), (GLbitfield barriers))
#define glMemoryBarrier_defined
#endif
#ifndef glTexStorage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage1D, (target, levels, internalformat, width), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTexStorage1D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#endif // defined(GL_VERSION_4_2)
#if defined(GL_VERSION_4_3)
#ifndef glBindVertexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexBuffer, (bindingindex, buffer, offset, stride), (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glBindVertexBuffer_defined
#endif
#ifndef glClearBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferData, (target, internalformat, format, type, data), (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearBufferData_defined
#endif
#ifndef glClearBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferSubData, (target, internalformat, offset, size, format, type, data), (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))
#define glClearBufferSubData_defined
#endif
#ifndef glCopyImageSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyImageSubData, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubData_defined
#endif
#ifndef glDebugMessageCallback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageCallback, (callback, userParam), (GLDEBUGPROC callback, const void *userParam))
#define glDebugMessageCallback_defined
#endif
#ifndef glDebugMessageControl_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageControl, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControl_defined
#endif
#ifndef glDebugMessageInsert_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageInsert, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsert_defined
#endif
#ifndef glDispatchCompute_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchCompute, (num_groups_x, num_groups_y, num_groups_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))
#define glDispatchCompute_defined
#endif
#ifndef glDispatchComputeIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchComputeIndirect, (indirect), (GLintptr indirect))
#define glDispatchComputeIndirect_defined
#endif
#ifndef glFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glFramebufferParameteri_defined
#endif
#ifndef glGetDebugMessageLog_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetDebugMessageLog, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLog_defined
#endif
#ifndef glGetFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetFramebufferParameteriv_defined
#endif
#ifndef glGetInternalformati64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformati64v, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params))
#define glGetInternalformati64v_defined
#endif
#ifndef glGetObjectLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectLabel, (identifier, name, bufSize, length, label), (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabel_defined
#endif
#ifndef glGetObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectPtrLabel, (ptr, bufSize, length, label), (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectPtrLabel_defined
#endif
#ifndef glGetProgramInterfaceiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramInterfaceiv, (program, programInterface, pname, params), (GLuint program, GLenum programInterface, GLenum pname, GLint *params))
#define glGetProgramInterfaceiv_defined
#endif
#ifndef glGetProgramResourceIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetProgramResourceIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceIndex_defined
#endif
#ifndef glGetProgramResourceLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetProgramResourceLocation, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocation_defined
#endif
#ifndef glGetProgramResourceLocationIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetProgramResourceLocationIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocationIndex_defined
#endif
#ifndef glGetProgramResourceName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourceName, (program, programInterface, index, bufSize, length, name), (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))
#define glGetProgramResourceName_defined
#endif
#ifndef glGetProgramResourceiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourceiv, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))
#define glGetProgramResourceiv_defined
#endif
#ifndef glInvalidateBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateBufferData, (buffer), (GLuint buffer))
#define glInvalidateBufferData_defined
#endif
#ifndef glInvalidateBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateBufferSubData, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizeiptr length))
#define glInvalidateBufferSubData_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glInvalidateTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateTexImage, (texture, level), (GLuint texture, GLint level))
#define glInvalidateTexImage_defined
#endif
#ifndef glInvalidateTexSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateTexSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth))
#define glInvalidateTexSubImage_defined
#endif
#ifndef glMultiDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirect, (mode, indirect, drawcount, stride), (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawArraysIndirect_defined
#endif
#ifndef glMultiDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirect, (mode, type, indirect, drawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawElementsIndirect_defined
#endif
#ifndef glObjectLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glObjectLabel, (identifier, name, length, label), (GLenum identifier, GLuint name, GLsizei length, const GLchar *label))
#define glObjectLabel_defined
#endif
#ifndef glObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glObjectPtrLabel, (ptr, length, label), (const void *ptr, GLsizei length, const GLchar *label))
#define glObjectPtrLabel_defined
#endif
#ifndef glPopDebugGroup_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPopDebugGroup, (), (void))
#define glPopDebugGroup_defined
#endif
#ifndef glPushDebugGroup_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPushDebugGroup, (source, id, length, message), (GLenum source, GLuint id, GLsizei length, const GLchar *message))
#define glPushDebugGroup_defined
#endif
#ifndef glShaderStorageBlockBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderStorageBlockBinding, (program, storageBlockIndex, storageBlockBinding), (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding))
#define glShaderStorageBlockBinding_defined
#endif
#ifndef glTexBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBufferRange, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRange_defined
#endif
#ifndef glTexStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexStorage2DMultisample_defined
#endif
#ifndef glTexStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexStorage3DMultisample_defined
#endif
#ifndef glTextureView_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureView, (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers), (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))
#define glTextureView_defined
#endif
#ifndef glVertexAttribBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribBinding, (attribindex, bindingindex), (GLuint attribindex, GLuint bindingindex))
#define glVertexAttribBinding_defined
#endif
#ifndef glVertexAttribFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribFormat, (attribindex, size, type, normalized, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexAttribFormat_defined
#endif
#ifndef glVertexAttribIFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribIFormat_defined
#endif
#ifndef glVertexAttribLFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribLFormat_defined
#endif
#ifndef glVertexBindingDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexBindingDivisor, (bindingindex, divisor), (GLuint bindingindex, GLuint divisor))
#define glVertexBindingDivisor_defined
#endif
#endif // defined(GL_VERSION_4_3)
#if defined(GL_VERSION_4_4)
#ifndef glBindBuffersBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffersBase, (target, first, count, buffers), (GLenum target, GLuint first, GLsizei count, const GLuint *buffers))
#define glBindBuffersBase_defined
#endif
#ifndef glBindBuffersRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffersRange, (target, first, count, buffers, offsets, sizes), (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes))
#define glBindBuffersRange_defined
#endif
#ifndef glBindImageTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindImageTextures, (first, count, textures), (GLuint first, GLsizei count, const GLuint *textures))
#define glBindImageTextures_defined
#endif
#ifndef glBindSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindSamplers, (first, count, samplers), (GLuint first, GLsizei count, const GLuint *samplers))
#define glBindSamplers_defined
#endif
#ifndef glBindTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTextures, (first, count, textures), (GLuint first, GLsizei count, const GLuint *textures))
#define glBindTextures_defined
#endif
#ifndef glBindVertexBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexBuffers, (first, count, buffers, offsets, strides), (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))
#define glBindVertexBuffers_defined
#endif
#ifndef glBufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferStorage, (target, size, data, flags), (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags))
#define glBufferStorage_defined
#endif
#ifndef glClearTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearTexImage, (texture, level, format, type, data), (GLuint texture, GLint level, GLenum format, GLenum type, const void *data))
#define glClearTexImage_defined
#endif
#ifndef glClearTexSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearTexSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data))
#define glClearTexSubImage_defined
#endif
#endif // defined(GL_VERSION_4_4)
#if defined(GL_VERSION_4_5)
#ifndef glBindTextureUnit_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTextureUnit, (unit, texture), (GLuint unit, GLuint texture))
#define glBindTextureUnit_defined
#endif
#ifndef glBlitNamedFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlitNamedFramebuffer, (readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitNamedFramebuffer_defined
#endif
#ifndef glCheckNamedFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckNamedFramebufferStatus, (framebuffer, target), (GLuint framebuffer, GLenum target))
#define glCheckNamedFramebufferStatus_defined
#endif
#ifndef glClearNamedBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferData, (buffer, internalformat, format, type, data), (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferData_defined
#endif
#ifndef glClearNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferSubData, (buffer, internalformat, offset, size, format, type, data), (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferSubData_defined
#endif
#ifndef glClearNamedFramebufferfi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferfi, (framebuffer, buffer, drawbuffer, depth, stencil), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearNamedFramebufferfi_defined
#endif
#ifndef glClearNamedFramebufferfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferfv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearNamedFramebufferfv_defined
#endif
#ifndef glClearNamedFramebufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferiv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearNamedFramebufferiv_defined
#endif
#ifndef glClearNamedFramebufferuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferuiv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearNamedFramebufferuiv_defined
#endif
#ifndef glClipControl_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClipControl, (origin, depth), (GLenum origin, GLenum depth))
#define glClipControl_defined
#endif
#ifndef glCompressedTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage1D, (texture, level, xoffset, width, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage1D_defined
#endif
#ifndef glCompressedTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage2D, (texture, level, xoffset, yoffset, width, height, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage2D_defined
#endif
#ifndef glCompressedTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage3D_defined
#endif
#ifndef glCopyNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyNamedBufferSubData, (readBuffer, writeBuffer, readOffset, writeOffset, size), (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyNamedBufferSubData_defined
#endif
#ifndef glCopyTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage1D, (texture, level, xoffset, x, y, width), (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTextureSubImage1D_defined
#endif
#ifndef glCopyTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage2D, (texture, level, xoffset, yoffset, x, y, width, height), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage2D_defined
#endif
#ifndef glCopyTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, x, y, width, height), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage3D_defined
#endif
#ifndef glCreateBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glCreateBuffers_defined
#endif
#ifndef glCreateFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glCreateFramebuffers_defined
#endif
#ifndef glCreateProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glCreateProgramPipelines_defined
#endif
#ifndef glCreateQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateQueries, (target, n, ids), (GLenum target, GLsizei n, GLuint *ids))
#define glCreateQueries_defined
#endif
#ifndef glCreateRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glCreateRenderbuffers_defined
#endif
#ifndef glCreateSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateSamplers, (n, samplers), (GLsizei n, GLuint *samplers))
#define glCreateSamplers_defined
#endif
#ifndef glCreateTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateTextures, (target, n, textures), (GLenum target, GLsizei n, GLuint *textures))
#define glCreateTextures_defined
#endif
#ifndef glCreateTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glCreateTransformFeedbacks_defined
#endif
#ifndef glCreateVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glCreateVertexArrays_defined
#endif
#ifndef glDisableVertexArrayAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexArrayAttrib, (vaobj, index), (GLuint vaobj, GLuint index))
#define glDisableVertexArrayAttrib_defined
#endif
#ifndef glEnableVertexArrayAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexArrayAttrib, (vaobj, index), (GLuint vaobj, GLuint index))
#define glEnableVertexArrayAttrib_defined
#endif
#ifndef glFlushMappedNamedBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedNamedBufferRange, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizeiptr length))
#define glFlushMappedNamedBufferRange_defined
#endif
#ifndef glGenerateTextureMipmap_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateTextureMipmap, (texture), (GLuint texture))
#define glGenerateTextureMipmap_defined
#endif
#ifndef glGetCompressedTextureImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureImage, (texture, level, bufSize, pixels), (GLuint texture, GLint level, GLsizei bufSize, void *pixels))
#define glGetCompressedTextureImage_defined
#endif
#ifndef glGetCompressedTextureSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels))
#define glGetCompressedTextureSubImage_defined
#endif
#ifndef glGetGraphicsResetStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetGraphicsResetStatus, (), (void))
#define glGetGraphicsResetStatus_defined
#endif
#ifndef glGetNamedBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameteri64v, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint64 *params))
#define glGetNamedBufferParameteri64v_defined
#endif
#ifndef glGetNamedBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameteriv, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint *params))
#define glGetNamedBufferParameteriv_defined
#endif
#ifndef glGetNamedBufferPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferPointerv, (buffer, pname, params), (GLuint buffer, GLenum pname, void **params))
#define glGetNamedBufferPointerv_defined
#endif
#ifndef glGetNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferSubData, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data))
#define glGetNamedBufferSubData_defined
#endif
#ifndef glGetNamedFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferAttachmentParameteriv, (framebuffer, attachment, pname, params), (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params))
#define glGetNamedFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetNamedFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferParameteriv, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint *param))
#define glGetNamedFramebufferParameteriv_defined
#endif
#ifndef glGetNamedRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedRenderbufferParameteriv, (renderbuffer, pname, params), (GLuint renderbuffer, GLenum pname, GLint *params))
#define glGetNamedRenderbufferParameteriv_defined
#endif
#ifndef glGetQueryBufferObjecti64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjecti64v, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjecti64v_defined
#endif
#ifndef glGetQueryBufferObjectiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjectiv, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjectiv_defined
#endif
#ifndef glGetQueryBufferObjectui64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjectui64v, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjectui64v_defined
#endif
#ifndef glGetQueryBufferObjectuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryBufferObjectuiv, (id, buffer, pname, offset), (GLuint id, GLuint buffer, GLenum pname, GLintptr offset))
#define glGetQueryBufferObjectuiv_defined
#endif
#ifndef glGetTextureImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureImage, (texture, level, format, type, bufSize, pixels), (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetTextureImage_defined
#endif
#ifndef glGetTextureLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameterfv, (texture, level, pname, params), (GLuint texture, GLint level, GLenum pname, GLfloat *params))
#define glGetTextureLevelParameterfv_defined
#endif
#ifndef glGetTextureLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameteriv, (texture, level, pname, params), (GLuint texture, GLint level, GLenum pname, GLint *params))
#define glGetTextureLevelParameteriv_defined
#endif
#ifndef glGetTextureParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIiv, (texture, pname, params), (GLuint texture, GLenum pname, GLint *params))
#define glGetTextureParameterIiv_defined
#endif
#ifndef glGetTextureParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIuiv, (texture, pname, params), (GLuint texture, GLenum pname, GLuint *params))
#define glGetTextureParameterIuiv_defined
#endif
#ifndef glGetTextureParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterfv, (texture, pname, params), (GLuint texture, GLenum pname, GLfloat *params))
#define glGetTextureParameterfv_defined
#endif
#ifndef glGetTextureParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameteriv, (texture, pname, params), (GLuint texture, GLenum pname, GLint *params))
#define glGetTextureParameteriv_defined
#endif
#ifndef glGetTextureSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetTextureSubImage_defined
#endif
#ifndef glGetTransformFeedbacki64_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbacki64_v, (xfb, pname, index, param), (GLuint xfb, GLenum pname, GLuint index, GLint64 *param))
#define glGetTransformFeedbacki64_v_defined
#endif
#ifndef glGetTransformFeedbacki_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbacki_v, (xfb, pname, index, param), (GLuint xfb, GLenum pname, GLuint index, GLint *param))
#define glGetTransformFeedbacki_v_defined
#endif
#ifndef glGetTransformFeedbackiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackiv, (xfb, pname, param), (GLuint xfb, GLenum pname, GLint *param))
#define glGetTransformFeedbackiv_defined
#endif
#ifndef glGetVertexArrayIndexed64iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIndexed64iv, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param))
#define glGetVertexArrayIndexed64iv_defined
#endif
#ifndef glGetVertexArrayIndexediv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIndexediv, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint *param))
#define glGetVertexArrayIndexediv_defined
#endif
#ifndef glGetVertexArrayiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayiv, (vaobj, pname, param), (GLuint vaobj, GLenum pname, GLint *param))
#define glGetVertexArrayiv_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnColorTable, (target, format, type, bufSize, table), (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table))
#define glGetnColorTable_defined
#ifndef glGetnCompressedTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnCompressedTexImage, (target, lod, bufSize, pixels), (GLenum target, GLint lod, GLsizei bufSize, void *pixels))
#define glGetnCompressedTexImage_defined
#endif
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnConvolutionFilter, (target, format, type, bufSize, image), (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image))
#define glGetnConvolutionFilter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnHistogram, (target, reset, format, type, bufSize, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))
#define glGetnHistogram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMapdv, (target, query, bufSize, v), (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v))
#define glGetnMapdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMapfv, (target, query, bufSize, v), (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v))
#define glGetnMapfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMapiv, (target, query, bufSize, v), (GLenum target, GLenum query, GLsizei bufSize, GLint *v))
#define glGetnMapiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnMinmax, (target, reset, format, type, bufSize, values), (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values))
#define glGetnMinmax_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPixelMapfv, (map, bufSize, values), (GLenum map, GLsizei bufSize, GLfloat *values))
#define glGetnPixelMapfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPixelMapuiv, (map, bufSize, values), (GLenum map, GLsizei bufSize, GLuint *values))
#define glGetnPixelMapuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPixelMapusv, (map, bufSize, values), (GLenum map, GLsizei bufSize, GLushort *values))
#define glGetnPixelMapusv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnPolygonStipple, (bufSize, pattern), (GLsizei bufSize, GLubyte *pattern))
#define glGetnPolygonStipple_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnSeparableFilter, (target, format, type, rowBufSize, row, columnBufSize, column, span), (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span))
#define glGetnSeparableFilter_defined
#ifndef glGetnTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnTexImage, (target, level, format, type, bufSize, pixels), (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetnTexImage_defined
#endif
#ifndef glGetnUniformdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformdv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLdouble *params))
#define glGetnUniformdv_defined
#endif
#ifndef glGetnUniformfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformfv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfv_defined
#endif
#ifndef glGetnUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformiv_defined
#endif
#ifndef glGetnUniformuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformuiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuiv_defined
#endif
#ifndef glInvalidateNamedFramebufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateNamedFramebufferData, (framebuffer, numAttachments, attachments), (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateNamedFramebufferData_defined
#endif
#ifndef glInvalidateNamedFramebufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateNamedFramebufferSubData, (framebuffer, numAttachments, attachments, x, y, width, height), (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateNamedFramebufferSubData_defined
#endif
#ifndef glMapNamedBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBuffer, (buffer, access), (GLuint buffer, GLenum access))
#define glMapNamedBuffer_defined
#endif
#ifndef glMapNamedBufferRange_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBufferRange, (buffer, offset, length, access), (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapNamedBufferRange_defined
#endif
#ifndef glMemoryBarrierByRegion_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryBarrierByRegion, (barriers), (GLbitfield barriers))
#define glMemoryBarrierByRegion_defined
#endif
#ifndef glNamedBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferData, (buffer, size, data, usage), (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage))
#define glNamedBufferData_defined
#endif
#ifndef glNamedBufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferStorage, (buffer, size, data, flags), (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags))
#define glNamedBufferStorage_defined
#endif
#ifndef glNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferSubData, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data))
#define glNamedBufferSubData_defined
#endif
#ifndef glNamedFramebufferDrawBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferDrawBuffer, (framebuffer, buf), (GLuint framebuffer, GLenum buf))
#define glNamedFramebufferDrawBuffer_defined
#endif
#ifndef glNamedFramebufferDrawBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferDrawBuffers, (framebuffer, n, bufs), (GLuint framebuffer, GLsizei n, const GLenum *bufs))
#define glNamedFramebufferDrawBuffers_defined
#endif
#ifndef glNamedFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferParameteri, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint param))
#define glNamedFramebufferParameteri_defined
#endif
#ifndef glNamedFramebufferReadBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferReadBuffer, (framebuffer, src), (GLuint framebuffer, GLenum src))
#define glNamedFramebufferReadBuffer_defined
#endif
#ifndef glNamedFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferRenderbuffer, (framebuffer, attachment, renderbuffertarget, renderbuffer), (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glNamedFramebufferRenderbuffer_defined
#endif
#ifndef glNamedFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture, (framebuffer, attachment, texture, level), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level))
#define glNamedFramebufferTexture_defined
#endif
#ifndef glNamedFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureLayer, (framebuffer, attachment, texture, level, layer), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glNamedFramebufferTextureLayer_defined
#endif
#ifndef glNamedRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorage, (renderbuffer, internalformat, width, height), (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorage_defined
#endif
#ifndef glNamedRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageMultisample, (renderbuffer, samples, internalformat, width, height), (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisample_defined
#endif
#ifndef glReadnPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadnPixels, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixels_defined
#endif
#ifndef glTextureBarrier_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBarrier, (), (void))
#define glTextureBarrier_defined
#endif
#ifndef glTextureBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBuffer, (texture, internalformat, buffer), (GLuint texture, GLenum internalformat, GLuint buffer))
#define glTextureBuffer_defined
#endif
#ifndef glTextureBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBufferRange, (texture, internalformat, buffer, offset, size), (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTextureBufferRange_defined
#endif
#ifndef glTextureParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIiv, (texture, pname, params), (GLuint texture, GLenum pname, const GLint *params))
#define glTextureParameterIiv_defined
#endif
#ifndef glTextureParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIuiv, (texture, pname, params), (GLuint texture, GLenum pname, const GLuint *params))
#define glTextureParameterIuiv_defined
#endif
#ifndef glTextureParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterf, (texture, pname, param), (GLuint texture, GLenum pname, GLfloat param))
#define glTextureParameterf_defined
#endif
#ifndef glTextureParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterfv, (texture, pname, param), (GLuint texture, GLenum pname, const GLfloat *param))
#define glTextureParameterfv_defined
#endif
#ifndef glTextureParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteri, (texture, pname, param), (GLuint texture, GLenum pname, GLint param))
#define glTextureParameteri_defined
#endif
#ifndef glTextureParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteriv, (texture, pname, param), (GLuint texture, GLenum pname, const GLint *param))
#define glTextureParameteriv_defined
#endif
#ifndef glTextureStorage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage1D, (texture, levels, internalformat, width), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTextureStorage1D_defined
#endif
#ifndef glTextureStorage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2D, (texture, levels, internalformat, width, height), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTextureStorage2D_defined
#endif
#ifndef glTextureStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2DMultisample, (texture, samples, internalformat, width, height, fixedsamplelocations), (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTextureStorage2DMultisample_defined
#endif
#ifndef glTextureStorage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3D, (texture, levels, internalformat, width, height, depth), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTextureStorage3D_defined
#endif
#ifndef glTextureStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3DMultisample, (texture, samples, internalformat, width, height, depth, fixedsamplelocations), (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTextureStorage3DMultisample_defined
#endif
#ifndef glTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage1D, (texture, level, xoffset, width, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage1D_defined
#endif
#ifndef glTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage2D, (texture, level, xoffset, yoffset, width, height, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage2D_defined
#endif
#ifndef glTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage3D_defined
#endif
#ifndef glTransformFeedbackBufferBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackBufferBase, (xfb, index, buffer), (GLuint xfb, GLuint index, GLuint buffer))
#define glTransformFeedbackBufferBase_defined
#endif
#ifndef glTransformFeedbackBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackBufferRange, (xfb, index, buffer, offset, size), (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTransformFeedbackBufferRange_defined
#endif
#ifndef glUnmapNamedBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapNamedBuffer, (buffer), (GLuint buffer))
#define glUnmapNamedBuffer_defined
#endif
#ifndef glVertexArrayAttribBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribBinding, (vaobj, attribindex, bindingindex), (GLuint vaobj, GLuint attribindex, GLuint bindingindex))
#define glVertexArrayAttribBinding_defined
#endif
#ifndef glVertexArrayAttribFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribFormat, (vaobj, attribindex, size, type, normalized, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexArrayAttribFormat_defined
#endif
#ifndef glVertexArrayAttribIFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribIFormat, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayAttribIFormat_defined
#endif
#ifndef glVertexArrayAttribLFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribLFormat, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayAttribLFormat_defined
#endif
#ifndef glVertexArrayBindingDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayBindingDivisor, (vaobj, bindingindex, divisor), (GLuint vaobj, GLuint bindingindex, GLuint divisor))
#define glVertexArrayBindingDivisor_defined
#endif
#ifndef glVertexArrayElementBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayElementBuffer, (vaobj, buffer), (GLuint vaobj, GLuint buffer))
#define glVertexArrayElementBuffer_defined
#endif
#ifndef glVertexArrayVertexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBuffer, (vaobj, bindingindex, buffer, offset, stride), (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glVertexArrayVertexBuffer_defined
#endif
#ifndef glVertexArrayVertexBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBuffers, (vaobj, first, count, buffers, offsets, strides), (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))
#define glVertexArrayVertexBuffers_defined
#endif
#endif // defined(GL_VERSION_4_5)
#if defined(GL_VERSION_4_6)
#ifndef glMultiDrawArraysIndirectCount_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectCount, (mode, indirect, drawcount, maxdrawcount, stride), (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawArraysIndirectCount_defined
#endif
#ifndef glMultiDrawElementsIndirectCount_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectCount, (mode, type, indirect, drawcount, maxdrawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawElementsIndirectCount_defined
#endif
#ifndef glPolygonOffsetClamp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffsetClamp, (factor, units, clamp), (GLfloat factor, GLfloat units, GLfloat clamp))
#define glPolygonOffsetClamp_defined
#endif
#ifndef glSpecializeShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSpecializeShader, (shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue), (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue))
#define glSpecializeShader_defined
#endif
#endif // defined(GL_VERSION_4_6)
#endif // defined(__gl_glext_h_)
#if defined(__glcorearb_h_)
#if defined(GL_ARB_bindless_texture)
#ifndef glGetImageHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetImageHandleARB, (texture, level, layered, layer, format), (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))
#define glGetImageHandleARB_defined
#endif
#ifndef glGetTextureHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureHandleARB, (texture), (GLuint texture))
#define glGetTextureHandleARB_defined
#endif
#ifndef glGetTextureSamplerHandleARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint64, APIENTRY, glGetTextureSamplerHandleARB, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleARB_defined
#endif
#ifndef glGetVertexAttribLui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLui64vARB, (index, pname, params), (GLuint index, GLenum pname, GLuint64EXT *params))
#define glGetVertexAttribLui64vARB_defined
#endif
#ifndef glIsImageHandleResidentARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsImageHandleResidentARB, (handle), (GLuint64 handle))
#define glIsImageHandleResidentARB_defined
#endif
#ifndef glIsTextureHandleResidentARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTextureHandleResidentARB, (handle), (GLuint64 handle))
#define glIsTextureHandleResidentARB_defined
#endif
#ifndef glMakeImageHandleNonResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleNonResidentARB, (handle), (GLuint64 handle))
#define glMakeImageHandleNonResidentARB_defined
#endif
#ifndef glMakeImageHandleResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeImageHandleResidentARB, (handle, access), (GLuint64 handle, GLenum access))
#define glMakeImageHandleResidentARB_defined
#endif
#ifndef glMakeTextureHandleNonResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleNonResidentARB, (handle), (GLuint64 handle))
#define glMakeTextureHandleNonResidentARB_defined
#endif
#ifndef glMakeTextureHandleResidentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMakeTextureHandleResidentARB, (handle), (GLuint64 handle))
#define glMakeTextureHandleResidentARB_defined
#endif
#ifndef glProgramUniformHandleui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64ARB, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64ARB_defined
#endif
#ifndef glProgramUniformHandleui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformHandleui64vARB, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vARB_defined
#endif
#ifndef glUniformHandleui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64ARB, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64ARB_defined
#endif
#ifndef glUniformHandleui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformHandleui64vARB, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vARB_defined
#endif
#ifndef glVertexAttribL1ui64ARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64ARB, (index, x), (GLuint index, GLuint64EXT x))
#define glVertexAttribL1ui64ARB_defined
#endif
#ifndef glVertexAttribL1ui64vARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1ui64vARB, (index, v), (GLuint index, const GLuint64EXT *v))
#define glVertexAttribL1ui64vARB_defined
#endif
#endif // defined(GL_ARB_bindless_texture)
#if defined(GL_ARB_cl_event)
#ifndef glCreateSyncFromCLeventARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLsync, APIENTRY, glCreateSyncFromCLeventARB, (context, event, flags), (struct _cl_context *context, struct _cl_event *event, GLbitfield flags))
#define glCreateSyncFromCLeventARB_defined
#endif
#endif // defined(GL_ARB_cl_event)
#if defined(GL_ARB_compute_variable_group_size)
#ifndef glDispatchComputeGroupSizeARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchComputeGroupSizeARB, (num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z))
#define glDispatchComputeGroupSizeARB_defined
#endif
#endif // defined(GL_ARB_compute_variable_group_size)
#if defined(GL_ARB_debug_output)
#ifndef glDebugMessageCallbackARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageCallbackARB, (callback, userParam), (GLDEBUGPROCARB callback, const void *userParam))
#define glDebugMessageCallbackARB_defined
#endif
#ifndef glDebugMessageControlARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageControlARB, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControlARB_defined
#endif
#ifndef glDebugMessageInsertARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageInsertARB, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsertARB_defined
#endif
#ifndef glGetDebugMessageLogARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetDebugMessageLogARB, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLogARB_defined
#endif
#endif // defined(GL_ARB_debug_output)
#if defined(GL_ARB_draw_buffers_blend)
#ifndef glBlendEquationSeparateiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparateiARB, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateiARB_defined
#endif
#ifndef glBlendEquationiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationiARB, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationiARB_defined
#endif
#ifndef glBlendFuncSeparateiARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparateiARB, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateiARB_defined
#endif
#ifndef glBlendFunciARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunciARB, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunciARB_defined
#endif
#endif // defined(GL_ARB_draw_buffers_blend)
#if defined(GL_ARB_indirect_parameters)
#ifndef glMultiDrawArraysIndirectCountARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirectCountARB, (mode, indirect, drawcount, maxdrawcount, stride), (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawArraysIndirectCountARB_defined
#endif
#ifndef glMultiDrawElementsIndirectCountARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirectCountARB, (mode, type, indirect, drawcount, maxdrawcount, stride), (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride))
#define glMultiDrawElementsIndirectCountARB_defined
#endif
#endif // defined(GL_ARB_indirect_parameters)
#if defined(GL_ARB_robustness)
#ifndef glGetGraphicsResetStatusARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetGraphicsResetStatusARB, (), (void))
#define glGetGraphicsResetStatusARB_defined
#endif
#ifndef glGetnCompressedTexImageARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnCompressedTexImageARB, (target, lod, bufSize, img), (GLenum target, GLint lod, GLsizei bufSize, void *img))
#define glGetnCompressedTexImageARB_defined
#endif
#ifndef glGetnTexImageARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnTexImageARB, (target, level, format, type, bufSize, img), (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img))
#define glGetnTexImageARB_defined
#endif
#ifndef glGetnUniformdvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformdvARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLdouble *params))
#define glGetnUniformdvARB_defined
#endif
#ifndef glGetnUniformfvARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformfvARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfvARB_defined
#endif
#ifndef glGetnUniformivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformivARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformivARB_defined
#endif
#ifndef glGetnUniformuivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformuivARB, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuivARB_defined
#endif
#ifndef glReadnPixelsARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadnPixelsARB, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixelsARB_defined
#endif
#endif // defined(GL_ARB_robustness)
#if defined(GL_ARB_sample_shading)
#ifndef glMinSampleShadingARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinSampleShadingARB, (value), (GLfloat value))
#define glMinSampleShadingARB_defined
#endif
#endif // defined(GL_ARB_sample_shading)
#if defined(GL_ARB_shading_language_include)
#ifndef glCompileShaderIncludeARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileShaderIncludeARB, (shader, count, path, length), (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length))
#define glCompileShaderIncludeARB_defined
#endif
#ifndef glDeleteNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteNamedStringARB, (namelen, name), (GLint namelen, const GLchar *name))
#define glDeleteNamedStringARB_defined
#endif
#ifndef glGetNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedStringARB, (namelen, name, bufSize, stringlen, string), (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string))
#define glGetNamedStringARB_defined
#endif
#ifndef glGetNamedStringivARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedStringivARB, (namelen, name, pname, params), (GLint namelen, const GLchar *name, GLenum pname, GLint *params))
#define glGetNamedStringivARB_defined
#endif
#ifndef glIsNamedStringARB_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsNamedStringARB, (namelen, name), (GLint namelen, const GLchar *name))
#define glIsNamedStringARB_defined
#endif
#ifndef glNamedStringARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedStringARB, (type, namelen, name, stringlen, string), (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string))
#define glNamedStringARB_defined
#endif
#endif // defined(GL_ARB_shading_language_include)
#if defined(GL_ARB_sparse_buffer)
#ifndef glBufferPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferPageCommitmentARB, (target, offset, size, commit), (GLenum target, GLintptr offset, GLsizei size, GLboolean commit))
#define glBufferPageCommitmentARB_defined
#endif
#ifndef glNamedBufferPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferPageCommitmentARB, (buffer, offset, size, commit), (GLuint buffer, GLintptr offset, GLsizei size, GLboolean commit))
#define glNamedBufferPageCommitmentARB_defined
#endif
#ifndef glNamedBufferPageCommitmentEXT_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferPageCommitmentEXT, (buffer, offset, size, commit), (GLuint buffer, GLintptr offset, GLsizei size, GLboolean commit))
#define glNamedBufferPageCommitmentEXT_defined
#endif
#endif // defined(GL_ARB_sparse_buffer)
#if defined(GL_ARB_sparse_texture)
#ifndef glTexPageCommitmentARB_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexPageCommitmentARB, (target, level, xoffset, yoffset, zoffset, width, height, depth, resident), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident))
#define glTexPageCommitmentARB_defined
#endif
#endif // defined(GL_ARB_sparse_texture)
#if defined(GL_VERSION_1_0)
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepth_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepth, (depth), (GLdouble depth))
#define glClearDepth_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRange, (near, far), (GLdouble near, GLdouble far))
#define glDepthRange_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDrawBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawBuffer, (buf), (GLenum buf))
#define glDrawBuffer_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetDoublev_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoublev, (pname, data), (GLenum pname, GLdouble *data))
#define glGetDoublev_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GLAPI, const GLubyte *, APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexImage, (target, level, format, type, pixels), (GLenum target, GLint level, GLenum format, GLenum type, void *pixels))
#define glGetTexImage_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLogicOp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLogicOp, (opcode), (GLenum opcode))
#define glLogicOp_defined
#endif
#ifndef glPixelStoref_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelStoref, (pname, param), (GLenum pname, GLfloat param))
#define glPixelStoref_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPointSize_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointSize, (size), (GLfloat size))
#define glPointSize_defined
#endif
#ifndef glPolygonMode_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonMode, (face, mode), (GLenum face, GLenum mode))
#define glPolygonMode_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadBuffer, (src), (GLenum src))
#define glReadBuffer_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage1D, (target, level, internalformat, width, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage1D_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_VERSION_1_0)
#if defined(GL_VERSION_1_1)
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glCopyTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexImage1D, (target, level, internalformat, x, y, width, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border))
#define glCopyTexImage1D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage1D, (target, level, xoffset, x, y, width), (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTexSubImage1D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGetPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetPointerv, (pname, params), (GLenum pname, void **params))
#define glGetPointerv_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage1D, (target, level, xoffset, width, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage1D_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#endif // defined(GL_VERSION_1_1)
#if defined(GL_VERSION_1_2)
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#endif // defined(GL_VERSION_1_2)
#if defined(GL_VERSION_1_3)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glCompressedTexImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage1D, (target, level, internalformat, width, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage1D_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage1D, (target, level, xoffset, width, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage1D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glGetCompressedTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTexImage, (target, level, img), (GLenum target, GLint level, void *img))
#define glGetCompressedTexImage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#endif // defined(GL_VERSION_1_3)
#if defined(GL_VERSION_1_4)
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glMultiDrawArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArrays, (mode, first, count, drawcount), (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount))
#define glMultiDrawArrays_defined
#endif
#ifndef glMultiDrawElements_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElements, (mode, count, type, indices, drawcount), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount))
#define glMultiDrawElements_defined
#endif
#ifndef glPointParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterf, (pname, param), (GLenum pname, GLfloat param))
#define glPointParameterf_defined
#endif
#ifndef glPointParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameterfv, (pname, params), (GLenum pname, const GLfloat *params))
#define glPointParameterfv_defined
#endif
#ifndef glPointParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameteri, (pname, param), (GLenum pname, GLint param))
#define glPointParameteri_defined
#endif
#ifndef glPointParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPointParameteriv, (pname, params), (GLenum pname, const GLint *params))
#define glPointParameteriv_defined
#endif
#endif // defined(GL_VERSION_1_4)
#if defined(GL_VERSION_1_5)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, void *data))
#define glGetBufferSubData_defined
#endif
#ifndef glGetQueryObjectiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectiv, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetQueryObjectiv_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glMapBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapBuffer, (target, access), (GLenum target, GLenum access))
#define glMapBuffer_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#endif // defined(GL_VERSION_1_5)
#if defined(GL_VERSION_2_0)
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribdv, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribdv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1d, (index, x), (GLuint index, GLdouble x))
#define glVertexAttrib1d_defined
#endif
#ifndef glVertexAttrib1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib1dv_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib1s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1s, (index, x), (GLuint index, GLshort x))
#define glVertexAttrib1s_defined
#endif
#ifndef glVertexAttrib1sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib1sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib1sv_defined
#endif
#ifndef glVertexAttrib2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2d, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttrib2d_defined
#endif
#ifndef glVertexAttrib2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib2dv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib2s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2s, (index, x, y), (GLuint index, GLshort x, GLshort y))
#define glVertexAttrib2s_defined
#endif
#ifndef glVertexAttrib2sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib2sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib2sv_defined
#endif
#ifndef glVertexAttrib3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3d, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttrib3d_defined
#endif
#ifndef glVertexAttrib3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib3dv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib3s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3s, (index, x, y, z), (GLuint index, GLshort x, GLshort y, GLshort z))
#define glVertexAttrib3s_defined
#endif
#ifndef glVertexAttrib3sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib3sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib3sv_defined
#endif
#ifndef glVertexAttrib4Nbv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nbv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4Nbv_defined
#endif
#ifndef glVertexAttrib4Niv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Niv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4Niv_defined
#endif
#ifndef glVertexAttrib4Nsv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nsv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4Nsv_defined
#endif
#ifndef glVertexAttrib4Nub_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nub, (index, x, y, z, w), (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w))
#define glVertexAttrib4Nub_defined
#endif
#ifndef glVertexAttrib4Nubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4Nubv_defined
#endif
#ifndef glVertexAttrib4Nuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nuiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4Nuiv_defined
#endif
#ifndef glVertexAttrib4Nusv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4Nusv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4Nusv_defined
#endif
#ifndef glVertexAttrib4bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4bv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttrib4bv_defined
#endif
#ifndef glVertexAttrib4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4d, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttrib4d_defined
#endif
#ifndef glVertexAttrib4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttrib4dv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttrib4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttrib4iv_defined
#endif
#ifndef glVertexAttrib4s_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4s, (index, x, y, z, w), (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w))
#define glVertexAttrib4s_defined
#endif
#ifndef glVertexAttrib4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttrib4sv_defined
#endif
#ifndef glVertexAttrib4ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4ubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttrib4ubv_defined
#endif
#ifndef glVertexAttrib4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttrib4uiv_defined
#endif
#ifndef glVertexAttrib4usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttrib4usv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttrib4usv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#endif // defined(GL_VERSION_2_0)
#if defined(GL_VERSION_2_1)
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#endif // defined(GL_VERSION_2_1)
#if defined(GL_VERSION_3_0)
#ifndef glBeginConditionalRender_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginConditionalRender, (id, mode), (GLuint id, GLenum mode))
#define glBeginConditionalRender_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindFragDataLocation_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragDataLocation, (program, color, name), (GLuint program, GLuint color, const GLchar *name))
#define glBindFragDataLocation_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClampColor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClampColor, (target, clamp), (GLenum target, GLenum clamp))
#define glClampColor_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glColorMaski_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glColorMaski, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaski_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDisablei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisablei, (target, index), (GLenum target, GLuint index))
#define glDisablei_defined
#endif
#ifndef glEnablei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnablei, (target, index), (GLenum target, GLuint index))
#define glEnablei_defined
#endif
#ifndef glEndConditionalRender_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndConditionalRender, (), (void))
#define glEndConditionalRender_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture1D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture1D_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFramebufferTexture3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture3D, (target, attachment, textarget, texture, level, zoffset), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glFramebufferTexture3D_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetBooleani_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBooleani_v, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleani_v_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GLAPI, const GLubyte *, APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIiv_defined
#endif
#ifndef glGetTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuiv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glIsEnabledi_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsEnabledi, (target, index), (GLenum target, GLuint index))
#define glIsEnabledi_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIiv_defined
#endif
#ifndef glTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuiv_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glVertexAttribI1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1i, (index, x), (GLuint index, GLint x))
#define glVertexAttribI1i_defined
#endif
#ifndef glVertexAttribI1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI1iv_defined
#endif
#ifndef glVertexAttribI1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1ui, (index, x), (GLuint index, GLuint x))
#define glVertexAttribI1ui_defined
#endif
#ifndef glVertexAttribI1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI1uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI1uiv_defined
#endif
#ifndef glVertexAttribI2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2i, (index, x, y), (GLuint index, GLint x, GLint y))
#define glVertexAttribI2i_defined
#endif
#ifndef glVertexAttribI2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI2iv_defined
#endif
#ifndef glVertexAttribI2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2ui, (index, x, y), (GLuint index, GLuint x, GLuint y))
#define glVertexAttribI2ui_defined
#endif
#ifndef glVertexAttribI2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI2uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI2uiv_defined
#endif
#ifndef glVertexAttribI3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3i, (index, x, y, z), (GLuint index, GLint x, GLint y, GLint z))
#define glVertexAttribI3i_defined
#endif
#ifndef glVertexAttribI3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI3iv_defined
#endif
#ifndef glVertexAttribI3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3ui, (index, x, y, z), (GLuint index, GLuint x, GLuint y, GLuint z))
#define glVertexAttribI3ui_defined
#endif
#ifndef glVertexAttribI3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI3uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI3uiv_defined
#endif
#ifndef glVertexAttribI4bv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4bv, (index, v), (GLuint index, const GLbyte *v))
#define glVertexAttribI4bv_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4sv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4sv, (index, v), (GLuint index, const GLshort *v))
#define glVertexAttribI4sv_defined
#endif
#ifndef glVertexAttribI4ubv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ubv, (index, v), (GLuint index, const GLubyte *v))
#define glVertexAttribI4ubv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribI4usv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribI4usv, (index, v), (GLuint index, const GLushort *v))
#define glVertexAttribI4usv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#endif // defined(GL_VERSION_3_0)
#if defined(GL_VERSION_3_1)
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformName, (program, uniformIndex, bufSize, length, uniformName), (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName))
#define glGetActiveUniformName_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glPrimitiveRestartIndex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPrimitiveRestartIndex, (index), (GLuint index))
#define glPrimitiveRestartIndex_defined
#endif
#ifndef glTexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBuffer, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBuffer_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#endif // defined(GL_VERSION_3_1)
#if defined(GL_VERSION_3_2)
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsBaseVertex, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertex_defined
#endif
#ifndef glDrawElementsInstancedBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseVertex, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertex_defined
#endif
#ifndef glDrawRangeElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawRangeElementsBaseVertex, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertex_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLsync, APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferTexture, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTexture_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetMultisamplefv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetMultisamplefv, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefv_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glMultiDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsBaseVertex, (mode, count, type, indices, drawcount, basevertex), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex))
#define glMultiDrawElementsBaseVertex_defined
#endif
#ifndef glProvokingVertex_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProvokingVertex, (mode), (GLenum mode))
#define glProvokingVertex_defined
#endif
#ifndef glSampleMaski_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSampleMaski, (maskNumber, mask), (GLuint maskNumber, GLbitfield mask))
#define glSampleMaski_defined
#endif
#ifndef glTexImage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexImage2DMultisample_defined
#endif
#ifndef glTexImage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexImage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexImage3DMultisample_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_VERSION_3_2)
#if defined(GL_VERSION_3_3)
#ifndef glBindFragDataLocationIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindFragDataLocationIndexed, (program, colorNumber, index, name), (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name))
#define glBindFragDataLocationIndexed_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGetFragDataIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetFragDataIndex, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataIndex_defined
#endif
#ifndef glGetQueryObjecti64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjecti64v, (id, pname, params), (GLuint id, GLenum pname, GLint64 *params))
#define glGetQueryObjecti64v_defined
#endif
#ifndef glGetQueryObjectui64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryObjectui64v, (id, pname, params), (GLuint id, GLenum pname, GLuint64 *params))
#define glGetQueryObjectui64v_defined
#endif
#ifndef glGetSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterIiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIiv_defined
#endif
#ifndef glGetSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterIuiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glQueryCounter_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glQueryCounter, (id, target), (GLuint id, GLenum target))
#define glQueryCounter_defined
#endif
#ifndef glSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterIiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIiv_defined
#endif
#ifndef glSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterIuiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuiv_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribP1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP1ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP1ui_defined
#endif
#ifndef glVertexAttribP1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP1uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP1uiv_defined
#endif
#ifndef glVertexAttribP2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP2ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP2ui_defined
#endif
#ifndef glVertexAttribP2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP2uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP2uiv_defined
#endif
#ifndef glVertexAttribP3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP3ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP3ui_defined
#endif
#ifndef glVertexAttribP3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP3uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP3uiv_defined
#endif
#ifndef glVertexAttribP4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP4ui, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, GLuint value))
#define glVertexAttribP4ui_defined
#endif
#ifndef glVertexAttribP4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribP4uiv, (index, type, normalized, value), (GLuint index, GLenum type, GLboolean normalized, const GLuint *value))
#define glVertexAttribP4uiv_defined
#endif
#endif // defined(GL_VERSION_3_3)
#if defined(GL_VERSION_4_0)
#ifndef glBeginQueryIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBeginQueryIndexed, (target, index, id), (GLenum target, GLuint index, GLuint id))
#define glBeginQueryIndexed_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBlendEquationSeparatei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationSeparatei, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparatei_defined
#endif
#ifndef glBlendEquationi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendEquationi, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationi_defined
#endif
#ifndef glBlendFuncSeparatei_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFuncSeparatei, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparatei_defined
#endif
#ifndef glBlendFunci_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlendFunci, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunci_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysIndirect, (mode, indirect), (GLenum mode, const void *indirect))
#define glDrawArraysIndirect_defined
#endif
#ifndef glDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsIndirect, (mode, type, indirect), (GLenum mode, GLenum type, const void *indirect))
#define glDrawElementsIndirect_defined
#endif
#ifndef glDrawTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedback, (mode, id), (GLenum mode, GLuint id))
#define glDrawTransformFeedback_defined
#endif
#ifndef glDrawTransformFeedbackStream_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackStream, (mode, id, stream), (GLenum mode, GLuint id, GLuint stream))
#define glDrawTransformFeedbackStream_defined
#endif
#ifndef glEndQueryIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEndQueryIndexed, (target, index), (GLenum target, GLuint index))
#define glEndQueryIndexed_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGetActiveSubroutineName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineName, (program, shadertype, index, bufsize, length, name), (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))
#define glGetActiveSubroutineName_defined
#endif
#ifndef glGetActiveSubroutineUniformName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineUniformName, (program, shadertype, index, bufsize, length, name), (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name))
#define glGetActiveSubroutineUniformName_defined
#endif
#ifndef glGetActiveSubroutineUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveSubroutineUniformiv, (program, shadertype, index, pname, values), (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values))
#define glGetActiveSubroutineUniformiv_defined
#endif
#ifndef glGetProgramStageiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramStageiv, (program, shadertype, pname, values), (GLuint program, GLenum shadertype, GLenum pname, GLint *values))
#define glGetProgramStageiv_defined
#endif
#ifndef glGetQueryIndexediv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetQueryIndexediv, (target, index, pname, params), (GLenum target, GLuint index, GLenum pname, GLint *params))
#define glGetQueryIndexediv_defined
#endif
#ifndef glGetSubroutineIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetSubroutineIndex, (program, shadertype, name), (GLuint program, GLenum shadertype, const GLchar *name))
#define glGetSubroutineIndex_defined
#endif
#ifndef glGetSubroutineUniformLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetSubroutineUniformLocation, (program, shadertype, name), (GLuint program, GLenum shadertype, const GLchar *name))
#define glGetSubroutineUniformLocation_defined
#endif
#ifndef glGetUniformSubroutineuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformSubroutineuiv, (shadertype, location, params), (GLenum shadertype, GLint location, GLuint *params))
#define glGetUniformSubroutineuiv_defined
#endif
#ifndef glGetUniformdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetUniformdv, (program, location, params), (GLuint program, GLint location, GLdouble *params))
#define glGetUniformdv_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glMinSampleShading_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMinSampleShading, (value), (GLfloat value))
#define glMinSampleShading_defined
#endif
#ifndef glPatchParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPatchParameterfv, (pname, values), (GLenum pname, const GLfloat *values))
#define glPatchParameterfv_defined
#endif
#ifndef glPatchParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPatchParameteri, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteri_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glUniform1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1d, (location, x), (GLint location, GLdouble x))
#define glUniform1d_defined
#endif
#ifndef glUniform1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform1dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform1dv_defined
#endif
#ifndef glUniform2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2d, (location, x, y), (GLint location, GLdouble x, GLdouble y))
#define glUniform2d_defined
#endif
#ifndef glUniform2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform2dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform2dv_defined
#endif
#ifndef glUniform3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3d, (location, x, y, z), (GLint location, GLdouble x, GLdouble y, GLdouble z))
#define glUniform3d_defined
#endif
#ifndef glUniform3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform3dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform3dv_defined
#endif
#ifndef glUniform4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4d, (location, x, y, z, w), (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glUniform4d_defined
#endif
#ifndef glUniform4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniform4dv, (location, count, value), (GLint location, GLsizei count, const GLdouble *value))
#define glUniform4dv_defined
#endif
#ifndef glUniformMatrix2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2dv_defined
#endif
#ifndef glUniformMatrix2x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2x3dv_defined
#endif
#ifndef glUniformMatrix2x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix2x4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix2x4dv_defined
#endif
#ifndef glUniformMatrix3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3dv_defined
#endif
#ifndef glUniformMatrix3x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3x2dv_defined
#endif
#ifndef glUniformMatrix3x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix3x4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix3x4dv_defined
#endif
#ifndef glUniformMatrix4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4dv_defined
#endif
#ifndef glUniformMatrix4x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x2dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4x2dv_defined
#endif
#ifndef glUniformMatrix4x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformMatrix4x3dv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glUniformMatrix4x3dv_defined
#endif
#ifndef glUniformSubroutinesuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUniformSubroutinesuiv, (shadertype, count, indices), (GLenum shadertype, GLsizei count, const GLuint *indices))
#define glUniformSubroutinesuiv_defined
#endif
#endif // defined(GL_VERSION_4_0)
#if defined(GL_VERSION_4_1)
#ifndef glActiveShaderProgram_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glActiveShaderProgram, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgram_defined
#endif
#ifndef glBindProgramPipeline_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindProgramPipeline, (pipeline), (GLuint pipeline))
#define glBindProgramPipeline_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glCreateShaderProgramv_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glCreateShaderProgramv, (type, count, strings), (GLenum type, GLsizei count, const GLchar *const*strings))
#define glCreateShaderProgramv_defined
#endif
#ifndef glDeleteProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDeleteProgramPipelines, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelines_defined
#endif
#ifndef glDepthRangeArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangeArrayv, (first, count, v), (GLuint first, GLsizei count, const GLdouble *v))
#define glDepthRangeArrayv_defined
#endif
#ifndef glDepthRangeIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangeIndexed, (index, n, f), (GLuint index, GLdouble n, GLdouble f))
#define glDepthRangeIndexed_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glGenProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelines_defined
#endif
#ifndef glGetDoublei_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetDoublei_v, (target, index, data), (GLenum target, GLuint index, GLdouble *data))
#define glGetDoublei_v_defined
#endif
#ifndef glGetFloati_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFloati_v, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloati_v_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetProgramPipelineInfoLog_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramPipelineInfoLog, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLog_defined
#endif
#ifndef glGetProgramPipelineiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramPipelineiv, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineiv_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetVertexAttribLdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexAttribLdv, (index, pname, params), (GLuint index, GLenum pname, GLdouble *params))
#define glGetVertexAttribLdv_defined
#endif
#ifndef glIsProgramPipeline_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glIsProgramPipeline, (pipeline), (GLuint pipeline))
#define glIsProgramPipeline_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glProgramUniform1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1d, (program, location, v0), (GLuint program, GLint location, GLdouble v0))
#define glProgramUniform1d_defined
#endif
#ifndef glProgramUniform1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform1dv_defined
#endif
#ifndef glProgramUniform1f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1f, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1f_defined
#endif
#ifndef glProgramUniform1fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fv_defined
#endif
#ifndef glProgramUniform1i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1i, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1i_defined
#endif
#ifndef glProgramUniform1iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1iv_defined
#endif
#ifndef glProgramUniform1ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1ui, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1ui_defined
#endif
#ifndef glProgramUniform1uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform1uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uiv_defined
#endif
#ifndef glProgramUniform2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2d, (program, location, v0, v1), (GLuint program, GLint location, GLdouble v0, GLdouble v1))
#define glProgramUniform2d_defined
#endif
#ifndef glProgramUniform2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform2dv_defined
#endif
#ifndef glProgramUniform2f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2f, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2f_defined
#endif
#ifndef glProgramUniform2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fv_defined
#endif
#ifndef glProgramUniform2i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2i, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2i_defined
#endif
#ifndef glProgramUniform2iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2iv_defined
#endif
#ifndef glProgramUniform2ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2ui, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2ui_defined
#endif
#ifndef glProgramUniform2uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform2uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uiv_defined
#endif
#ifndef glProgramUniform3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3d, (program, location, v0, v1, v2), (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2))
#define glProgramUniform3d_defined
#endif
#ifndef glProgramUniform3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform3dv_defined
#endif
#ifndef glProgramUniform3f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3f, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3f_defined
#endif
#ifndef glProgramUniform3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fv_defined
#endif
#ifndef glProgramUniform3i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3i, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3i_defined
#endif
#ifndef glProgramUniform3iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3iv_defined
#endif
#ifndef glProgramUniform3ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3ui, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3ui_defined
#endif
#ifndef glProgramUniform3uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform3uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uiv_defined
#endif
#ifndef glProgramUniform4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4d, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3))
#define glProgramUniform4d_defined
#endif
#ifndef glProgramUniform4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4dv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLdouble *value))
#define glProgramUniform4dv_defined
#endif
#ifndef glProgramUniform4f_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4f, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4f_defined
#endif
#ifndef glProgramUniform4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fv_defined
#endif
#ifndef glProgramUniform4i_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4i, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4i_defined
#endif
#ifndef glProgramUniform4iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4iv_defined
#endif
#ifndef glProgramUniform4ui_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4ui, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4ui_defined
#endif
#ifndef glProgramUniform4uiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniform4uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uiv_defined
#endif
#ifndef glProgramUniformMatrix2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2dv_defined
#endif
#ifndef glProgramUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fv_defined
#endif
#ifndef glProgramUniformMatrix2x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x3dv_defined
#endif
#ifndef glProgramUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fv_defined
#endif
#ifndef glProgramUniformMatrix2x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix2x4dv_defined
#endif
#ifndef glProgramUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix2x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fv_defined
#endif
#ifndef glProgramUniformMatrix3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3dv_defined
#endif
#ifndef glProgramUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fv_defined
#endif
#ifndef glProgramUniformMatrix3x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x2dv_defined
#endif
#ifndef glProgramUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fv_defined
#endif
#ifndef glProgramUniformMatrix3x4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix3x4dv_defined
#endif
#ifndef glProgramUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix3x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fv_defined
#endif
#ifndef glProgramUniformMatrix4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4dv_defined
#endif
#ifndef glProgramUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fv_defined
#endif
#ifndef glProgramUniformMatrix4x2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x2dv_defined
#endif
#ifndef glProgramUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fv_defined
#endif
#ifndef glProgramUniformMatrix4x3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3dv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value))
#define glProgramUniformMatrix4x3dv_defined
#endif
#ifndef glProgramUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glProgramUniformMatrix4x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fv_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glScissorArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorArrayv, (first, count, v), (GLuint first, GLsizei count, const GLint *v))
#define glScissorArrayv_defined
#endif
#ifndef glScissorIndexed_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorIndexed, (index, left, bottom, width, height), (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))
#define glScissorIndexed_defined
#endif
#ifndef glScissorIndexedv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glScissorIndexedv, (index, v), (GLuint index, const GLint *v))
#define glScissorIndexedv_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glUseProgramStages_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glUseProgramStages, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStages_defined
#endif
#ifndef glValidateProgramPipeline_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glValidateProgramPipeline, (pipeline), (GLuint pipeline))
#define glValidateProgramPipeline_defined
#endif
#ifndef glVertexAttribL1d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1d, (index, x), (GLuint index, GLdouble x))
#define glVertexAttribL1d_defined
#endif
#ifndef glVertexAttribL1dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL1dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL1dv_defined
#endif
#ifndef glVertexAttribL2d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2d, (index, x, y), (GLuint index, GLdouble x, GLdouble y))
#define glVertexAttribL2d_defined
#endif
#ifndef glVertexAttribL2dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL2dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL2dv_defined
#endif
#ifndef glVertexAttribL3d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3d, (index, x, y, z), (GLuint index, GLdouble x, GLdouble y, GLdouble z))
#define glVertexAttribL3d_defined
#endif
#ifndef glVertexAttribL3dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL3dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL3dv_defined
#endif
#ifndef glVertexAttribL4d_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4d, (index, x, y, z, w), (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w))
#define glVertexAttribL4d_defined
#endif
#ifndef glVertexAttribL4dv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribL4dv, (index, v), (GLuint index, const GLdouble *v))
#define glVertexAttribL4dv_defined
#endif
#ifndef glVertexAttribLPointer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribLPointer_defined
#endif
#ifndef glViewportArrayv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportArrayv, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glViewportArrayv_defined
#endif
#ifndef glViewportIndexedf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportIndexedf, (index, x, y, w, h), (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))
#define glViewportIndexedf_defined
#endif
#ifndef glViewportIndexedfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glViewportIndexedfv, (index, v), (GLuint index, const GLfloat *v))
#define glViewportIndexedfv_defined
#endif
#endif // defined(GL_VERSION_4_1)
#if defined(GL_VERSION_4_2)
#ifndef glBindImageTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindImageTexture, (unit, texture, level, layered, layer, access, format), (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))
#define glBindImageTexture_defined
#endif
#ifndef glDrawArraysInstancedBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawArraysInstancedBaseInstance, (mode, first, count, instancecount, baseinstance), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance))
#define glDrawArraysInstancedBaseInstance_defined
#endif
#ifndef glDrawElementsInstancedBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseInstance, (mode, count, type, indices, instancecount, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance))
#define glDrawElementsInstancedBaseInstance_defined
#endif
#ifndef glDrawElementsInstancedBaseVertexBaseInstance_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawElementsInstancedBaseVertexBaseInstance, (mode, count, type, indices, instancecount, basevertex, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance))
#define glDrawElementsInstancedBaseVertexBaseInstance_defined
#endif
#ifndef glDrawTransformFeedbackInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackInstanced, (mode, id, instancecount), (GLenum mode, GLuint id, GLsizei instancecount))
#define glDrawTransformFeedbackInstanced_defined
#endif
#ifndef glDrawTransformFeedbackStreamInstanced_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDrawTransformFeedbackStreamInstanced, (mode, id, stream, instancecount), (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount))
#define glDrawTransformFeedbackStreamInstanced_defined
#endif
#ifndef glGetActiveAtomicCounterBufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetActiveAtomicCounterBufferiv, (program, bufferIndex, pname, params), (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params))
#define glGetActiveAtomicCounterBufferiv_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glMemoryBarrier_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryBarrier, (barriers), (GLbitfield barriers))
#define glMemoryBarrier_defined
#endif
#ifndef glTexStorage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage1D, (target, levels, internalformat, width), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTexStorage1D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#endif // defined(GL_VERSION_4_2)
#if defined(GL_VERSION_4_3)
#ifndef glBindVertexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexBuffer, (bindingindex, buffer, offset, stride), (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glBindVertexBuffer_defined
#endif
#ifndef glClearBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferData, (target, internalformat, format, type, data), (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearBufferData_defined
#endif
#ifndef glClearBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearBufferSubData, (target, internalformat, offset, size, format, type, data), (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data))
#define glClearBufferSubData_defined
#endif
#ifndef glCopyImageSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyImageSubData, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubData_defined
#endif
#ifndef glDebugMessageCallback_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageCallback, (callback, userParam), (GLDEBUGPROC callback, const void *userParam))
#define glDebugMessageCallback_defined
#endif
#ifndef glDebugMessageControl_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageControl, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControl_defined
#endif
#ifndef glDebugMessageInsert_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDebugMessageInsert, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsert_defined
#endif
#ifndef glDispatchCompute_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchCompute, (num_groups_x, num_groups_y, num_groups_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))
#define glDispatchCompute_defined
#endif
#ifndef glDispatchComputeIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDispatchComputeIndirect, (indirect), (GLintptr indirect))
#define glDispatchComputeIndirect_defined
#endif
#ifndef glFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFramebufferParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glFramebufferParameteri_defined
#endif
#ifndef glGetDebugMessageLog_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetDebugMessageLog, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLog_defined
#endif
#ifndef glGetFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetFramebufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetFramebufferParameteriv_defined
#endif
#ifndef glGetInternalformati64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetInternalformati64v, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params))
#define glGetInternalformati64v_defined
#endif
#ifndef glGetObjectLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectLabel, (identifier, name, bufSize, length, label), (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabel_defined
#endif
#ifndef glGetObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetObjectPtrLabel, (ptr, bufSize, length, label), (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectPtrLabel_defined
#endif
#ifndef glGetProgramInterfaceiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramInterfaceiv, (program, programInterface, pname, params), (GLuint program, GLenum programInterface, GLenum pname, GLint *params))
#define glGetProgramInterfaceiv_defined
#endif
#ifndef glGetProgramResourceIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLuint, APIENTRY, glGetProgramResourceIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceIndex_defined
#endif
#ifndef glGetProgramResourceLocation_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetProgramResourceLocation, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocation_defined
#endif
#ifndef glGetProgramResourceLocationIndex_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLint, APIENTRY, glGetProgramResourceLocationIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocationIndex_defined
#endif
#ifndef glGetProgramResourceName_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourceName, (program, programInterface, index, bufSize, length, name), (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))
#define glGetProgramResourceName_defined
#endif
#ifndef glGetProgramResourceiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetProgramResourceiv, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))
#define glGetProgramResourceiv_defined
#endif
#ifndef glInvalidateBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateBufferData, (buffer), (GLuint buffer))
#define glInvalidateBufferData_defined
#endif
#ifndef glInvalidateBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateBufferSubData, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizeiptr length))
#define glInvalidateBufferSubData_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glInvalidateTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateTexImage, (texture, level), (GLuint texture, GLint level))
#define glInvalidateTexImage_defined
#endif
#ifndef glInvalidateTexSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateTexSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth))
#define glInvalidateTexSubImage_defined
#endif
#ifndef glMultiDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawArraysIndirect, (mode, indirect, drawcount, stride), (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawArraysIndirect_defined
#endif
#ifndef glMultiDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMultiDrawElementsIndirect, (mode, type, indirect, drawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawElementsIndirect_defined
#endif
#ifndef glObjectLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glObjectLabel, (identifier, name, length, label), (GLenum identifier, GLuint name, GLsizei length, const GLchar *label))
#define glObjectLabel_defined
#endif
#ifndef glObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glObjectPtrLabel, (ptr, length, label), (const void *ptr, GLsizei length, const GLchar *label))
#define glObjectPtrLabel_defined
#endif
#ifndef glPopDebugGroup_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPopDebugGroup, (), (void))
#define glPopDebugGroup_defined
#endif
#ifndef glPushDebugGroup_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glPushDebugGroup, (source, id, length, message), (GLenum source, GLuint id, GLsizei length, const GLchar *message))
#define glPushDebugGroup_defined
#endif
#ifndef glShaderStorageBlockBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glShaderStorageBlockBinding, (program, storageBlockIndex, storageBlockBinding), (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding))
#define glShaderStorageBlockBinding_defined
#endif
#ifndef glTexBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexBufferRange, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRange_defined
#endif
#ifndef glTexStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexStorage2DMultisample_defined
#endif
#ifndef glTexStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTexStorage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexStorage3DMultisample_defined
#endif
#ifndef glTextureView_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureView, (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers), (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))
#define glTextureView_defined
#endif
#ifndef glVertexAttribBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribBinding, (attribindex, bindingindex), (GLuint attribindex, GLuint bindingindex))
#define glVertexAttribBinding_defined
#endif
#ifndef glVertexAttribFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribFormat, (attribindex, size, type, normalized, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexAttribFormat_defined
#endif
#ifndef glVertexAttribIFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribIFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribIFormat_defined
#endif
#ifndef glVertexAttribLFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexAttribLFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribLFormat_defined
#endif
#ifndef glVertexBindingDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexBindingDivisor, (bindingindex, divisor), (GLuint bindingindex, GLuint divisor))
#define glVertexBindingDivisor_defined
#endif
#endif // defined(GL_VERSION_4_3)
#if defined(GL_VERSION_4_4)
#ifndef glBindBuffersBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffersBase, (target, first, count, buffers), (GLenum target, GLuint first, GLsizei count, const GLuint *buffers))
#define glBindBuffersBase_defined
#endif
#ifndef glBindBuffersRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindBuffersRange, (target, first, count, buffers, offsets, sizes), (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes))
#define glBindBuffersRange_defined
#endif
#ifndef glBindImageTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindImageTextures, (first, count, textures), (GLuint first, GLsizei count, const GLuint *textures))
#define glBindImageTextures_defined
#endif
#ifndef glBindSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindSamplers, (first, count, samplers), (GLuint first, GLsizei count, const GLuint *samplers))
#define glBindSamplers_defined
#endif
#ifndef glBindTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTextures, (first, count, textures), (GLuint first, GLsizei count, const GLuint *textures))
#define glBindTextures_defined
#endif
#ifndef glBindVertexBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindVertexBuffers, (first, count, buffers, offsets, strides), (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))
#define glBindVertexBuffers_defined
#endif
#ifndef glBufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBufferStorage, (target, size, data, flags), (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags))
#define glBufferStorage_defined
#endif
#ifndef glClearTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearTexImage, (texture, level, format, type, data), (GLuint texture, GLint level, GLenum format, GLenum type, const void *data))
#define glClearTexImage_defined
#endif
#ifndef glClearTexSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearTexSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data))
#define glClearTexSubImage_defined
#endif
#endif // defined(GL_VERSION_4_4)
#if defined(GL_VERSION_4_5)
#ifndef glBindTextureUnit_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBindTextureUnit, (unit, texture), (GLuint unit, GLuint texture))
#define glBindTextureUnit_defined
#endif
#ifndef glBlitNamedFramebuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glBlitNamedFramebuffer, (readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitNamedFramebuffer_defined
#endif
#ifndef glCheckNamedFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glCheckNamedFramebufferStatus, (framebuffer, target), (GLuint framebuffer, GLenum target))
#define glCheckNamedFramebufferStatus_defined
#endif
#ifndef glClearNamedBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferData, (buffer, internalformat, format, type, data), (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferData_defined
#endif
#ifndef glClearNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedBufferSubData, (buffer, internalformat, offset, size, format, type, data), (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizei size, GLenum format, GLenum type, const void *data))
#define glClearNamedBufferSubData_defined
#endif
#ifndef glClearNamedFramebufferfi_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferfi, (framebuffer, buffer, depth, stencil), (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil))
#define glClearNamedFramebufferfi_defined
#endif
#ifndef glClearNamedFramebufferfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferfv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearNamedFramebufferfv_defined
#endif
#ifndef glClearNamedFramebufferiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferiv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearNamedFramebufferiv_defined
#endif
#ifndef glClearNamedFramebufferuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClearNamedFramebufferuiv, (framebuffer, buffer, drawbuffer, value), (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearNamedFramebufferuiv_defined
#endif
#ifndef glClipControl_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glClipControl, (origin, depth), (GLenum origin, GLenum depth))
#define glClipControl_defined
#endif
#ifndef glCompressedTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage1D, (texture, level, xoffset, width, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage1D_defined
#endif
#ifndef glCompressedTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage2D, (texture, level, xoffset, yoffset, width, height, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage2D_defined
#endif
#ifndef glCompressedTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCompressedTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTextureSubImage3D_defined
#endif
#ifndef glCopyNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyNamedBufferSubData, (readBuffer, writeBuffer, readOffset, writeOffset, size), (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizei size))
#define glCopyNamedBufferSubData_defined
#endif
#ifndef glCopyTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage1D, (texture, level, xoffset, x, y, width), (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width))
#define glCopyTextureSubImage1D_defined
#endif
#ifndef glCopyTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage2D, (texture, level, xoffset, yoffset, x, y, width, height), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage2D_defined
#endif
#ifndef glCopyTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCopyTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, x, y, width, height), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTextureSubImage3D_defined
#endif
#ifndef glCreateBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glCreateBuffers_defined
#endif
#ifndef glCreateFramebuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glCreateFramebuffers_defined
#endif
#ifndef glCreateProgramPipelines_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glCreateProgramPipelines_defined
#endif
#ifndef glCreateQueries_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateQueries, (target, n, ids), (GLenum target, GLsizei n, GLuint *ids))
#define glCreateQueries_defined
#endif
#ifndef glCreateRenderbuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glCreateRenderbuffers_defined
#endif
#ifndef glCreateSamplers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateSamplers, (n, samplers), (GLsizei n, GLuint *samplers))
#define glCreateSamplers_defined
#endif
#ifndef glCreateTextures_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateTextures, (target, n, textures), (GLenum target, GLsizei n, GLuint *textures))
#define glCreateTextures_defined
#endif
#ifndef glCreateTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glCreateTransformFeedbacks_defined
#endif
#ifndef glCreateVertexArrays_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glCreateVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glCreateVertexArrays_defined
#endif
#ifndef glDisableVertexArrayAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glDisableVertexArrayAttrib, (vaobj, index), (GLuint vaobj, GLuint index))
#define glDisableVertexArrayAttrib_defined
#endif
#ifndef glEnableVertexArrayAttrib_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glEnableVertexArrayAttrib, (vaobj, index), (GLuint vaobj, GLuint index))
#define glEnableVertexArrayAttrib_defined
#endif
#ifndef glFlushMappedNamedBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glFlushMappedNamedBufferRange, (buffer, offset, length), (GLuint buffer, GLintptr offset, GLsizei length))
#define glFlushMappedNamedBufferRange_defined
#endif
#ifndef glGenerateTextureMipmap_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGenerateTextureMipmap, (texture), (GLuint texture))
#define glGenerateTextureMipmap_defined
#endif
#ifndef glGetCompressedTextureImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureImage, (texture, level, bufSize, pixels), (GLuint texture, GLint level, GLsizei bufSize, void *pixels))
#define glGetCompressedTextureImage_defined
#endif
#ifndef glGetCompressedTextureSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetCompressedTextureSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels))
#define glGetCompressedTextureSubImage_defined
#endif
#ifndef glGetGraphicsResetStatus_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLenum, APIENTRY, glGetGraphicsResetStatus, (), (void))
#define glGetGraphicsResetStatus_defined
#endif
#ifndef glGetNamedBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameteri64v, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint64 *params))
#define glGetNamedBufferParameteri64v_defined
#endif
#ifndef glGetNamedBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferParameteriv, (buffer, pname, params), (GLuint buffer, GLenum pname, GLint *params))
#define glGetNamedBufferParameteriv_defined
#endif
#ifndef glGetNamedBufferPointerv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferPointerv, (buffer, pname, params), (GLuint buffer, GLenum pname, void **params))
#define glGetNamedBufferPointerv_defined
#endif
#ifndef glGetNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedBufferSubData, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizei size, void *data))
#define glGetNamedBufferSubData_defined
#endif
#ifndef glGetNamedFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferAttachmentParameteriv, (framebuffer, attachment, pname, params), (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params))
#define glGetNamedFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetNamedFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedFramebufferParameteriv, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint *param))
#define glGetNamedFramebufferParameteriv_defined
#endif
#ifndef glGetNamedRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetNamedRenderbufferParameteriv, (renderbuffer, pname, params), (GLuint renderbuffer, GLenum pname, GLint *params))
#define glGetNamedRenderbufferParameteriv_defined
#endif
#ifndef glGetTextureImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureImage, (texture, level, format, type, bufSize, pixels), (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetTextureImage_defined
#endif
#ifndef glGetTextureLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameterfv, (texture, level, pname, params), (GLuint texture, GLint level, GLenum pname, GLfloat *params))
#define glGetTextureLevelParameterfv_defined
#endif
#ifndef glGetTextureLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureLevelParameteriv, (texture, level, pname, params), (GLuint texture, GLint level, GLenum pname, GLint *params))
#define glGetTextureLevelParameteriv_defined
#endif
#ifndef glGetTextureParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIiv, (texture, pname, params), (GLuint texture, GLenum pname, GLint *params))
#define glGetTextureParameterIiv_defined
#endif
#ifndef glGetTextureParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterIuiv, (texture, pname, params), (GLuint texture, GLenum pname, GLuint *params))
#define glGetTextureParameterIuiv_defined
#endif
#ifndef glGetTextureParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameterfv, (texture, pname, params), (GLuint texture, GLenum pname, GLfloat *params))
#define glGetTextureParameterfv_defined
#endif
#ifndef glGetTextureParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureParameteriv, (texture, pname, params), (GLuint texture, GLenum pname, GLint *params))
#define glGetTextureParameteriv_defined
#endif
#ifndef glGetTextureSubImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTextureSubImage, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetTextureSubImage_defined
#endif
#ifndef glGetTransformFeedbacki64_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbacki64_v, (xfb, pname, index, param), (GLuint xfb, GLenum pname, GLuint index, GLint64 *param))
#define glGetTransformFeedbacki64_v_defined
#endif
#ifndef glGetTransformFeedbacki_v_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbacki_v, (xfb, pname, index, param), (GLuint xfb, GLenum pname, GLuint index, GLint *param))
#define glGetTransformFeedbacki_v_defined
#endif
#ifndef glGetTransformFeedbackiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetTransformFeedbackiv, (xfb, pname, param), (GLuint xfb, GLenum pname, GLint *param))
#define glGetTransformFeedbackiv_defined
#endif
#ifndef glGetVertexArrayIndexed64iv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIndexed64iv, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param))
#define glGetVertexArrayIndexed64iv_defined
#endif
#ifndef glGetVertexArrayIndexediv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayIndexediv, (vaobj, index, pname, param), (GLuint vaobj, GLuint index, GLenum pname, GLint *param))
#define glGetVertexArrayIndexediv_defined
#endif
#ifndef glGetVertexArrayiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetVertexArrayiv, (vaobj, pname, param), (GLuint vaobj, GLenum pname, GLint *param))
#define glGetVertexArrayiv_defined
#endif
#ifndef glGetnCompressedTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnCompressedTexImage, (target, lod, bufSize, pixels), (GLenum target, GLint lod, GLsizei bufSize, void *pixels))
#define glGetnCompressedTexImage_defined
#endif
#ifndef glGetnTexImage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnTexImage, (target, level, format, type, bufSize, pixels), (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels))
#define glGetnTexImage_defined
#endif
#ifndef glGetnUniformdv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformdv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLdouble *params))
#define glGetnUniformdv_defined
#endif
#ifndef glGetnUniformfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformfv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfv_defined
#endif
#ifndef glGetnUniformiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformiv_defined
#endif
#ifndef glGetnUniformuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glGetnUniformuiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuiv_defined
#endif
#ifndef glInvalidateNamedFramebufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateNamedFramebufferData, (framebuffer, numAttachments, attachments), (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateNamedFramebufferData_defined
#endif
#ifndef glInvalidateNamedFramebufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glInvalidateNamedFramebufferSubData, (framebuffer, numAttachments, attachments, x, y, width, height), (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateNamedFramebufferSubData_defined
#endif
#ifndef glMapNamedBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBuffer, (buffer, access), (GLuint buffer, GLenum access))
#define glMapNamedBuffer_defined
#endif
#ifndef glMapNamedBufferRange_defined
GLATTER_FBLOCK(return, GL, GLAPI, void *, APIENTRY, glMapNamedBufferRange, (buffer, offset, length, access), (GLuint buffer, GLintptr offset, GLsizei length, GLbitfield access))
#define glMapNamedBufferRange_defined
#endif
#ifndef glMemoryBarrierByRegion_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glMemoryBarrierByRegion, (barriers), (GLbitfield barriers))
#define glMemoryBarrierByRegion_defined
#endif
#ifndef glNamedBufferData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferData, (buffer, size, data, usage), (GLuint buffer, GLsizei size, const void *data, GLenum usage))
#define glNamedBufferData_defined
#endif
#ifndef glNamedBufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferStorage, (buffer, size, data, flags), (GLuint buffer, GLsizei size, const void *data, GLbitfield flags))
#define glNamedBufferStorage_defined
#endif
#ifndef glNamedBufferSubData_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedBufferSubData, (buffer, offset, size, data), (GLuint buffer, GLintptr offset, GLsizei size, const void *data))
#define glNamedBufferSubData_defined
#endif
#ifndef glNamedFramebufferDrawBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferDrawBuffer, (framebuffer, buf), (GLuint framebuffer, GLenum buf))
#define glNamedFramebufferDrawBuffer_defined
#endif
#ifndef glNamedFramebufferDrawBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferDrawBuffers, (framebuffer, n, bufs), (GLuint framebuffer, GLsizei n, const GLenum *bufs))
#define glNamedFramebufferDrawBuffers_defined
#endif
#ifndef glNamedFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferParameteri, (framebuffer, pname, param), (GLuint framebuffer, GLenum pname, GLint param))
#define glNamedFramebufferParameteri_defined
#endif
#ifndef glNamedFramebufferReadBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferReadBuffer, (framebuffer, src), (GLuint framebuffer, GLenum src))
#define glNamedFramebufferReadBuffer_defined
#endif
#ifndef glNamedFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferRenderbuffer, (framebuffer, attachment, renderbuffertarget, renderbuffer), (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glNamedFramebufferRenderbuffer_defined
#endif
#ifndef glNamedFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTexture, (framebuffer, attachment, texture, level), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level))
#define glNamedFramebufferTexture_defined
#endif
#ifndef glNamedFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedFramebufferTextureLayer, (framebuffer, attachment, texture, level, layer), (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glNamedFramebufferTextureLayer_defined
#endif
#ifndef glNamedRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorage, (renderbuffer, internalformat, width, height), (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorage_defined
#endif
#ifndef glNamedRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glNamedRenderbufferStorageMultisample, (renderbuffer, samples, internalformat, width, height), (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisample_defined
#endif
#ifndef glReadnPixels_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glReadnPixels, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixels_defined
#endif
#ifndef glTextureBarrier_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBarrier, (), (void))
#define glTextureBarrier_defined
#endif
#ifndef glTextureBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBuffer, (texture, internalformat, buffer), (GLuint texture, GLenum internalformat, GLuint buffer))
#define glTextureBuffer_defined
#endif
#ifndef glTextureBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureBufferRange, (texture, internalformat, buffer, offset, size), (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizei size))
#define glTextureBufferRange_defined
#endif
#ifndef glTextureParameterIiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIiv, (texture, pname, params), (GLuint texture, GLenum pname, const GLint *params))
#define glTextureParameterIiv_defined
#endif
#ifndef glTextureParameterIuiv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterIuiv, (texture, pname, params), (GLuint texture, GLenum pname, const GLuint *params))
#define glTextureParameterIuiv_defined
#endif
#ifndef glTextureParameterf_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterf, (texture, pname, param), (GLuint texture, GLenum pname, GLfloat param))
#define glTextureParameterf_defined
#endif
#ifndef glTextureParameterfv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameterfv, (texture, pname, param), (GLuint texture, GLenum pname, const GLfloat *param))
#define glTextureParameterfv_defined
#endif
#ifndef glTextureParameteri_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteri, (texture, pname, param), (GLuint texture, GLenum pname, GLint param))
#define glTextureParameteri_defined
#endif
#ifndef glTextureParameteriv_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureParameteriv, (texture, pname, param), (GLuint texture, GLenum pname, const GLint *param))
#define glTextureParameteriv_defined
#endif
#ifndef glTextureStorage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage1D, (texture, levels, internalformat, width), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTextureStorage1D_defined
#endif
#ifndef glTextureStorage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2D, (texture, levels, internalformat, width, height), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTextureStorage2D_defined
#endif
#ifndef glTextureStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage2DMultisample, (texture, samples, internalformat, width, height, fixedsamplelocations), (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTextureStorage2DMultisample_defined
#endif
#ifndef glTextureStorage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3D, (texture, levels, internalformat, width, height, depth), (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTextureStorage3D_defined
#endif
#ifndef glTextureStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureStorage3DMultisample, (texture, samples, internalformat, width, height, depth, fixedsamplelocations), (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTextureStorage3DMultisample_defined
#endif
#ifndef glTextureSubImage1D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage1D, (texture, level, xoffset, width, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage1D_defined
#endif
#ifndef glTextureSubImage2D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage2D, (texture, level, xoffset, yoffset, width, height, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage2D_defined
#endif
#ifndef glTextureSubImage3D_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTextureSubImage3D, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTextureSubImage3D_defined
#endif
#ifndef glTransformFeedbackBufferBase_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackBufferBase, (xfb, index, buffer), (GLuint xfb, GLuint index, GLuint buffer))
#define glTransformFeedbackBufferBase_defined
#endif
#ifndef glTransformFeedbackBufferRange_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glTransformFeedbackBufferRange, (xfb, index, buffer, offset, size), (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizei size))
#define glTransformFeedbackBufferRange_defined
#endif
#ifndef glUnmapNamedBuffer_defined
GLATTER_FBLOCK(return, GL, GLAPI, GLboolean, APIENTRY, glUnmapNamedBuffer, (buffer), (GLuint buffer))
#define glUnmapNamedBuffer_defined
#endif
#ifndef glVertexArrayAttribBinding_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribBinding, (vaobj, attribindex, bindingindex), (GLuint vaobj, GLuint attribindex, GLuint bindingindex))
#define glVertexArrayAttribBinding_defined
#endif
#ifndef glVertexArrayAttribFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribFormat, (vaobj, attribindex, size, type, normalized, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexArrayAttribFormat_defined
#endif
#ifndef glVertexArrayAttribIFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribIFormat, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayAttribIFormat_defined
#endif
#ifndef glVertexArrayAttribLFormat_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayAttribLFormat, (vaobj, attribindex, size, type, relativeoffset), (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexArrayAttribLFormat_defined
#endif
#ifndef glVertexArrayBindingDivisor_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayBindingDivisor, (vaobj, bindingindex, divisor), (GLuint vaobj, GLuint bindingindex, GLuint divisor))
#define glVertexArrayBindingDivisor_defined
#endif
#ifndef glVertexArrayElementBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayElementBuffer, (vaobj, buffer), (GLuint vaobj, GLuint buffer))
#define glVertexArrayElementBuffer_defined
#endif
#ifndef glVertexArrayVertexBuffer_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBuffer, (vaobj, bindingindex, buffer, offset, stride), (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glVertexArrayVertexBuffer_defined
#endif
#ifndef glVertexArrayVertexBuffers_defined
GLATTER_FBLOCK(, GL, GLAPI, void, APIENTRY, glVertexArrayVertexBuffers, (vaobj, first, count, buffers, offsets, strides), (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides))
#define glVertexArrayVertexBuffers_defined
#endif
#endif // defined(__glcorearb_h_)
#endif // defined(GL_VERSION_4_5)
#endif // GLATTER_GL

