/*
Copyright 2017 Ioannis Makris

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// This file was generated by glatter.py script.



#ifdef GLATTER_EGL
#if defined(__egl_h_)
#if defined(EGL_VERSION_1_0)
#define eglChooseConfig(dpy, attrib_list, configs, config_size, num_config) glatter_eglChooseConfig((dpy), (attrib_list), (configs), (config_size), (num_config))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglChooseConfig, (EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config))
#define eglCopyBuffers(dpy, surface, target) glatter_eglCopyBuffers((dpy), (surface), (target))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCopyBuffers, (EGLDisplay dpy, EGLSurface surface, EGLNativePixmapType target))
#define eglCreateContext(dpy, config, share_context, attrib_list) glatter_eglCreateContext((dpy), (config), (share_context), (attrib_list))
GLATTER_UBLOCK(EGLContext, EGLAPIENTRY, eglCreateContext, (EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list))
#define eglCreatePbufferSurface(dpy, config, attrib_list) glatter_eglCreatePbufferSurface((dpy), (config), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePbufferSurface, (EGLDisplay dpy, EGLConfig config, const EGLint *attrib_list))
#define eglCreatePixmapSurface(dpy, config, pixmap, attrib_list) glatter_eglCreatePixmapSurface((dpy), (config), (pixmap), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePixmapSurface, (EGLDisplay dpy, EGLConfig config, EGLNativePixmapType pixmap, const EGLint *attrib_list))
#define eglCreateWindowSurface(dpy, config, win, attrib_list) glatter_eglCreateWindowSurface((dpy), (config), (win), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreateWindowSurface, (EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint *attrib_list))
#define eglDestroyContext(dpy, ctx) glatter_eglDestroyContext((dpy), (ctx))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyContext, (EGLDisplay dpy, EGLContext ctx))
#define eglDestroySurface(dpy, surface) glatter_eglDestroySurface((dpy), (surface))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySurface, (EGLDisplay dpy, EGLSurface surface))
#define eglGetConfigAttrib(dpy, config, attribute, value) glatter_eglGetConfigAttrib((dpy), (config), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetConfigAttrib, (EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint *value))
#define eglGetConfigs(dpy, configs, config_size, num_config) glatter_eglGetConfigs((dpy), (configs), (config_size), (num_config))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetConfigs, (EGLDisplay dpy, EGLConfig *configs, EGLint config_size, EGLint *num_config))
#define eglGetCurrentDisplay() glatter_eglGetCurrentDisplay()
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetCurrentDisplay, (void))
#define eglGetCurrentSurface(readdraw) glatter_eglGetCurrentSurface((readdraw))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglGetCurrentSurface, (EGLint readdraw))
#define eglGetDisplay(display_id) glatter_eglGetDisplay((display_id))
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetDisplay, (EGLNativeDisplayType display_id))
#define eglGetError() glatter_eglGetError()
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglGetError, (void))
#define eglGetProcAddress(procname) glatter_eglGetProcAddress((procname))
GLATTER_UBLOCK(__eglMustCastToProperFunctionPointerType, EGLAPIENTRY, eglGetProcAddress, (const char *procname))
#define eglInitialize(dpy, major, minor) glatter_eglInitialize((dpy), (major), (minor))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglInitialize, (EGLDisplay dpy, EGLint *major, EGLint *minor))
#define eglMakeCurrent(dpy, draw, read, ctx) glatter_eglMakeCurrent((dpy), (draw), (read), (ctx))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglMakeCurrent, (EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx))
#define eglQueryContext(dpy, ctx, attribute, value) glatter_eglQueryContext((dpy), (ctx), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryContext, (EGLDisplay dpy, EGLContext ctx, EGLint attribute, EGLint *value))
#define eglQueryString(dpy, name) glatter_eglQueryString((dpy), (name))
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryString, (EGLDisplay dpy, EGLint name))
#define eglQuerySurface(dpy, surface, attribute, value) glatter_eglQuerySurface((dpy), (surface), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQuerySurface, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint *value))
#define eglSwapBuffers(dpy, surface) glatter_eglSwapBuffers((dpy), (surface))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffers, (EGLDisplay dpy, EGLSurface surface))
#define eglTerminate(dpy) glatter_eglTerminate((dpy))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglTerminate, (EGLDisplay dpy))
#define eglWaitGL() glatter_eglWaitGL()
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitGL, (void))
#define eglWaitNative(engine) glatter_eglWaitNative((engine))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitNative, (EGLint engine))
#endif // defined(EGL_VERSION_1_0)
#if defined(EGL_VERSION_1_1)
#define eglBindTexImage(dpy, surface, buffer) glatter_eglBindTexImage((dpy), (surface), (buffer))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglBindTexImage, (EGLDisplay dpy, EGLSurface surface, EGLint buffer))
#define eglReleaseTexImage(dpy, surface, buffer) glatter_eglReleaseTexImage((dpy), (surface), (buffer))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglReleaseTexImage, (EGLDisplay dpy, EGLSurface surface, EGLint buffer))
#define eglSurfaceAttrib(dpy, surface, attribute, value) glatter_eglSurfaceAttrib((dpy), (surface), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSurfaceAttrib, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value))
#define eglSwapInterval(dpy, interval) glatter_eglSwapInterval((dpy), (interval))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapInterval, (EGLDisplay dpy, EGLint interval))
#endif // defined(EGL_VERSION_1_1)
#if defined(EGL_VERSION_1_2)
#define eglBindAPI(api) glatter_eglBindAPI((api))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglBindAPI, (EGLenum api))
#define eglCreatePbufferFromClientBuffer(dpy, buftype, buffer, config, attrib_list) glatter_eglCreatePbufferFromClientBuffer((dpy), (buftype), (buffer), (config), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePbufferFromClientBuffer, (EGLDisplay dpy, EGLenum buftype, EGLClientBuffer buffer, EGLConfig config, const EGLint *attrib_list))
#define eglQueryAPI() glatter_eglQueryAPI()
GLATTER_UBLOCK(EGLenum, EGLAPIENTRY, eglQueryAPI, (void))
#define eglReleaseThread() glatter_eglReleaseThread()
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglReleaseThread, (void))
#define eglWaitClient() glatter_eglWaitClient()
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitClient, (void))
#endif // defined(EGL_VERSION_1_2)
#if defined(EGL_VERSION_1_4)
#define eglGetCurrentContext() glatter_eglGetCurrentContext()
GLATTER_UBLOCK(EGLContext, EGLAPIENTRY, eglGetCurrentContext, (void))
#endif // defined(EGL_VERSION_1_4)
#if defined(EGL_VERSION_1_5)
#define eglClientWaitSync(dpy, sync, flags, timeout) glatter_eglClientWaitSync((dpy), (sync), (flags), (timeout))
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglClientWaitSync, (EGLDisplay dpy, EGLSync sync, EGLint flags, EGLTime timeout))
#define eglCreateImage(dpy, ctx, target, buffer, attrib_list) glatter_eglCreateImage((dpy), (ctx), (target), (buffer), (attrib_list))
GLATTER_UBLOCK(EGLImage, EGLAPIENTRY, eglCreateImage, (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLAttrib *attrib_list))
#define eglCreatePlatformPixmapSurface(dpy, config, native_pixmap, attrib_list) glatter_eglCreatePlatformPixmapSurface((dpy), (config), (native_pixmap), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformPixmapSurface, (EGLDisplay dpy, EGLConfig config, void *native_pixmap, const EGLAttrib *attrib_list))
#define eglCreatePlatformWindowSurface(dpy, config, native_window, attrib_list) glatter_eglCreatePlatformWindowSurface((dpy), (config), (native_window), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformWindowSurface, (EGLDisplay dpy, EGLConfig config, void *native_window, const EGLAttrib *attrib_list))
#define eglCreateSync(dpy, type, attrib_list) glatter_eglCreateSync((dpy), (type), (attrib_list))
GLATTER_UBLOCK(EGLSync, EGLAPIENTRY, eglCreateSync, (EGLDisplay dpy, EGLenum type, const EGLAttrib *attrib_list))
#define eglDestroyImage(dpy, image) glatter_eglDestroyImage((dpy), (image))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyImage, (EGLDisplay dpy, EGLImage image))
#define eglDestroySync(dpy, sync) glatter_eglDestroySync((dpy), (sync))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySync, (EGLDisplay dpy, EGLSync sync))
#define eglGetPlatformDisplay(platform, native_display, attrib_list) glatter_eglGetPlatformDisplay((platform), (native_display), (attrib_list))
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetPlatformDisplay, (EGLenum platform, void *native_display, const EGLAttrib *attrib_list))
#define eglGetSyncAttrib(dpy, sync, attribute, value) glatter_eglGetSyncAttrib((dpy), (sync), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetSyncAttrib, (EGLDisplay dpy, EGLSync sync, EGLint attribute, EGLAttrib *value))
#define eglWaitSync(dpy, sync, flags) glatter_eglWaitSync((dpy), (sync), (flags))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitSync, (EGLDisplay dpy, EGLSync sync, EGLint flags))
#endif // defined(EGL_VERSION_1_5)
#endif // defined(__egl_h_)
#if defined(__eglext_h_)
#if defined(EGL_ANDROID_blob_cache)
#define eglSetBlobCacheFuncsANDROID(dpy, set, get) glatter_eglSetBlobCacheFuncsANDROID((dpy), (set), (get))
GLATTER_UBLOCK(void, EGLAPIENTRY, eglSetBlobCacheFuncsANDROID, (EGLDisplay dpy, EGLSetBlobFuncANDROID set, EGLGetBlobFuncANDROID get))
#endif // defined(EGL_ANDROID_blob_cache)
#if defined(EGL_ANDROID_create_native_client_buffer)
#define eglCreateNativeClientBufferANDROID(attrib_list) glatter_eglCreateNativeClientBufferANDROID((attrib_list))
GLATTER_UBLOCK(EGLClientBuffer, EGLAPIENTRY, eglCreateNativeClientBufferANDROID, (const EGLint *attrib_list))
#endif // defined(EGL_ANDROID_create_native_client_buffer)
#if defined(EGL_ANDROID_native_fence_sync)
#define eglDupNativeFenceFDANDROID(dpy, sync) glatter_eglDupNativeFenceFDANDROID((dpy), (sync))
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglDupNativeFenceFDANDROID, (EGLDisplay dpy, EGLSyncKHR sync))
#endif // defined(EGL_ANDROID_native_fence_sync)
#if defined(EGL_ANDROID_presentation_time)
#define eglPresentationTimeANDROID(dpy, surface, time) glatter_eglPresentationTimeANDROID((dpy), (surface), (time))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglPresentationTimeANDROID, (EGLDisplay dpy, EGLSurface surface, EGLnsecsANDROID time))
#endif // defined(EGL_ANDROID_presentation_time)
#if defined(EGL_ANGLE_query_surface_pointer)
#define eglQuerySurfacePointerANGLE(dpy, surface, attribute, value) glatter_eglQuerySurfacePointerANGLE((dpy), (surface), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQuerySurfacePointerANGLE, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, void **value))
#endif // defined(EGL_ANGLE_query_surface_pointer)
#if defined(EGL_EXT_compositor)
#define eglCompositorBindTexWindowEXT(external_win_id) glatter_eglCompositorBindTexWindowEXT((external_win_id))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorBindTexWindowEXT, (EGLint external_win_id))
#define eglCompositorSetContextAttributesEXT(external_ref_id, context_attributes, num_entries) glatter_eglCompositorSetContextAttributesEXT((external_ref_id), (context_attributes), (num_entries))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetContextAttributesEXT, (EGLint external_ref_id, const EGLint *context_attributes, EGLint num_entries))
#define eglCompositorSetContextListEXT(external_ref_ids, num_entries) glatter_eglCompositorSetContextListEXT((external_ref_ids), (num_entries))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetContextListEXT, (const EGLint *external_ref_ids, EGLint num_entries))
#define eglCompositorSetSizeEXT(external_win_id, width, height) glatter_eglCompositorSetSizeEXT((external_win_id), (width), (height))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetSizeEXT, (EGLint external_win_id, EGLint width, EGLint height))
#define eglCompositorSetWindowAttributesEXT(external_win_id, window_attributes, num_entries) glatter_eglCompositorSetWindowAttributesEXT((external_win_id), (window_attributes), (num_entries))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetWindowAttributesEXT, (EGLint external_win_id, const EGLint *window_attributes, EGLint num_entries))
#define eglCompositorSetWindowListEXT(external_ref_id, external_win_ids, num_entries) glatter_eglCompositorSetWindowListEXT((external_ref_id), (external_win_ids), (num_entries))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetWindowListEXT, (EGLint external_ref_id, const EGLint *external_win_ids, EGLint num_entries))
#define eglCompositorSwapPolicyEXT(external_win_id, policy) glatter_eglCompositorSwapPolicyEXT((external_win_id), (policy))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSwapPolicyEXT, (EGLint external_win_id, EGLint policy))
#endif // defined(EGL_EXT_compositor)
#if defined(EGL_EXT_device_base)
#define eglQueryDeviceAttribEXT(device, attribute, value) glatter_eglQueryDeviceAttribEXT((device), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDeviceAttribEXT, (EGLDeviceEXT device, EGLint attribute, EGLAttrib *value))
#define eglQueryDeviceStringEXT(device, name) glatter_eglQueryDeviceStringEXT((device), (name))
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryDeviceStringEXT, (EGLDeviceEXT device, EGLint name))
#define eglQueryDevicesEXT(max_devices, devices, num_devices) glatter_eglQueryDevicesEXT((max_devices), (devices), (num_devices))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDevicesEXT, (EGLint max_devices, EGLDeviceEXT *devices, EGLint *num_devices))
#define eglQueryDisplayAttribEXT(dpy, attribute, value) glatter_eglQueryDisplayAttribEXT((dpy), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDisplayAttribEXT, (EGLDisplay dpy, EGLint attribute, EGLAttrib *value))
#endif // defined(EGL_EXT_device_base)
#if defined(EGL_EXT_image_dma_buf_import_modifiers)
#define eglQueryDmaBufFormatsEXT(dpy, max_formats, formats, num_formats) glatter_eglQueryDmaBufFormatsEXT((dpy), (max_formats), (formats), (num_formats))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDmaBufFormatsEXT, (EGLDisplay dpy, EGLint max_formats, EGLint *formats, EGLint *num_formats))
#define eglQueryDmaBufModifiersEXT(dpy, format, max_modifiers, modifiers, external_only, num_modifiers) glatter_eglQueryDmaBufModifiersEXT((dpy), (format), (max_modifiers), (modifiers), (external_only), (num_modifiers))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDmaBufModifiersEXT, (EGLDisplay dpy, EGLint format, EGLint max_modifiers, EGLuint64KHR *modifiers, EGLBoolean *external_only, EGLint *num_modifiers))
#endif // defined(EGL_EXT_image_dma_buf_import_modifiers)
#if defined(EGL_EXT_output_base)
#define eglGetOutputLayersEXT(dpy, attrib_list, layers, max_layers, num_layers) glatter_eglGetOutputLayersEXT((dpy), (attrib_list), (layers), (max_layers), (num_layers))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetOutputLayersEXT, (EGLDisplay dpy, const EGLAttrib *attrib_list, EGLOutputLayerEXT *layers, EGLint max_layers, EGLint *num_layers))
#define eglGetOutputPortsEXT(dpy, attrib_list, ports, max_ports, num_ports) glatter_eglGetOutputPortsEXT((dpy), (attrib_list), (ports), (max_ports), (num_ports))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetOutputPortsEXT, (EGLDisplay dpy, const EGLAttrib *attrib_list, EGLOutputPortEXT *ports, EGLint max_ports, EGLint *num_ports))
#define eglOutputLayerAttribEXT(dpy, layer, attribute, value) glatter_eglOutputLayerAttribEXT((dpy), (layer), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglOutputLayerAttribEXT, (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint attribute, EGLAttrib value))
#define eglOutputPortAttribEXT(dpy, port, attribute, value) glatter_eglOutputPortAttribEXT((dpy), (port), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglOutputPortAttribEXT, (EGLDisplay dpy, EGLOutputPortEXT port, EGLint attribute, EGLAttrib value))
#define eglQueryOutputLayerAttribEXT(dpy, layer, attribute, value) glatter_eglQueryOutputLayerAttribEXT((dpy), (layer), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryOutputLayerAttribEXT, (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint attribute, EGLAttrib *value))
#define eglQueryOutputLayerStringEXT(dpy, layer, name) glatter_eglQueryOutputLayerStringEXT((dpy), (layer), (name))
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryOutputLayerStringEXT, (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint name))
#define eglQueryOutputPortAttribEXT(dpy, port, attribute, value) glatter_eglQueryOutputPortAttribEXT((dpy), (port), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryOutputPortAttribEXT, (EGLDisplay dpy, EGLOutputPortEXT port, EGLint attribute, EGLAttrib *value))
#define eglQueryOutputPortStringEXT(dpy, port, name) glatter_eglQueryOutputPortStringEXT((dpy), (port), (name))
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryOutputPortStringEXT, (EGLDisplay dpy, EGLOutputPortEXT port, EGLint name))
#endif // defined(EGL_EXT_output_base)
#if defined(EGL_EXT_platform_base)
#define eglCreatePlatformPixmapSurfaceEXT(dpy, config, native_pixmap, attrib_list) glatter_eglCreatePlatformPixmapSurfaceEXT((dpy), (config), (native_pixmap), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformPixmapSurfaceEXT, (EGLDisplay dpy, EGLConfig config, void *native_pixmap, const EGLint *attrib_list))
#define eglCreatePlatformWindowSurfaceEXT(dpy, config, native_window, attrib_list) glatter_eglCreatePlatformWindowSurfaceEXT((dpy), (config), (native_window), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformWindowSurfaceEXT, (EGLDisplay dpy, EGLConfig config, void *native_window, const EGLint *attrib_list))
#define eglGetPlatformDisplayEXT(platform, native_display, attrib_list) glatter_eglGetPlatformDisplayEXT((platform), (native_display), (attrib_list))
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetPlatformDisplayEXT, (EGLenum platform, void *native_display, const EGLint *attrib_list))
#endif // defined(EGL_EXT_platform_base)
#if defined(EGL_EXT_stream_consumer_egloutput)
#define eglStreamConsumerOutputEXT(dpy, stream, layer) glatter_eglStreamConsumerOutputEXT((dpy), (stream), (layer))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerOutputEXT, (EGLDisplay dpy, EGLStreamKHR stream, EGLOutputLayerEXT layer))
#endif // defined(EGL_EXT_stream_consumer_egloutput)
#if defined(EGL_EXT_swap_buffers_with_damage)
#define eglSwapBuffersWithDamageEXT(dpy, surface, rects, n_rects) glatter_eglSwapBuffersWithDamageEXT((dpy), (surface), (rects), (n_rects))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersWithDamageEXT, (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects))
#endif // defined(EGL_EXT_swap_buffers_with_damage)
#if defined(EGL_HI_clientpixmap)
#define eglCreatePixmapSurfaceHI(dpy, config, pixmap) glatter_eglCreatePixmapSurfaceHI((dpy), (config), (pixmap))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePixmapSurfaceHI, (EGLDisplay dpy, EGLConfig config, struct EGLClientPixmapHI *pixmap))
#endif // defined(EGL_HI_clientpixmap)
#if defined(EGL_KHR_cl_event2)
#define eglCreateSync64KHR(dpy, type, attrib_list) glatter_eglCreateSync64KHR((dpy), (type), (attrib_list))
GLATTER_UBLOCK(EGLSyncKHR, EGLAPIENTRY, eglCreateSync64KHR, (EGLDisplay dpy, EGLenum type, const EGLAttribKHR *attrib_list))
#endif // defined(EGL_KHR_cl_event2)
#if defined(EGL_KHR_debug)
#define eglDebugMessageControlKHR(callback, attrib_list) glatter_eglDebugMessageControlKHR((callback), (attrib_list))
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglDebugMessageControlKHR, (EGLDEBUGPROCKHR callback, const EGLAttrib *attrib_list))
#define eglLabelObjectKHR(display, objectType, object, label) glatter_eglLabelObjectKHR((display), (objectType), (object), (label))
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglLabelObjectKHR, (EGLDisplay display, EGLenum objectType, EGLObjectKHR object, EGLLabelKHR label))
#define eglQueryDebugKHR(attribute, value) glatter_eglQueryDebugKHR((attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDebugKHR, (EGLint attribute, EGLAttrib *value))
#endif // defined(EGL_KHR_debug)
#if defined(EGL_KHR_fence_sync)
#if defined(KHRONOS_SUPPORT_INT64)
#define eglClientWaitSyncKHR(dpy, sync, flags, timeout) glatter_eglClientWaitSyncKHR((dpy), (sync), (flags), (timeout))
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglClientWaitSyncKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, EGLTimeKHR timeout))
#define eglCreateSyncKHR(dpy, type, attrib_list) glatter_eglCreateSyncKHR((dpy), (type), (attrib_list))
GLATTER_UBLOCK(EGLSyncKHR, EGLAPIENTRY, eglCreateSyncKHR, (EGLDisplay dpy, EGLenum type, const EGLint *attrib_list))
#define eglDestroySyncKHR(dpy, sync) glatter_eglDestroySyncKHR((dpy), (sync))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySyncKHR, (EGLDisplay dpy, EGLSyncKHR sync))
#define eglGetSyncAttribKHR(dpy, sync, attribute, value) glatter_eglGetSyncAttribKHR((dpy), (sync), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetSyncAttribKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLint attribute, EGLint *value))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_fence_sync)
#if defined(EGL_KHR_image)
#define eglCreateImageKHR(dpy, ctx, target, buffer, attrib_list) glatter_eglCreateImageKHR((dpy), (ctx), (target), (buffer), (attrib_list))
GLATTER_UBLOCK(EGLImageKHR, EGLAPIENTRY, eglCreateImageKHR, (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list))
#define eglDestroyImageKHR(dpy, image) glatter_eglDestroyImageKHR((dpy), (image))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyImageKHR, (EGLDisplay dpy, EGLImageKHR image))
#endif // defined(EGL_KHR_image)
#if defined(EGL_KHR_lock_surface)
#define eglLockSurfaceKHR(dpy, surface, attrib_list) glatter_eglLockSurfaceKHR((dpy), (surface), (attrib_list))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglLockSurfaceKHR, (EGLDisplay dpy, EGLSurface surface, const EGLint *attrib_list))
#define eglUnlockSurfaceKHR(dpy, surface) glatter_eglUnlockSurfaceKHR((dpy), (surface))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglUnlockSurfaceKHR, (EGLDisplay dpy, EGLSurface surface))
#endif // defined(EGL_KHR_lock_surface)
#if defined(EGL_KHR_lock_surface3)
#define eglQuerySurface64KHR(dpy, surface, attribute, value) glatter_eglQuerySurface64KHR((dpy), (surface), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQuerySurface64KHR, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLAttribKHR *value))
#endif // defined(EGL_KHR_lock_surface3)
#if defined(EGL_KHR_partial_update)
#define eglSetDamageRegionKHR(dpy, surface, rects, n_rects) glatter_eglSetDamageRegionKHR((dpy), (surface), (rects), (n_rects))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSetDamageRegionKHR, (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects))
#endif // defined(EGL_KHR_partial_update)
#if defined(EGL_KHR_reusable_sync)
#if defined(KHRONOS_SUPPORT_INT64)
#define eglSignalSyncKHR(dpy, sync, mode) glatter_eglSignalSyncKHR((dpy), (sync), (mode))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSignalSyncKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_reusable_sync)
#if defined(EGL_KHR_stream)
#if defined(KHRONOS_SUPPORT_INT64)
#define eglCreateStreamKHR(dpy, attrib_list) glatter_eglCreateStreamKHR((dpy), (attrib_list))
GLATTER_UBLOCK(EGLStreamKHR, EGLAPIENTRY, eglCreateStreamKHR, (EGLDisplay dpy, const EGLint *attrib_list))
#define eglDestroyStreamKHR(dpy, stream) glatter_eglDestroyStreamKHR((dpy), (stream))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyStreamKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#define eglQueryStreamKHR(dpy, stream, attribute, value) glatter_eglQueryStreamKHR((dpy), (stream), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint *value))
#define eglQueryStreamu64KHR(dpy, stream, attribute, value) glatter_eglQueryStreamu64KHR((dpy), (stream), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamu64KHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLuint64KHR *value))
#define eglStreamAttribKHR(dpy, stream, attribute, value) glatter_eglStreamAttribKHR((dpy), (stream), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint value))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_stream)
#if defined(EGL_KHR_stream_attrib)
#if defined(KHRONOS_SUPPORT_INT64)
#define eglCreateStreamAttribKHR(dpy, attrib_list) glatter_eglCreateStreamAttribKHR((dpy), (attrib_list))
GLATTER_UBLOCK(EGLStreamKHR, EGLAPIENTRY, eglCreateStreamAttribKHR, (EGLDisplay dpy, const EGLAttrib *attrib_list))
#define eglQueryStreamAttribKHR(dpy, stream, attribute, value) glatter_eglQueryStreamAttribKHR((dpy), (stream), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLAttrib *value))
#define eglSetStreamAttribKHR(dpy, stream, attribute, value) glatter_eglSetStreamAttribKHR((dpy), (stream), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSetStreamAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLAttrib value))
#define eglStreamConsumerAcquireAttribKHR(dpy, stream, attrib_list) glatter_eglStreamConsumerAcquireAttribKHR((dpy), (stream), (attrib_list))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerAcquireAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, const EGLAttrib *attrib_list))
#define eglStreamConsumerReleaseAttribKHR(dpy, stream, attrib_list) glatter_eglStreamConsumerReleaseAttribKHR((dpy), (stream), (attrib_list))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerReleaseAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, const EGLAttrib *attrib_list))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_stream_attrib)
#if defined(EGL_KHR_stream_consumer_gltexture)
#if defined(EGL_KHR_stream)
#define eglStreamConsumerAcquireKHR(dpy, stream) glatter_eglStreamConsumerAcquireKHR((dpy), (stream))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerAcquireKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#define eglStreamConsumerGLTextureExternalKHR(dpy, stream) glatter_eglStreamConsumerGLTextureExternalKHR((dpy), (stream))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerGLTextureExternalKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#define eglStreamConsumerReleaseKHR(dpy, stream) glatter_eglStreamConsumerReleaseKHR((dpy), (stream))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerReleaseKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_consumer_gltexture)
#if defined(EGL_KHR_stream_cross_process_fd)
#if defined(EGL_KHR_stream)
#define eglCreateStreamFromFileDescriptorKHR(dpy, file_descriptor) glatter_eglCreateStreamFromFileDescriptorKHR((dpy), (file_descriptor))
GLATTER_UBLOCK(EGLStreamKHR, EGLAPIENTRY, eglCreateStreamFromFileDescriptorKHR, (EGLDisplay dpy, EGLNativeFileDescriptorKHR file_descriptor))
#define eglGetStreamFileDescriptorKHR(dpy, stream) glatter_eglGetStreamFileDescriptorKHR((dpy), (stream))
GLATTER_UBLOCK(EGLNativeFileDescriptorKHR, EGLAPIENTRY, eglGetStreamFileDescriptorKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_cross_process_fd)
#if defined(EGL_KHR_stream_fifo)
#if defined(EGL_KHR_stream)
#define eglQueryStreamTimeKHR(dpy, stream, attribute, value) glatter_eglQueryStreamTimeKHR((dpy), (stream), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamTimeKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLTimeKHR *value))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_fifo)
#if defined(EGL_KHR_stream_producer_eglsurface)
#if defined(EGL_KHR_stream)
#define eglCreateStreamProducerSurfaceKHR(dpy, config, stream, attrib_list) glatter_eglCreateStreamProducerSurfaceKHR((dpy), (config), (stream), (attrib_list))
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreateStreamProducerSurfaceKHR, (EGLDisplay dpy, EGLConfig config, EGLStreamKHR stream, const EGLint *attrib_list))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_producer_eglsurface)
#if defined(EGL_KHR_swap_buffers_with_damage)
#define eglSwapBuffersWithDamageKHR(dpy, surface, rects, n_rects) glatter_eglSwapBuffersWithDamageKHR((dpy), (surface), (rects), (n_rects))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersWithDamageKHR, (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects))
#endif // defined(EGL_KHR_swap_buffers_with_damage)
#if defined(EGL_KHR_wait_sync)
#define eglWaitSyncKHR(dpy, sync, flags) glatter_eglWaitSyncKHR((dpy), (sync), (flags))
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglWaitSyncKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags))
#endif // defined(EGL_KHR_wait_sync)
#if defined(EGL_MESA_drm_image)
#define eglCreateDRMImageMESA(dpy, attrib_list) glatter_eglCreateDRMImageMESA((dpy), (attrib_list))
GLATTER_UBLOCK(EGLImageKHR, EGLAPIENTRY, eglCreateDRMImageMESA, (EGLDisplay dpy, const EGLint *attrib_list))
#define eglExportDRMImageMESA(dpy, image, name, handle, stride) glatter_eglExportDRMImageMESA((dpy), (image), (name), (handle), (stride))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglExportDRMImageMESA, (EGLDisplay dpy, EGLImageKHR image, EGLint *name, EGLint *handle, EGLint *stride))
#endif // defined(EGL_MESA_drm_image)
#if defined(EGL_MESA_image_dma_buf_export)
#define eglExportDMABUFImageMESA(dpy, image, fds, strides, offsets) glatter_eglExportDMABUFImageMESA((dpy), (image), (fds), (strides), (offsets))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglExportDMABUFImageMESA, (EGLDisplay dpy, EGLImageKHR image, int *fds, EGLint *strides, EGLint *offsets))
#define eglExportDMABUFImageQueryMESA(dpy, image, fourcc, num_planes, modifiers) glatter_eglExportDMABUFImageQueryMESA((dpy), (image), (fourcc), (num_planes), (modifiers))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglExportDMABUFImageQueryMESA, (EGLDisplay dpy, EGLImageKHR image, int *fourcc, int *num_planes, EGLuint64KHR *modifiers))
#endif // defined(EGL_MESA_image_dma_buf_export)
#if defined(EGL_NOK_swap_region)
#define eglSwapBuffersRegionNOK(dpy, surface, numRects, rects) glatter_eglSwapBuffersRegionNOK((dpy), (surface), (numRects), (rects))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersRegionNOK, (EGLDisplay dpy, EGLSurface surface, EGLint numRects, const EGLint *rects))
#endif // defined(EGL_NOK_swap_region)
#if defined(EGL_NOK_swap_region2)
#define eglSwapBuffersRegion2NOK(dpy, surface, numRects, rects) glatter_eglSwapBuffersRegion2NOK((dpy), (surface), (numRects), (rects))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersRegion2NOK, (EGLDisplay dpy, EGLSurface surface, EGLint numRects, const EGLint *rects))
#endif // defined(EGL_NOK_swap_region2)
#if defined(EGL_NV_native_query)
#define eglQueryNativeDisplayNV(dpy, display_id) glatter_eglQueryNativeDisplayNV((dpy), (display_id))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryNativeDisplayNV, (EGLDisplay dpy, EGLNativeDisplayType *display_id))
#define eglQueryNativePixmapNV(dpy, surf, pixmap) glatter_eglQueryNativePixmapNV((dpy), (surf), (pixmap))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryNativePixmapNV, (EGLDisplay dpy, EGLSurface surf, EGLNativePixmapType *pixmap))
#define eglQueryNativeWindowNV(dpy, surf, window) glatter_eglQueryNativeWindowNV((dpy), (surf), (window))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryNativeWindowNV, (EGLDisplay dpy, EGLSurface surf, EGLNativeWindowType *window))
#endif // defined(EGL_NV_native_query)
#if defined(EGL_NV_post_sub_buffer)
#define eglPostSubBufferNV(dpy, surface, x, y, width, height) glatter_eglPostSubBufferNV((dpy), (surface), (x), (y), (width), (height))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglPostSubBufferNV, (EGLDisplay dpy, EGLSurface surface, EGLint x, EGLint y, EGLint width, EGLint height))
#endif // defined(EGL_NV_post_sub_buffer)
#if defined(EGL_NV_stream_consumer_gltexture_yuv)
#define eglStreamConsumerGLTextureExternalAttribsNV(dpy, stream, attrib_list) glatter_eglStreamConsumerGLTextureExternalAttribsNV((dpy), (stream), (attrib_list))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerGLTextureExternalAttribsNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLAttrib *attrib_list))
#endif // defined(EGL_NV_stream_consumer_gltexture_yuv)
#if defined(EGL_NV_stream_metadata)
#define eglQueryDisplayAttribNV(dpy, attribute, value) glatter_eglQueryDisplayAttribNV((dpy), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDisplayAttribNV, (EGLDisplay dpy, EGLint attribute, EGLAttrib *value))
#define eglQueryStreamMetadataNV(dpy, stream, name, n, offset, size, data) glatter_eglQueryStreamMetadataNV((dpy), (stream), (name), (n), (offset), (size), (data))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamMetadataNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum name, EGLint n, EGLint offset, EGLint size, void *data))
#define eglSetStreamMetadataNV(dpy, stream, n, offset, size, data) glatter_eglSetStreamMetadataNV((dpy), (stream), (n), (offset), (size), (data))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSetStreamMetadataNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLint n, EGLint offset, EGLint size, const void *data))
#endif // defined(EGL_NV_stream_metadata)
#if defined(EGL_NV_stream_reset)
#define eglResetStreamNV(dpy, stream) glatter_eglResetStreamNV((dpy), (stream))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglResetStreamNV, (EGLDisplay dpy, EGLStreamKHR stream))
#endif // defined(EGL_NV_stream_reset)
#if defined(EGL_NV_stream_sync)
#define eglCreateStreamSyncNV(dpy, stream, type, attrib_list) glatter_eglCreateStreamSyncNV((dpy), (stream), (type), (attrib_list))
GLATTER_UBLOCK(EGLSyncKHR, EGLAPIENTRY, eglCreateStreamSyncNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum type, const EGLint *attrib_list))
#endif // defined(EGL_NV_stream_sync)
#if defined(EGL_NV_sync)
#if defined(KHRONOS_SUPPORT_INT64)
#define eglClientWaitSyncNV(sync, flags, timeout) glatter_eglClientWaitSyncNV((sync), (flags), (timeout))
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglClientWaitSyncNV, (EGLSyncNV sync, EGLint flags, EGLTimeNV timeout))
#define eglCreateFenceSyncNV(dpy, condition, attrib_list) glatter_eglCreateFenceSyncNV((dpy), (condition), (attrib_list))
GLATTER_UBLOCK(EGLSyncNV, EGLAPIENTRY, eglCreateFenceSyncNV, (EGLDisplay dpy, EGLenum condition, const EGLint *attrib_list))
#define eglDestroySyncNV(sync) glatter_eglDestroySyncNV((sync))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySyncNV, (EGLSyncNV sync))
#define eglFenceNV(sync) glatter_eglFenceNV((sync))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglFenceNV, (EGLSyncNV sync))
#define eglGetSyncAttribNV(sync, attribute, value) glatter_eglGetSyncAttribNV((sync), (attribute), (value))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetSyncAttribNV, (EGLSyncNV sync, EGLint attribute, EGLint *value))
#define eglSignalSyncNV(sync, mode) glatter_eglSignalSyncNV((sync), (mode))
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSignalSyncNV, (EGLSyncNV sync, EGLenum mode))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_NV_sync)
#if defined(EGL_NV_system_time)
#if defined(KHRONOS_SUPPORT_INT64)
#define eglGetSystemTimeFrequencyNV() glatter_eglGetSystemTimeFrequencyNV()
GLATTER_UBLOCK(EGLuint64NV, EGLAPIENTRY, eglGetSystemTimeFrequencyNV, (void))
#define eglGetSystemTimeNV() glatter_eglGetSystemTimeNV()
GLATTER_UBLOCK(EGLuint64NV, EGLAPIENTRY, eglGetSystemTimeNV, (void))
#endif // defined(__eglext_h_)
#endif // defined(EGL_NV_system_time)
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // GLATTER_EGL

